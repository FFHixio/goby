import "goby/common/protobuf/option_extensions.proto";
import "goby/common/protobuf/app_base_config.proto";

package goby.common.protobuf;

message LiaisonConfig
{
  optional AppBaseConfig base = 1 [(goby.field).description="params shared with all goby applications"];

  optional string http_address = 2 [default="localhost", (goby.field).description="address to bind on; same as Wt --http-address"];
  optional uint32 http_port = 3 [default=54321, (goby.field).description="address to bind on; same as Wt --http-port"];

  optional string docroot = 4 [default="/home/toby/goby/2.0/share/liaison", (goby.field).description="path to static objects (e.g. images) root; same as Wt --docroot"];
  
  optional string additional_wt_http_params = 5 [(goby.field).example="--accesslog=/tmp/access.log"];
  optional float update_freq = 6 [default=5];

  optional bool start_paused = 9 [default = false];
  
  extensions 1000 to max;
}

extend LiaisonConfig
{
  optional MOOSScopeConfig moos_scope_config = 1000;

  optional ProtobufCommanderConfig pb_commander_config = 2000;

  repeated int32 test = 2001;
}

message ProtobufCommanderConfig
{
  repeated string load_protobuf_name = 1;

  optional int32 value_width_pixels = 10 [default = 500];
  optional int32 modify_width_pixels = 11 [default = 100];
}

message MOOSScopeConfig
{
  repeated string subscription = 1;

  enum Column
  {
    COLUMN_KEY = 0;
    COLUMN_TYPE = 1;
    COLUMN_VALUE = 2;
    COLUMN_TIME = 3;
    COLUMN_COMMUNITY = 4;
    COLUMN_SOURCE = 5;
    COLUMN_SOURCE_AUX = 6;
    COLUMN_MAX = 6;
    
  }
  
  message ColumnWidthPixels
  {
    optional int32 key_width = 1 [default=150];
    optional int32 type_width = 2 [default=60];
    optional int32 value_width = 3 [default=200];
    optional int32 time_width = 4 [default=150];
    optional int32 community_width = 5 [default=80];
    optional int32 source_width = 6 [default=80];
    optional int32 source_aux_width = 7 [default=120];
  }
  optional ColumnWidthPixels column_width = 2;
  optional Column sort_by_column = 3 [default=COLUMN_KEY];
  optional bool sort_ascending = 4 [default = true];
  optional int32 scope_height = 5  [default=400];

  optional Column regex_filter_column = 6 [default=COLUMN_KEY];
  optional string regex_filter_expression = 7 [default=".*"];

  
  message HistoryConfig
  {
    required string key = 1;
    optional bool show_plot = 2 [default = false];
    optional int32 plot_width = 3 [default = 800];
    optional int32 plot_height = 4 [default = 300];
  }
  
  
  repeated HistoryConfig history = 8;
}
