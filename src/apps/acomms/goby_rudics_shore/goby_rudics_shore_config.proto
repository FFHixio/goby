import "goby/common/protobuf/option_extensions.proto";
import "goby/common/protobuf/app_base_config.proto";
import "goby/common/protobuf/zero_mq_node_config.proto";

package goby.acomms.protobuf;

message GobyRudicsShoreConfig
{
  optional AppBaseConfig base = 1;  
  required goby.common.protobuf.ZeroMQServiceConfig.Socket reply_socket = 2;
  required goby.common.protobuf.ZeroMQServiceConfig.Socket publish_socket = 3;
  required uint32 rudics_server_port = 10;
  optional uint32 mo_sbd_server_port = 11 [default = 40001];
  optional string mt_sbd_server_address = 12;
  optional uint32 mt_sbd_server_port = 13;


  message ModemIDIMEIPair
  { 
     required int32 modem_id = 1;
     required string imei = 2;
  }
  repeated ModemIDIMEIPair modem_id_to_imei = 14;
}

message DirectIPMOPreHeader
{
  required int32 protocol_ver = 1; // 1 byte
  required uint32 overall_length = 2; // 2 bytes
}


message DirectIPMOHeader
{
  required int32 iei = 1; // 1 bytes
  required uint32 length = 2; // 2 bytes
  required uint32 cdr_reference = 3; // 4 bytes
  required string imei = 4; // 15 bytes
  required uint32 session_status = 5; // 1 byte
  required uint32 momsn = 6; // 2 bytes
  required uint32 mtmsn = 7; // 2 bytes
  required uint32 time_of_session = 8; // 4 bytes
}

message DirectIPMOPayload
{
  required int32 iei = 1; // 1 bytes
  required uint32 length = 2; // 2 bytes
  required string payload = 3; // N bytes
}


message DirectIPMTHeader
{
  required int32 iei = 1; // 1 bytes
  required uint32 length = 2; // 2 bytes
  required uint32 client_id = 3; // 4 bytes
  required string imei = 4; // 15 bytes
  required uint32 disposition_flags = 5; // 2 bytes
}

message DirectIPMTPayload
{
  required int32 iei = 1; // 1 bytes
  required uint32 length = 2; // 2 bytes
  required string payload = 3; // N bytes
}

message DirectIPMTConfirmation
{
 required int32 iei = 1; // 1 bytes
 required uint32 length = 2; // 2 bytes
 required uint32 client_id = 3; // 4 bytes
 required string imei = 4; // 15 bytes 
 required uint32 auto_ref_id = 5; // 4 bytes
 required int32 status = 6; // 2 bytes
}

