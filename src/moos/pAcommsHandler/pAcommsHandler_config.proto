import "goby/moos/lib_tes_util/tes_moos_app.proto";
import "goby/acomms/protobuf/driver_base.proto";
import "goby/acomms/protobuf/queue.proto";
import "goby/acomms/protobuf/amac.proto";
import "goby/acomms/protobuf/dccl.proto";

message pAcommsHandlerConfig
{
  optional TesMoosAppConfig common = 1;
  
  // driver
  enum DriverType { DRIVER_NONE = 1; DRIVER_WHOI_MICROMODEM = 2; }
  optional DriverType driver_type = 2 [default = DRIVER_NONE];
  optional goby.acomms.protobuf.DriverConfig driver_cfg = 3;

  // amac
  optional goby.acomms.protobuf.MACConfig mac_cfg = 4;
  
  // for queue
  optional goby.acomms.protobuf.QueueManagerConfig queue_cfg = 5;

  // for dccl
  optional goby.acomms.protobuf.DCCLConfig dccl_cfg = 6;  

  // unique identifying integer (1-31) for this vehicle's modem
  // setting this will set the modem_id for all the components of goby-acomms
  required int32 modem_id = 100;
  // path to text file with entries:
  //   modem_id,name,type
  // for example
  //   3,unicorn,auv
  optional string modem_id_lookup_path = 101;

  optional bool tcp_share_enable = 200 [default = false];
  optional uint32 tcp_share_port = 201 [default = 11000];
  repeated string tcp_share_to_ip = 202;
}

