import "goby/common/option_extensions.proto";

package goby.moos.protobuf;

message TranslatorEntry
{
  required string protobuf_name = 1 [(goby.field).description="Fully qualified name (including package, if any) of a DCCL protobuf message to tag this parser to."];    
    
  message Trigger
  {
    enum Type 
    {
      TRIGGER_PUBLISH = 1;
      TRIGGER_TIME = 2;
    }
    optional Type type = 1 [default = TRIGGER_PUBLISH];
    optional string moos_var = 2;
    optional uint32 time = 3;

  }
  optional Trigger trigger = 2;



  enum ParserSerializerTechnique
  {
    TECHNIQUE_PROTOBUF_TEXT_FORMAT = 1;
    TECHNIQUE_PROTOBUF_NATIVE_ENCODED = 2;
    TECHNIQUE_COMMA_SEPARATED_KEY_EQUALS_VALUE_PAIRS = 3;
    TECHNIQUE_FORMAT = 4;
  }

  message Algorithm
  {
    required string name = 1;
    required string primary_field = 2;
    repeated string reference_field = 3;
  }
    
  message CreateParser
  {
    optional ParserSerializerTechnique technique = 1 [default = TECHNIQUE_PROTOBUF_TEXT_FORMAT];
    required string moos_var = 2;
    optional string format = 3;

    repeated Algorithm algorithm = 4;
  }

  repeated CreateParser create = 3;

  message PublishSerializer
  {
    optional ParserSerializerTechnique technique = 1 [default = TECHNIQUE_PROTOBUF_TEXT_FORMAT];
    required string moos_var = 2;
    optional string format = 3;
      
    repeated Algorithm algorithm = 4;
  }
  repeated PublishSerializer publish = 4;
}