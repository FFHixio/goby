import "goby/moos/protobuf/tes_moos_app.proto";
import "goby/acomms/protobuf/driver_base.proto";
import "goby/acomms/protobuf/queue.proto";
import "goby/acomms/protobuf/amac.proto";
import "goby/acomms/protobuf/dccl.proto";
import "goby/acomms/protobuf/modem_message.proto";
import "goby/moos/protobuf/transitional.proto";
import "goby/moos/protobuf/translator.proto";
import "goby/common/protobuf/option_extensions.proto";


message pAcommsHandlerConfig
{
  optional TesMoosAppConfig common = 1 [(goby.field).description="Configuration common to all Goby MOOS applications"]; // see tes_moos_app.proto

  // unique identifying integer (1-31) for this vehicle's modem
  // setting this will set the modem_id for all the components of goby-acomms
  required int32 modem_id = 2 [(goby.field).description="Unique number 1-31 to identify this node", (goby.field).example="1"];

  // driver
  enum DriverType { DRIVER_NONE = 1; DRIVER_WHOI_MICROMODEM = 2; DRIVER_ABC_EXAMPLE_MODEM = 3;}
  optional DriverType driver_type = 3 [default = DRIVER_NONE, (goby.field).description="Corresponding driver for the type of physical acoustic modem used"];
  optional goby.acomms.protobuf.DriverConfig driver_cfg = 4 [(goby.field).description="Configure the acoustic modem driver"]; // see acomms_driver_base.proto & acomms_mm_driver.proto

  // amac
  optional goby.acomms.protobuf.MACConfig mac_cfg = 5 [(goby.field).description="Configure the acoustic Medium Access Control"]; // see acomms_amac.proto
  
  // for queue
  optional goby.acomms.protobuf.QueueManagerConfig queue_cfg = 6 [(goby.field).description="Configure the Priority Queuing layer"]; // see acomms_queue.proto

  // for dccl
  optional goby.acomms.protobuf.DCCLConfig dccl_cfg = 7 [(goby.field).description="Configure the Dynamic Compact Control Language Encoding/Decoding unit"];  // see acomms_dccl.proto


  repeated string load_shared_library = 20 [(goby.field).description="Path to a shared library containing compiled DCCL protobuf files. Preferred over load_dccl_proto_file."];

  repeated string load_proto_file = 21 [(goby.field).description="Path to a DCCL protobuf file. Use load_shared_library when possible."];

  repeated goby.moos.protobuf.TranslatorEntry translator_entry = 22 [(goby.field).description="Describes how to trigger (generate) a DCCL message from a MOOS event and how to publish the contents of the message upon receipt"];

  repeated string multiplex_create_moos_var = 23 [(goby.field).description="Specify a MOOS variable that contains one of many TextFormat protobuf messages which are distinguished by including the Protobuf name before the message contents. e.g. \"DSOP_DEPLOY DestinationPlatformId: 3 Deploy_Mode: DEPLOY_MODE_RETURN Depth_Mode: DEPTH_MODE_SINGLE Sonar_Control: SONAR_CONTROL_OFF Sonar_Process: SONAR_PROCESS_ON Deploy_Duration: 1800 Deploy_X: 2600 Deploy_Y: 1500 Deploy_Speed: 1.5 Deploy_Depth: 10 Alternate_Depth: 20\""];
  
  // path to text file with entries:
  //   modem_id,name,type
  // for example
  //   3,unicorn,auv
  optional string modem_id_lookup_path = 101 [(goby.field).description="Path to file containing mapping between modem_id and vehicle name & type",(goby.field).moos_global = "modem_id_lookup_path"];

  optional goby.transitional.protobuf.DCCLTransitionalConfig transitional_cfg = 200 [(goby.field).description="Backwards compatibility for DCCLv1 XML file"]; // see transitional.proto

}
