// required if doing geodesy conversions

// GLINT'08 Pianosa Area B 
LatOrigin = 42.5
LongOrigin = 10.08333

// where to find the file specifying modem lookups
modem_id_lookup_path = ../../../data/acomms/modemidlookup.txt

Community=ELANOR

//-------------------------------------------------------------
// Antler configuration  block

ProcessConfig = ANTLER
{
  MSBetweenLaunches = 500

  Run = MOOSDB		@ NewConsole = false

  // for testing only
  Run = pEchoVar        @ NewConsole = false
}


//------------------------------------------------------------------
// pGeneralCodec configuration  block

ProcessConfig = pGeneralCodec
{
  // available to all moos processes.
  AppTick    = 4
  CommsTick  = 4
  
  // available to all tes moos processes

  //verbose, terse, quiet
  verbosity = scope


  // for checking xml structure correctness
  // highly recommended to use this
  // path relative to the xml file location! (or use absolute path)
  schema = ../lib_dccl/message_schema.xsd

  message_file = test.xml
  message_file = test2.xml
//  message_file = ../../../data/acomms/simple_status.xml
//  message_file = ../../../data/acomms/nafcon_command.xml
//  message_file = ../../../data/acomms/nafcon_report.xml
//  message_file = ../../../data/acomms/nafcon_targetsim.xml

  initialize = VEHICLE_NAME = bobby
  initialize = TEST: (double) 2.341
  initialize = TEST2 = 3.4235  

  initialize = VEHICLE_TYPE = kayak
  

}

// ****************************************************
// FOR TEST PURPOSES ONLY. NOT FOR USE IN ACTUAL SYSTEM
// ****************************************************
ProcessConfig = pEchoVar
{
      Echo = OUT_DEPLOY_HEX_30B -> IN_DEPLOY_HEX_30B
      Echo = OUT_PROSECUTE_HEX_30B -> IN_PROSECUTE_HEX_30B
      Echo = OUT_STATUS_HEX_30B -> IN_STATUS_HEX_30B
      Echo = OUT_CONTACT_HEX_30B -> IN_CONTACT_HEX_30B
      Echo = OUT_TRACK_HEX_30B -> IN_TRACK_HEX_30B
      Echo = OUT_TEST_HEX1 -> IN_TEST_HEX1
      Echo = OUT_TEST_HEX2 -> IN_TEST_HEX2
      Echo = OUT_TEST_HEX3 -> IN_TEST_HEX3
      Echo = OUT_SIMPLE_STATUS_HEX_30B -> IN_SIMPLE_STATUS_HEX_30B
}



ProcessConfig = pAcommsHandler
{
  // available to all moos processes.
  AppTick    = 4
  CommsTick  = 4
  
  // available to all tes moos processes
  modem_id = 2

  micromodem_command_var = MICROMODEM_COMMAND
  micromodem_data_var = MICROMODEM_DATA



  //verbose, terse, quiet
  verbosity = verbose


  // for checking xml structure correctness

  // highly recommended to use this
  schema = /home/toby/moos-ivp-local/src/lib_dccl/message_schema.xsd

  message_file = test.xml
  message_file = ../../../data/acomms/simple_status.xml

//  send = OUT_CTD_HEX_30B,         1,  0,  0,  100, 1,  0.3, 120
//  receive = IN_CTD_HEX_30B,       1
//  send = OUT_CTD_HEX_62B,         2,  0,  0,  100, 1,  0.3, 120
//  receive = IN_CTD_HEX_62B,       2

  send = OUT_CTD_HEX_254B,          3,  0,  0,  100, 1,  0.3, 120
  receive = IN_CTD_HEX_254B,        3

  send = OUT_BTR_HEX_254B,	    4,  0,  0,  100, 1,  0.5, 120 
  receive = IN_BTR_HEX_254B,        4

// Target simulator message
  send = OUT_SIM_TGT_HEX_30B,   5, 0,  0,  1,   1,  5,  120
  receive = IN_SIM_TGT_HEX_30B, 5

  // plus commands
  send = OUT_DEPLOY_HEX_30B,    10, 1,  0,  1,   3,  10,  120
  receive = IN_DEPLOY_HEX_30B,  10

  send = OUT_PROSECUTE_HEX_30B, 11, 1,  0,  1,   3,  10,  120
  receive = IN_PROSECUTE_HEX_30B, 11

  // plus reports
//  send = OUT_STATUS_HEX_30B,    12, 0,  30,  1,   1,  1,   120
//  receive = IN_STATUS_HEX_30B,  12

  send = OUT_SIMPLE_STATUS_HEX_30B,    12, 0,  30,  1,   1,  1,   120
  receive = IN_SIMPLE_STATUS_HEX_30B,  12


  send = OUT_CONTACT_HEX_30B,   13, 0,  0,  1,   1,  2,   120
  receive = IN_CONTACT_HEX_30B, 13

  send = OUT_TRACK_HEX_30B,     14, 0,  0,  1,   1,  4,   120
  receive = IN_TRACK_HEX_30B,   14

}
