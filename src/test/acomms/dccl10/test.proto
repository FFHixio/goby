import "goby/common/protobuf/option_extensions.proto";


enum Enum1
{
  ENUM_A = 1;
  ENUM_B = 2;
  ENUM_C = 3;
}


enum Enum2
{
  ENUM2_A = 1;
  ENUM2_B = 2;
  ENUM2_C = 3;
  ENUM2_D = 4;
  ENUM2_E = 5;
}



message ArithmeticDoubleTestMsg
{
  option (goby.msg).dccl.id = 1;
  option (goby.msg).dccl.max_bytes = 512;
  
  repeated double value = 101 [(goby.field).dccl.codec = "_arithmetic",
                               (goby.field).dccl.arithmetic.model = "model",
                               (goby.field).dccl.arithmetic.debug_assert = true,
                               (goby.field).dccl.max_repeat=4];
}
message ArithmeticEnumTestMsg
{
  option (goby.msg).dccl.id = 2;
  option (goby.msg).dccl.max_bytes = 512;
  
  repeated Enum1 value = 114 [(goby.field).dccl.codec = "_arithmetic",
                              (goby.field).dccl.arithmetic.model = "model",
                              (goby.field).dccl.arithmetic.debug_assert = true,
                              (goby.field).dccl.max_repeat=4];
  
}

message ArithmeticSingleEnumTestMsg
{
  option (goby.msg).dccl.id = 3;
  option (goby.msg).dccl.max_bytes = 512;
  
  required Enum1 value = 114 [(goby.field).dccl.codec = "_arithmetic",
                              (goby.field).dccl.arithmetic.model = "model",
                              (goby.field).dccl.arithmetic.debug_assert = true];
  
}

message ArithmeticEnum2TestMsg
{
  option (goby.msg).dccl.id = 4;
  option (goby.msg).dccl.max_bytes = 512;
  
  repeated Enum2 value = 114 [(goby.field).dccl.codec = "_arithmetic",
                              (goby.field).dccl.arithmetic.model = "model",
                              (goby.field).dccl.arithmetic.debug_assert = true,
                              (goby.field).dccl.max_repeat=8];
  
}

message ArithmeticDouble2TestMsg
{
  option (goby.msg).dccl.id = 5;
  option (goby.msg).dccl.max_bytes = 10000;
  
  repeated int32 value = 101 [(goby.field).dccl.codec = "_arithmetic",
                              (goby.field).dccl.arithmetic.model = "model",
                              (goby.field).dccl.arithmetic.debug_assert = true,
                              (goby.field).dccl.max_repeat=100];
}


message ArithmeticDouble3TestMsg
{
  option (goby.msg).dccl.id = 6;
  option (goby.msg).dccl.max_bytes = 10000;
  
  repeated int32 value = 101 [(goby.field).dccl.codec = "_arithmetic",
                              (goby.field).dccl.arithmetic.model = "model",
                              (goby.field).dccl.max_repeat=4,
                              (goby.field).dccl.arithmetic.debug_assert = true];
}


  // repeated float float_arithmetic_repeat = 102 [(goby.field).dccl.arithmetic.model = "float_model",
  //                                              (goby.field).dccl.max_repeat=4];

  // repeated int32 int32_arithmetic_repeat = 103 [(goby.field).dccl.arithmetic.model = "int_model",
  //                                              (goby.field).dccl.max_repeat=4];

  // repeated bool bool_arithmetic_repeat = 113 [(goby.field).dccl.arithmetic.model = "bool_model",
  //                                             (goby.field).dccl.max_repeat=4];
  

