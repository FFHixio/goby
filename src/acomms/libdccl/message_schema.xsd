<?xml version="1.0" encoding="UTF-8"?>

<!-- schema for DCCL messages -->

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
  <xs:element name="message_set">
    <xs:complexType>
      <xs:sequence maxOccurs="unbounded">
        <xs:element name="message" maxOccurs="unbounded">
          <xs:complexType>
            <xs:all>
              <xs:element name="name" type="xs:string"/>
              <xs:element name="id" type="xs:string"/>
              <xs:element name="size" type="xs:integer"/>
              
              <xs:element name="outgoing_hex_moos_var" type="xs:string" minOccurs="0"/>
              <xs:element name="incoming_hex_moos_var" type="xs:string" minOccurs="0"/>
              <xs:element name="trigger" type="xs:string" minOccurs="0"/>
              <xs:element name="trigger_time" type="xs:integer" minOccurs="0"/>

              <xs:element name="destination_var" minOccurs="0">
                <xs:complexType>
                  <xs:simpleContent>
                    <xs:extension base="xs:string">
                      <xs:attribute name="key" type="xs:string"/>
                    </xs:extension>
                  </xs:simpleContent>
                </xs:complexType>
              </xs:element> <!-- </destination_var> -->
              <!-- alias for destination_var -->
              <xs:element name="destination_moos_var" minOccurs="0">
                <xs:complexType>
                  <xs:simpleContent>
                    <xs:extension base="xs:string">
                      <xs:attribute name="key" type="xs:string"/>
                    </xs:extension>
                  </xs:simpleContent>
                </xs:complexType>
              </xs:element> <!-- </destination_moos_var> -->
              

              <xs:element name="trigger_var" minOccurs="0">
                <xs:complexType>
                  <xs:simpleContent>
                    <xs:extension base="xs:string">
                      <xs:attribute name="mandatory_content" type="xs:string"/>
                    </xs:extension>
                  </xs:simpleContent>
                </xs:complexType>
              </xs:element>  <!-- </trigger_var> -->
              <!-- alias for trigger_var -->
              <xs:element name="trigger_moos_var" minOccurs="0">
                <xs:complexType>
                  <xs:simpleContent>
                    <xs:extension base="xs:string">
                      <xs:attribute name="mandatory_content" type="xs:string"/>
                    </xs:extension>
                  </xs:simpleContent>
                </xs:complexType>
              </xs:element>  <!-- </trigger_moos_var> -->


              <xs:element name="layout">
                <xs:complexType>
                  <xs:choice minOccurs="1" maxOccurs="unbounded">
                    
                    <xs:element name="static">
                      <xs:complexType>
                        <xs:all>
                          <xs:element name="name" type="xs:string"/>
                          <xs:element name="value" type="xs:string"/>
                        </xs:all>
                        <xs:attribute name="algorithm" type="xs:string"/>
                      </xs:complexType>
                    </xs:element>

                    
                    <xs:element name="int">
                      <xs:complexType>
                        <xs:all>
                          <xs:element name="name" type="xs:string"/>

                          <xs:element name="src_var" minOccurs="0">
                            <xs:complexType>
                              <xs:simpleContent>
                                <xs:extension base="xs:string">
                                  <xs:attribute name="key" type="xs:string"/>
                                </xs:extension>
                              </xs:simpleContent>
                            </xs:complexType>
                          </xs:element>
                          <!-- alias for src_var -->
                          <xs:element name="moos_var" minOccurs="0">
                            <xs:complexType>
                              <xs:simpleContent>
                                <xs:extension base="xs:string">
                                  <xs:attribute name="key" type="xs:string"/>
                                </xs:extension>
                              </xs:simpleContent>
                            </xs:complexType>
                          </xs:element>

                          <xs:element name="max" type="xs:integer"/>
                          <xs:element name="min" type="xs:integer"/>
                        </xs:all>
                        <xs:attribute name="algorithm" type="xs:string"/>
                      </xs:complexType>
                    </xs:element>

                    <xs:element name="bool">
                      <xs:complexType>
                        <xs:all>
                          <xs:element name="name" type="xs:string"/>

                          <xs:element name="src_var" minOccurs="0">
                            <xs:complexType>
                              <xs:simpleContent>
                                <xs:extension base="xs:string">
                                  <xs:attribute name="key" type="xs:string"/>
                                </xs:extension>
                              </xs:simpleContent>
                            </xs:complexType>
                          </xs:element>
                          <!-- alias for src_var -->
                          <xs:element name="moos_var" minOccurs="0">
                            <xs:complexType>
                              <xs:simpleContent>
                                <xs:extension base="xs:string">
                                  <xs:attribute name="key" type="xs:string"/>
                                </xs:extension>
                              </xs:simpleContent>
                            </xs:complexType>
                          </xs:element>

                        </xs:all>
                        <xs:attribute name="algorithm" type="xs:string"/>
                      </xs:complexType>
                    </xs:element>


                    <xs:element name="float">
                      <xs:complexType>
                        <xs:all>
                          <xs:element name="name" type="xs:string"/>

                          <xs:element name="src_var" minOccurs="0">
                            <xs:complexType>
                              <xs:simpleContent>
                                <xs:extension base="xs:string">
                                  <xs:attribute name="key" type="xs:string"/>
                                </xs:extension>
                              </xs:simpleContent>
                            </xs:complexType>
                          </xs:element>
                          <!-- alias for src_var -->
                          <xs:element name="moos_var"  minOccurs="0">
                            <xs:complexType>
                              <xs:simpleContent>
                                <xs:extension base="xs:string">
                                  <xs:attribute name="key" type="xs:string"/>
                                </xs:extension>
                              </xs:simpleContent>
                            </xs:complexType>
                          </xs:element>

                          <xs:element name="max" type="xs:double"/>
                          <xs:element name="min" type="xs:double"/>
                          <xs:element name="precision" type="xs:integer"/>
                        </xs:all>
                        <xs:attribute name="algorithm" type="xs:string"/>
                      </xs:complexType>
                    </xs:element>
                    
                    <xs:element name="string">
                      <xs:complexType>
                        <xs:all>
                          <xs:element name="name" type="xs:string"/>

                          <xs:element name="src_var" minOccurs="0">
                            <xs:complexType>
                              <xs:simpleContent>
                                <xs:extension base="xs:string">
                                  <xs:attribute name="key" type="xs:string"/>
                                </xs:extension>
                              </xs:simpleContent>
                            </xs:complexType>
                          </xs:element>
                          <!-- alias for src_var -->
                          <xs:element name="moos_var"  minOccurs="0">
                            <xs:complexType>
                              <xs:simpleContent>
                                <xs:extension base="xs:string">
                                  <xs:attribute name="key" type="xs:string"/>
                                </xs:extension>
                              </xs:simpleContent>
                            </xs:complexType>
                          </xs:element>

                          <xs:element name="max_length" type="xs:integer"/>
                        </xs:all>
                        <xs:attribute name="algorithm" type="xs:string"/>
                      </xs:complexType>
                    </xs:element>

                    <xs:element name="enum">
                      <xs:complexType>
                        <xs:choice minOccurs="0" maxOccurs="unbounded">
                          <xs:element name="name" type="xs:string"/>

                          <xs:element name="src_var" minOccurs="0">
                            <xs:complexType>
                              <xs:simpleContent>
                                <xs:extension base="xs:string">
                                  <xs:attribute name="key" type="xs:string"/>
                                </xs:extension>
                              </xs:simpleContent>
                            </xs:complexType>
                          </xs:element>
                          <!-- alias for src_var -->
                          <xs:element name="moos_var"  minOccurs="0">
                            <xs:complexType>
                              <xs:simpleContent>
                                <xs:extension base="xs:string">
                                  <xs:attribute name="key" type="xs:string"/>
                                </xs:extension>
                              </xs:simpleContent>
                            </xs:complexType>
                          </xs:element>

                          <xs:element name="value" type="xs:string"/>
                        </xs:choice>
                        <xs:attribute name="algorithm" type="xs:string"/>
                      </xs:complexType>
                    </xs:element> 

                    
                  </xs:choice>
                </xs:complexType>
              </xs:element>  <!-- </layout> -->


              <xs:element name="on_receipt" minOccurs="0">
                <xs:complexType>
                  <xs:choice minOccurs="1" maxOccurs="unbounded">
                    
                    <xs:element name="publish">
                      <xs:complexType>
                        <xs:choice minOccurs="0" maxOccurs="unbounded">
                          
                          <xs:element name="format"/>
                          
                          <xs:element name="publish_var" minOccurs="0">
                            <xs:complexType>
                              <xs:simpleContent>
                                <xs:extension base="xs:string">
                                  <xs:attribute name="type" type="xs:string"/>
                                </xs:extension>
                              </xs:simpleContent>
                            </xs:complexType>
                          </xs:element>
                          <!-- alias for publish_var -->
                          <xs:element name="moos_var">
                            <xs:complexType>
                              <xs:simpleContent>
                                <xs:extension base="xs:string">
                                  <xs:attribute name="type" type="xs:string"/>
                                </xs:extension>
                              </xs:simpleContent>
                            </xs:complexType>
                          </xs:element> <!-- </moos_var> -->

                          <xs:element name="message_var">
                            <xs:complexType>
                              <xs:simpleContent>
                                <xs:extension base="xs:string">
                                  <xs:attribute name="algorithm" type="xs:string"/>
                                </xs:extension>
                              </xs:simpleContent>
                            </xs:complexType>
                          </xs:element> <!-- </message_var> -->
                          
                          <xs:element name="all">
                            <xs:complexType>
                            </xs:complexType>
                          </xs:element>
                          
                        </xs:choice>
                      </xs:complexType>
                    </xs:element> <!-- </publish> -->

                    
                  </xs:choice>
                </xs:complexType>
              </xs:element>  <!-- </on_receipt> -->

              <!-- optional for use with libqueue -->
              <xs:element name="queuing" minOccurs="0">
                <xs:complexType>
                  <xs:all>
                    <xs:element name="ack" type="xs:string" minOccurs="0"/>
                    <xs:element name="blackout_time" type="xs:integer" minOccurs="0"/>
                    <xs:element name="max_queue" type="xs:integer" minOccurs="0"/>
                    <xs:element name="newest_first" type="xs:string" minOccurs="0"/>
                    <xs:element name="priority_base" type="xs:float" minOccurs="0"/>
                    <xs:element name="priority_time_const" type="xs:string" minOccurs="0"/>
                  </xs:all>
                </xs:complexType>
              </xs:element>  <!-- </queuing> -->
              <!-- end optional for use with libqueue -->

            </xs:all>
            

          </xs:complexType>
        </xs:element> <!-- </message> -->

      </xs:sequence>
    </xs:complexType>
  </xs:element> <!-- </message_set> -->

</xs:schema>
