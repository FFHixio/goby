// provides MessageFile
import "goby/common/protobuf/option_extensions.proto";

package goby.acomms.protobuf;

message DCCLConfig
{
  //  optional int32 modem_id = 1 [(goby.field).description="Unique number 1-31 to identify this node", (goby.field).example="1"];
  optional string crypto_passphrase = 2 [(goby.field).description="If given, encrypt all communications with this passphrase using AES. Omit for unencrypted communications.", (goby.field).example="twinkletoes%24"];

  enum IDCodec
  {
    VARINT = 0;
    LEGACY_CCL = 1;
  }
  optional IDCodec id_codec = 3 [default = VARINT, (goby.field).description="Codec used to represent the unique DCCL identifier (goby.msg).dccl.id, used to match an encoded message to a Protobuf message."];
  
}


message ArithmeticModel
{
  repeated uint32 frequency = 1; // frequency of the symbol given by the repeated field index
                                 // probability is (frequency / sum(frequency)) 
  optional uint32 eof_frequency = 2 [default = 1]; // frequency of EOF symbol
  optional uint32 out_of_range_frequency = 3 [default = 1]; // frequency of the out-of-range value, that is, the value not within the range defined by [symbol_to_value(0), maximum_value)
  
  repeated double value_bound = 10; // set of bounds of value in double space that maps to symbol given by repeated field index; upper bound is given by lower bound of the next symbol. Size must be size(frequency) + 1 (number of symbols + 1).
  
}
