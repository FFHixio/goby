// for goby::core::ApplicationBase
#include "goby/core/core.h"

// autogenerated Protocol Buffers header
#include "hello_acomms.pb.h"

// allows us to directly output protobuf messages to streams
using goby::core::operator<<;

// create our Goby Application with ApplicationBase as a public base
class HelloAcomms1 : public goby::core::ApplicationBase
{
private:
    // loop() is a virtual method of ApplicationBase that is called
    // at 10 Hz (by default)
    void loop()
        {
            static int i = 0;
            // create a message of type HelloAcommsMsg (defined in
            // hello_acomms.proto)
            HelloAcommsMsg msg;
            // set the fields we need
            msg.set_telegram("hello acomms!");
            msg.set_count(++i);

            glogger() << "sending: " << msg << std::endl;

            // publish it to `gobyd` who will send to all subscribers 
            publish(msg);
        }
};

int main(int argc, char* argv[])
{
    // start up our application (ApplicationBase will read argc and
    // argv for us)
    return goby::run<HelloAcomms1>(argc, argv);
}
