%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: hello_world_sketch.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: toby
%%CreationDate: 4/20/2011
%%BoundingBox: 0 0 603 180
%%HiResBoundingBox: 0 0 602.3687 179.9859
%%CropBox: 0 0 602.3687 179.9859
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.2%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 13.0.2 x434 R agm 4.4379 ct 5.1039%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 40 8%%BeginData: 4411 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD29FF7D7DA8A8FF7D7DA8527DA87D7DA8A8A8527D7DA8A8FD6AFF
%A852F827F87D52272752275227522752FD06277DFD6AFFFD05A8FFFD05A8
%FFA8FFA8A8A8FFA8A852A8FD6DFFA8A8A8FF7DFFFFFFA8FFA8A8A8FFA8FF
%A8A87DA87DFFFD057DFFA8FFA8FFA8FD5DFFA82752525227277D7D275227
%5227277D5227522752272752272752F8522727275227527DFD5CFFA8A87D
%A8A8A87DA8277DA8A8277D7DA8527DA8A87DA87DA87DA87DA87DA87D7D52
%5252FD7EFFA8FDEBFFAEAFAEAE89AE89AE89AEAEFD72FFAEAE898A89AEAE
%FFAEFFFD04AE898989AEFD6BFFAEAE89AEAEFD0EFFAE89AEAEFD68FF8989
%8AFD13FFAEAE89AEFD64FFAE89AEFD18FF898AAEFD61FF8989FD1BFFAE89
%8AFD5EFFAE89AEFD1EFFAE89FD5CFFAE89AEFD20FFAE89FF89FD5AFFAEFD
%22FFAF8964AEFD7CFF893FFAAEFD33FFCAFFCAFFCAFFCAFFCAFFCAFFCAFF
%CAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFD24FFAE893F64
%FFFFFFA9FFCBFFA9FFCBFFA9FFCBFFA9FFCBFFA9FFCBFFA9FFCBFFA9FFCB
%FFA9FFCBFFA9FFCBFFA9FFCBFD06FFA1C3A1C3A1CAA1C3A1CAA1C3A1CAA1
%C3A1CAA1C3A1CAA1C3A1CAA1C3A1CAA1C3A1CAA1C3A1CAA1C3A1C3A8FD23
%FFAEAECFCB7FFD27A37FA3A9FFFF9ACAFD28FFCAC3CAFD24FFCBA3FD29FF
%A9A3FFA1CAFD2BFFC3CAFD23FF79FD2BFFA9A3C3FD07FFA8FD08FFA8FFA8
%FD19FFCACAFD22FFA3CBFD06FFA8A8FD08FFA8FD1BFF7FA1FFFFFF7D52A8
%7D277DA8FF7DA87DA87D7D7D527DFFA8A8FD16FFA1FD22FFA3A9FFFFFF52
%7DA85252A8A8FF7DA87DA8527D527DA8FF7DFD16FFA3CAFFFFFFA8272727
%522752FF7D275227FD04527DFF5252FD15FFCACAFD22FFA3FD04FF7D2752
%275227A8FF522752277D275252A8A827A8FD15FFA3A1FFFFFFA8A87DA87D
%A8A87DFD04A87DA87DA87D7D277DFD16FFA1FD22FFA9A9FFFFFFA87D7DA8
%7DA87DFD06A87D7DA87D7D27A8FD15FFA3C3FD15FFA8A8FD15FFCACAFD22
%FFA3FD16FFA8FD16FFA3A1FD2CFFCAA1FD22FFA3A9FD2CFFA3CAFD2CFFCA
%CAFD22FFA3FD2DFFA3A1FD2DFFA1FD22FFA3A9FD2CFFA3CAFD04FFA8A8FF
%FFFFA8A8FFA8FFFFFFA8FFFFFFA8FD17FFCACAFD22FFA3FD05FFA8FFFFFF
%A8A8FFFF7DFFA8FFA8FFA8A8A8FD17FFA3A1FFFFFFA852F87D27A8FD0452
%277DF852527D522727A8FD16FFA1FD22FFA3A9FFFFFFA827277D527D277D
%5227525227525252272752FD16FFA3CAFD04FF7D5252527DA8527D5252FD
%047D527D527DA8FD15FFCACAFD22FFA3FD04FFA8525252FD047D525252A8
%7D527D7D7D527DFD16FFA3A1FD0FFFA8FD0DFFA8FFFFFFA8FFFFFFA8FD07
%FFA1FD22FFA9A9FD1CFFA8A8FFFFFFA8FFFFFFA8FD06FFA3C3FD05FFA8FD
%047D527DA87D7D527DA8A8A87DA8FD067D52527DA852527D7D52527D7D7D
%A8FFFFCACAFD22FFA3FD05FFA87D52A87D7D52A8A87D52527DA8FD047D52
%A87D7D7DA8277D7D7D527D7D7D27527DA87DFFFFFFA3A1FD04FFA827FD06
%527DF8FD04527DFD05527D525227522752525227522752275227527DFFFF
%FFA1FD22FFA3A9FD04FF7D2752525227527D52F87D52527D5227FD04527D
%27272752275227525252275227272752A8FFFFA3C3FD0CFFA87DFFFFA8FD
%07FFA8FF7DA8A8FD0FFFCACAFD22FFA3FD0DFF7DA8FFFFA8FD08FFA87DA8
%FD10FFA3A1FD2CFFC3A8FD22FFA9A3FD2BFFCBA3CAC3FD2AFFCAC3FD24FF
%A3A3FD2AFFA3A9FFCA9ACAA8FFCACAA8FFCACAA8FFCACAA8FFCACAA8FFCA
%CAA8FFCACAA8FFCACAA8FFCACAA8FFCACAA8FFCAC39AFD25FFCBA379CBA9
%CBA9FFA9CBA9FFA9CBA9FFA9CBA9FFA9CBA9FFA9CBA9FFA9CBA9FFA9CBA9
%FFA9CBA9FFA9CBA3A3A3FF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:17:08        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Web</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2011-04-20T23:15:28-04:00</xap:CreateDate>
         <xap:ModifyDate>2011-04-20T23:17:23-04:00</xap:ModifyDate>
         <xap:MetadataDate>2011-04-20T23:17:23-04:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>76</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgATAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXmHm/yF51uPN1r5ns/OiaPa2rvF6csHJfqtxLbO1sOUgjHJranLjU1xVKY/Jmv6poNjZah&#xA;+Y1tqV9a6iZkv0SMF0NututqyiVgayKWNKEkmlMVQWkeRdfurq38wSfmJBcW0/K1vbyS2EM90HZX&#xA;lgctJGqDjGvBRHUKBXkpriqsvkXWPK+mT3KfmXIkSRsbuaSNZJCht1dUUI7tRXeSdOK8grBR8I3V&#xA;Syf8oNdkuLyaL8w7Sye5gGnBbZClIwblfQ3uD9r629ab8hyFOmKso8jT+bNI85TW3mTzZZ6xpUln&#xA;J9RYXEUbM5mjkDLbrX7PriMVbpxILcgsarNm/MPyUuj2esHWLf6hfxxTWbgkvIk5CxlYQPV3Jofh&#xA;23rShxVE2/nHytcXTWsOq2zzqJWdBINlgaJZGJ6ABriPfvyFOuKooa7oZUsNRtioUuSJo6BQAxbr&#xA;0o4P0jFUTbXdrdIZLaaOeMHiXjYOAetKqTvviqrirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVSXzX5O8vea9Ph0/XbY3VpBMLmONZJIqSKjxg8omRvsyNtXFWNt+Rf5ZSQND&#xA;LpRlVuFWeecvVDKftc+W/wBZkr41xVB6n+Qfk27t7CytnuLTT7S4lubi29R5zcGdYo3VpZi8ij0o&#xA;QgoaAHYBlRlVUNX/AOcdvIl9qFndW3r6fHbxfVriOCRi00AjWMR+q5Z4xwDA8evIts4VlVRE/wCQ&#xA;HkFotOs4YJIdKsJ/X/R4dijkRyIo5Ahx8UvMmpqevfFUT/yof8sAsijSSFljMMoWeZecbFGZGo4q&#xA;C0fL5s3jiqi//OPv5WlrN49NlhlsIRb2siXVxVY1MhWoZ2VivrOByB2+jFV7/kH+WEryPPpjTvPG&#xA;kVyZJpWEqxtG6+onLgaGBP2cVSrVf+cafy4urIQWMdzYTJw9KUXE0yAIscdDDI5TeOFV5LRhtQig&#xA;oqzzyd5N0bynpT6dpaELPM91eTuFDz3MoAlmfgEXk/EVCqAOgAGKp5irsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdiqyaaGGNpZnWONRVnYgAD3JyMpiIsmgwnkjAcUjQCF+&#xA;uXlx/vHBxjP/AB8XFVH+xj+2308fnlHizl9A27z+rn9zjePkn/dx2/nS2+UeZ+PD72xp80g/0m7l&#xA;k8UiPoJ9HD9597nD4BP1SJ93p+7f7U/lpS+ucj7vSPs9X+yLf6I0w/btklPjKPVP3vyOP5XH1iD7&#xA;9/vX8jh6xB9/q++3fofSe1lAPcRoD94GP5XF/Nj8gv5HB/Mh/pQ1+i4F3hkmgbtwkcqP9gxZP+Fx&#xA;/LRH0kx+J+47fYv5OI+kyj7pH7jcfsa46rB0ZLyMfssBFLT/AFh8DH6FwVlj3THyP6j8gis8OoyD&#xA;/Sy/4k/KKrb39vO5i3juFFWgkHFwPGnce61GTx5oyNcpdx5/jzGzZi1MZnh5S7jsf2+8WERlzkOx&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KqN1O0MXJImmkY8Y40HVj4no&#xA;o9zleSZiNhZ/Hyas2QwFgGR6Afjb3qMNgzSLcXrCa4U1jUf3UR/yFPf/ACjv8umVww2eKe8vsHu/&#xA;Xz93Jpx6Yk8eQ8Uun82PuH++O/u5IzMhy3Yq7FXYq7FXYqo3Vpb3KBZVqVNUcEq6nxVhup+WV5MU&#xA;Zjf8e5qzYI5BUh7u8e49EMlzPZyLDetzhchYbygFSeiygbKx7MNj7HY0jJLGanuOkv0Hz8+R8nGj&#xA;mliIjk3ieUv0S7j58j5HYr2F/bX9qtzbNyhZnVW8eDFCf+Fy3BmjljxR5b/Yab9NqYZoccN4m/sN&#xA;IjLW92KuxV2KuxV2KuxV2KuxV2KuxVKrnXx9clsdOtZNRvIKC4ERRIoSwBCyyuQA1CDxXk1KGlDl&#xA;ZnvQ3cqGl9IlMiETy7z7gPvNDza+v+ZP+rRF/wBJY/6pY8Uu77U+Fh/nn/S/td9f8yf9WiL/AKSx&#xA;/wBUseKXd9q+Fh/nn/S/td9f8yf9WiL/AKSx/wBUseKXd9q+Fh/nn/S/td9f8yf9WiL/AKSx/wBU&#xA;seKXd9q+Fh/nn/S/td9f8yf9WiL/AKSx/wBUseKXd9q+Fh/nn/S/td9f8yf9WiL/AKSx/wBUseKX&#xA;d9q+Fh/nn/S/td9f8yf9WiL/AKSx/wBUseKXd9q+Fh/nn/S/td9f8yf9WiL/AKSx/wBUseKXd9q+&#xA;Fh/nn/S/td9f8yf9WiL/AKSx/wBUseKXd9q+Fh/nn/S/tWtqfmKMc30X1EH2lguo2kp/krIIlP0s&#xA;MeKXckYcJ5ZPnE19l/cjdL1Wz1K3M1sWBjYxzwyKUlikX7UciHdWFa+4oRUEHJRkDyac2CWM1L4H&#xA;oR3j8fai8k0uxV2KuxV2KuxV2KoDWNJGp2rWz3M1vGwIb0SF5V7NUGo9sxdVpfGjwmUojycLXaL8&#xA;xDgMpRH9H9OyV6fHF5T0toLy4NxE83GwjjRmnkeQV9JIxXk3wk7dqk0AJw9k9m5IA4wQYje+VDrf&#xA;4397T2R2dPTQOMy4o3YPL5olNV8ySDmmh+mh+ys91GslP8pYxMg+hzm2ODCOeS/dE19tfc7bhj3r&#xA;v0h5m/6s8X/SYP8Aqlg8LB/PP+l/atR73fpDzN/1Z4v+kwf9UsfCwfzz/pf2rUe936Q8zf8AVni/&#xA;6TB/1Sx8LB/PP+l/atR73fpDzN/1Z4v+kwf9UsfCwfzz/pf2rUe936Q8zf8AVni/6TB/1Sx8LB/P&#xA;P+l/atR73fpDzN/1Z4v+kwf9UsfCwfzz/pf2rUe936Q8zf8AVni/6TB/1Sx8LB/PP+l/atR73fpD&#xA;zN/1Z4v+kwf9UsfCwfzz/pf2rUe936Q8zf8AVni/6TB/1Sx8LB/PP+l/atR727XzCPrkVhqVpLpt&#xA;5PUWwlKPDMygkrFMhKlgATxbi1KnjQVwT0npM4SE4jnXMe8H7xY81MNrG63yZGq+VtMl6y3Vul3c&#xA;OerzXI9aVz/rO5OYGL6Q5PaB/fzHSMjEe6Ow+wMIvfzx0vTtc1fQb62c6lbah9R01rcJJFIGhWQP&#xA;KPVDoIjy9UlQKfZqdsscNW/Lj85LLzTcW2mXMSjVrlPVBtKPbohjMirIS7SBj6b78eOwBILKCquf&#xA;8+PKcd9d2MlhqUc9jcmyuw0MIVZQZRRW9aklfqsxX0+RPAgfFQFVI4/+chba4e3a3sRFHf3MTWEN&#xA;08MUpsns4bjnKVndEkdrlOFOXwn4gCDRVmd1+aGiWml+Vr6a3nkPmw26afDAYn4yXCoQrs7xD4fU&#xA;341NATTY4qzHFXYq7FXYq7FUmZFg83wtH8P1+wmNyP5mtJYREfmBcuPu8Mr5T94+7+1zAeLTm/4Z&#xA;iv8AOEr/ANyE5yxw3Yq7FXYq7FXYq7FXYqkqRifzlM0vxfo/T4TajsrXk0wlb5kWqAfT45mk8OmF&#xA;fxzN/wCaI1/uiz/h+KV/mJ5/h8lx6Ne3UXrWF7eyWt6FKiZIksri59WPm8ani1uAwJ6HarUBwmDC&#xA;YP8AnInTLnzSlrDaONDkt7eSEyoIr2Wa6mmgQKskqxqhaJDykKhQ1W4gVxVlnmT83fLugabo2o3V&#xA;lqM9rr1r9a076vArOxYRFIHjZ0dJZPXUKCKVrUjFWPXf/OQ3lxkWaytLhbW3Fvcajc3IgVBbXPrG&#xA;NYSk5LzOLdmUAFRQhirfDiqdeQ/zUTzKxgltolmi0/8ASE7W08cpFJWj9P0UZyD8P85360BQsqyH&#xA;yR5z0zzl5eh17TIporG4Z1hFx6YdvTbiW/dPKtKjbfFU+xV2KuxV2KpJ52iVvKeqS9JbS3kvLZx1&#xA;Se1X1onHusiA5m9nGtRAdJSET7pbH7Czx/UFTyf/AMolon/MBa/8mVzXYvoHuDka/wDxjJ/Xl95T&#xA;E2NkzM7W8ZdzV2KLUkEGpNPEDLHEULrRNFu7R7O6sLa4tJKc7eWGN42oQwqjAqd1B+jFUSLa3Eax&#xA;iJBGtOKBRxFDUUHtiqwWFiBQW8QBoCOC9AKDt4CmKpLf/l75Jvr6K/udFtTeQuHEyRiNnKlSBL6f&#xA;H1VBRTxkqNhtirIcVdirsVdirsVSi5/5S3Tf+YC//wCT1nlZ+se4/ocuH+Lz/rw+6ab5Y4jsVdir&#xA;sVdirsVdirsVSe1/5TDU/wDtn6f/AMn73Myf+Lw/rz+7GzP0j3n9CaT21vOoWeJJVG4DqGANKd8w&#xA;2C02NkWLG3jLMGDMUWpDV5A7d+Rr88VU7XSdKtJp57Szgt5rp/VupYokRpZP55GUAs2/U4qqGysy&#xA;amCMnrUovUEnw8WOKoPUvLXl3VIDBqWl2l5CTXhPDHIK0KgjkDQgMd8Vb0Hy9o+g2H1DSbYW1tza&#xA;Rl5O7M7dWeSQs7tsBVidgB0GKpjirsVdirsVSfzn/wAofrv/AGz7r/kw+ZnZ/wDjGP8Arx+8M8f1&#xA;D3t+T/8AlEtE/wCYC1/5MrmvxfQPcHI1/wDjGT+vL7ywzzP5o/N6y852sejeV/0j5d5SW9wBLAgK&#xA;vJbGO7MrNzHFPWHAL867EWOIhX80fnbfaFZXUflgaXqn14xXln6tvKDZi2VvWVmZ9/XLBVNNqVpv&#xA;iqEtPNP58T6zF63lc21rdIY5ovWtWt7Uu6BJFlJE0rooPIFeNWqOQXFVbTPMf5/WsLNqnlm1u5pA&#xA;wVYriILHSISI54tVmLy+iy+KFlIHVVV8pa/+c0vmq3h1vSJI9AkeKGaWaO25qqxXzyzhoJvhJl+q&#xA;JxKt8HZW5VVeqYq7FXYq7FXYqlFz/wApbpv/ADAX/wDyes8rP1j3H9Dlw/xef9eH3TTfLHEdirsV&#xA;dirsVdirsVdiqT2v/KYan/2z9P8A+T97mZP/ABeH9ef3Y2Z+ke8/oS38ytR862Ple5bybp5vtalS&#xA;WOBgYqwMYXMcvCZkR/3oUU960NKZhsEh0vzl+bV5dRQ3nk0WNvIzpLcfWI2eMf6VxfgW4t/dW/f9&#xA;s99sVY3qHmT/AJyJ/wAOehD5f4au9vLIL6B7SQrcenSKL0pAsfAMOTN1qQACAxxVM7rX/wA/5vQv&#xA;bTy5a28MkaPc6bJcQNLFJHJK0iK4JVvUjRI616nkP5cVU7zzN+etzJCYPLn1D1JLZJo0e2mSOISo&#xA;88nJ2DOzIGj4jYA1HxCuKvRvKN3r135csbnX7f6pq8qMbq34qnA8yFBVXmWvGlaOf4Yqm+KuxV2K&#xA;uxVJ/Of/ACh+u/8AbPuv+TD5mdn/AOMY/wCvH7wzx/UPe7ycwPlTR1/ais4IpF7rJFGI5EPurqQf&#xA;fNfi+ge5ye0B+/n5yJ+BNj7Et86+WvNutSWp0PzG+hxQJIJ4khEnrOzIULOGRwFVXHwnvXtljhsU&#xA;vPyr/MW40s6efPkzxPWKeOa39RJLeS3EMqPWQOeTcmB5bcvYUVW6p5K/OGS60vT7DzR6FjFBL9c1&#xA;RQqkTSTySgC36sqR8IkBfpvVeFJFVby/+XP5gaM0Onw+Znk0uztfSgLAook5sECRhnNESvLmSCSv&#xA;H7OKqz/l7+ZzxSofPsqs+8ckduFKkW8sdaM7jeeRZadP2egWiqD1TyB+aq2iXFp5rkub2yWZLeGp&#xA;VpxPHGhMshMaKyvCrrRaCrj9rZVLLT8pPzSuNUg1S+85yJe6fJcQQSywrK0tsxoHXg6+kZlry3+D&#xA;bjQipVR11+U/5nT3y3o8+yJNFKDA3oSHjAhvKR8fW482W9CGSnIBBQ4qt1T8o/zKvNRGpJ5+lj1C&#xA;GXUGtJ/QYBIbtQsERjSRIyIRyPTqa9hRVl/lLyt5z0zWJr7XPNEmsWkkMscenmFIo0kkummWTkBy&#xA;YpEViHQU7Yqm8zB/N9mqbm30+6M1P2fXnt/Sr/rehJT/AFTlZ+se79TmRFaeXnONfASv5cQ+acZY&#xA;4bsVdirsVdirsVdirsVSaBhH5yvVf4Tc6damCv7X1ee49Wn+p9Yjr/rDMyQvTR8pyv4xjXz4T8mZ&#xA;+n4o/VYL640y8t7C5+pX00EkdpeFBIIZWQiOXg2zcGo3E9cw2DzmP8s/zKWOVG/MC5EknFfrKwHm&#xA;ERJNgjyvGCXdCWpWie7VVU4vy8/M3S7fXLy281/pLVL+xNtagwC2b1xwWOV5C8isYo0ITZWNTV6t&#xA;yVVLYfyx/NoWlpqcvm1z5hVPRloAf3TshSKWWqq6RGrvwjBelB9onFWSv5I/MRryCSPzi9vbQzRu&#xA;YBEZS0afaRndhy5/D9qtOHhI4xVLIPyz/M1Y5ILrz5c3kNzZ/VJ2dPTaNniCTTQiPieZdndCzfB8&#xA;I347qpNf/ll+cOrR3ek33mqRNLvba6sJ3orR8TbLGk3ply9J3d/hrVAvia4qmk35WfmVItjAnnf0&#xA;bO3nSW6ghgmjEkcM0U6RLxuKpvEwZlIJDHttiqk/5R/mVLpNvpU3n2SSyispLOaAW3pq7m1jhhk5&#xA;K/MenIhelaH5lqqq8f5Y/mtDbLZQfmFLFaRW6W8LLbcpgFjt4yecjyfEfq70Zqkcyd23xVnvnGq+&#xA;TtXjZuckllNCnQF5ZYzGigCg5O7AAeJzM7OH+EY/KQPwBs/Yzx/UEr/3L/py5/wrw+qes36V+uV+&#xA;p/WNvU+rcP3nq1/vKfu+Vf2+Wavfi9Px7vg7T934Q8f6q9PD9VdOK9q/m/xV/RpP/wDc9/y6/wDJ&#xA;TLvU6/8Adf0vsd/ue/5df+SmPqX91/S+x3+57/l1/wCSmPqX91/S+x3+57/l1/5KY+pf3X9L7Hf7&#xA;nv8Al1/5KY+pf3X9L7Hf7nv+XX/kpj6l/df0vsd/ue/5df8Akpj6l/df0vsd/ue/5df+SmPqX91/&#xA;S+x3+57/AJdf+SmPqX91/S+xC6n/AIy+qP8Aoz9HfW/2PrPr+n9PDfIy462ptw/luL18fD5Val5T&#xA;+renec/W/TPqD9LfWuPrepx+CnD936XH+74fDT/K5YMXXv6s9ddxqvDr01y8+e/F/Ovf4Un2WuA7&#xA;FXYq7FXYq7FXYq7FWP8Am/6t6dn6fr/pr1T+iPqnH1vU4/HXn+79Hj/e8/hp/lcc2Gg4rldeHXr4&#xA;uVdOW/F/Nrf4W2Y/sVdL/wAa/U0/Sv6N+uft/VvX9Pp2575DP+W4v3fHw+fDaJcN7Wi/+dg/5dP+&#xA;SmVfuf6X2I2d/wA7B/y6f8lMf3P9L7F2d/zsH/Lp/wAlMf3P9L7F2d/zsH/Lp/yUx/c/0vsXZ3/O&#xA;wf8ALp/yUx/c/wBL7F2d/wA7B/y6f8lMf3P9L7F2d/zsH/Lp/wAlMf3P9L7F2d/zsH/Lp/yUx/c/&#xA;0vsXZ3/Owf8ALp/yUx/c/wBL7F2Y9/uY/Ttr/izh9T9dP0R9Sr9S+sb+n9a5/vfV5f3Vf3fKn7fH&#xA;Nh+78I/l/qr1cX1V14a24f538Vf0bbNq9L//2Q==</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:DADA9086C56BE011ADE1838029FF7B94</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:DCDA9086C56BE011ADE1838029FF7B94</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:f1c065ce-15b7-453e-bf4a-735a529f4226</stRef:instanceID>
            <stRef:documentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>14400.000000</stDim:w>
            <stDim:h>14400.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Gentium</stFnt:fontName>
                  <stFnt:fontFamily>Gentium</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>Version 1.02; 2005; OFL release</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>GenR102.TTF</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Gentium-Italic</stFnt:fontName>
                  <stFnt:fontFamily>Gentium</stFnt:fontFamily>
                  <stFnt:fontFace>Italic</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>Version 1.02; 2005; OFL release</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>GenI102.TTF</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xapTPg:Fonts>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>White</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>255</xapG:red>
                           <xapG:green>255</xapG:green>
                           <xapG:blue>255</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Black</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>0</xapG:red>
                           <xapG:green>0</xapG:green>
                           <xapG:blue>0</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Red</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>255</xapG:red>
                           <xapG:green>0</xapG:green>
                           <xapG:blue>0</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Yellow</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>255</xapG:red>
                           <xapG:green>255</xapG:green>
                           <xapG:blue>0</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Green</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>0</xapG:red>
                           <xapG:green>255</xapG:green>
                           <xapG:blue>0</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Cyan</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>0</xapG:red>
                           <xapG:green>255</xapG:green>
                           <xapG:blue>255</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Blue</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>0</xapG:red>
                           <xapG:green>0</xapG:green>
                           <xapG:blue>255</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Magenta</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>255</xapG:red>
                           <xapG:green>0</xapG:green>
                           <xapG:blue>255</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=193 G=39 B=45</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>193</xapG:red>
                           <xapG:green>39</xapG:green>
                           <xapG:blue>45</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=237 G=28 B=36</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>237</xapG:red>
                           <xapG:green>28</xapG:green>
                           <xapG:blue>36</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=241 G=90 B=36</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>241</xapG:red>
                           <xapG:green>90</xapG:green>
                           <xapG:blue>36</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=247 G=147 B=30</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>247</xapG:red>
                           <xapG:green>147</xapG:green>
                           <xapG:blue>30</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=251 G=176 B=59</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>251</xapG:red>
                           <xapG:green>176</xapG:green>
                           <xapG:blue>59</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=252 G=238 B=33</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>252</xapG:red>
                           <xapG:green>238</xapG:green>
                           <xapG:blue>33</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=217 G=224 B=33</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>217</xapG:red>
                           <xapG:green>224</xapG:green>
                           <xapG:blue>33</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=140 G=198 B=63</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>140</xapG:red>
                           <xapG:green>198</xapG:green>
                           <xapG:blue>63</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=57 G=181 B=74</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>57</xapG:red>
                           <xapG:green>181</xapG:green>
                           <xapG:blue>74</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=146 B=69</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>0</xapG:red>
                           <xapG:green>146</xapG:green>
                           <xapG:blue>69</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=104 B=55</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>0</xapG:red>
                           <xapG:green>104</xapG:green>
                           <xapG:blue>55</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=34 G=181 B=115</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>34</xapG:red>
                           <xapG:green>181</xapG:green>
                           <xapG:blue>115</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=169 B=157</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>0</xapG:red>
                           <xapG:green>169</xapG:green>
                           <xapG:blue>157</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=41 G=171 B=226</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>41</xapG:red>
                           <xapG:green>171</xapG:green>
                           <xapG:blue>226</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=113 B=188</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>0</xapG:red>
                           <xapG:green>113</xapG:green>
                           <xapG:blue>188</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=46 G=49 B=146</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>46</xapG:red>
                           <xapG:green>49</xapG:green>
                           <xapG:blue>146</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=27 G=20 B=100</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>27</xapG:red>
                           <xapG:green>20</xapG:green>
                           <xapG:blue>100</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=102 G=45 B=145</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>102</xapG:red>
                           <xapG:green>45</xapG:green>
                           <xapG:blue>145</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=147 G=39 B=143</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>147</xapG:red>
                           <xapG:green>39</xapG:green>
                           <xapG:blue>143</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=158 G=0 B=93</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>158</xapG:red>
                           <xapG:green>0</xapG:green>
                           <xapG:blue>93</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=212 G=20 B=90</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>212</xapG:red>
                           <xapG:green>20</xapG:green>
                           <xapG:blue>90</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=237 G=30 B=121</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>237</xapG:red>
                           <xapG:green>30</xapG:green>
                           <xapG:blue>121</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=199 G=178 B=153</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>199</xapG:red>
                           <xapG:green>178</xapG:green>
                           <xapG:blue>153</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=153 G=134 B=117</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>153</xapG:red>
                           <xapG:green>134</xapG:green>
                           <xapG:blue>117</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=115 G=99 B=87</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>115</xapG:red>
                           <xapG:green>99</xapG:green>
                           <xapG:blue>87</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=83 G=71 B=65</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>83</xapG:red>
                           <xapG:green>71</xapG:green>
                           <xapG:blue>65</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=198 G=156 B=109</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>198</xapG:red>
                           <xapG:green>156</xapG:green>
                           <xapG:blue>109</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=166 G=124 B=82</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>166</xapG:red>
                           <xapG:green>124</xapG:green>
                           <xapG:blue>82</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=140 G=98 B=57</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>140</xapG:red>
                           <xapG:green>98</xapG:green>
                           <xapG:blue>57</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=117 G=76 B=36</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>117</xapG:red>
                           <xapG:green>76</xapG:green>
                           <xapG:blue>36</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=96 G=56 B=19</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>96</xapG:red>
                           <xapG:green>56</xapG:green>
                           <xapG:blue>19</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=66 G=33 B=11</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>66</xapG:red>
                           <xapG:green>33</xapG:green>
                           <xapG:blue>11</xapG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Web Color Group</xapG:groupName>
                  <xapG:groupType>1</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=236 G=28 B=36</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>236</xapG:red>
                           <xapG:green>28</xapG:green>
                           <xapG:blue>36</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=169 B=157</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>0</xapG:red>
                           <xapG:green>169</xapG:green>
                           <xapG:blue>157</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=102 G=45 B=145</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>102</xapG:red>
                           <xapG:green>45</xapG:green>
                           <xapG:blue>145</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=139 G=146 B=152 1</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>139</xapG:red>
                           <xapG:green>146</xapG:green>
                           <xapG:blue>152</xapG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Grayscale</xapG:groupName>
                  <xapG:groupType>1</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=100</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>255</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=90</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>229</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=80</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>204</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=70</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>178</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=60</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>153</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=50</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>127</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=40</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>101</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=30</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>76</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=20</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>50</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=10</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>25</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=5</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>12</xapG:gray>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -179.986 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 179.986 li
602.369 179.986 li
602.369 0 li
cp
clp
[1 0 0 1 0 0 ]ct
217.448 160.692 mo
217.448 170.795 208.74 178.986 198 178.986 cv
20.4482 178.986 li
9.70752 178.986 1 170.795 1 160.692 cv
1 105.008 li
1 94.9053 9.70752 86.7148 20.4482 86.7148 cv
198 86.7148 li
208.74 86.7148 217.448 94.9053 217.448 105.008 cv
217.448 160.692 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
2 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
217.448 160.692 mo
217.448 170.795 208.74 178.986 198 178.986 cv
20.4482 178.986 li
9.70752 178.986 1 170.795 1 160.692 cv
1 105.008 li
1 94.9053 9.70752 86.7148 20.4482 86.7148 cv
198 86.7148 li
208.74 86.7148 217.448 94.9053 217.448 105.008 cv
217.448 160.692 li
cp
.0901961 1 1 .0156863 cmyk
@
.74902 .678431 .670588 .901961 cmyk
%ADOBeginSubsetFont: Gentium Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /Gentium def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 49 /one put
dup 58 /colon put
dup 65 /A put
dup 66 /B put
dup 72 /H put
dup 87 /W put
dup 95 /underscore put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 119 /w put
dup 121 /y put
def
/FontBBox {-519 -298 1298 1059} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
26 dict dup begin
/.notdef <1C60D8A8C9B88EAF6D> |-
/space <1C60D8A8C9B88EAF6D> |-
/one <1C60D8A8C9B746F4A4B9BD893ACB075E26126518378D2778A92E2D7B91
DF79DCFA16DD058CF6B6F0FD1C06586A52BCBF902B2706FE57F622E0A1E78A61
C8B51AAD8E02AE93B4A2AA90B202A8C44CE69D5A9D91A9225BBCA0068AC5CF42
D4F0E752CB5EB2BED109B91B192AE3B06CDFFA07A2A607AC864A9EC9CB866A9B
4FCB69E10F649BFD6C2B1AA1E1052177C52929E01122646F1AE3D904E480> |-
/colon <1C60D8A8C9B887F06447CD432E983B1782B92C92E23DA9132C4DB4EF
2407ECCD0CBC2152D4FBC3720164A0D2E464DC81FA4B3FB63502F6E0A750B844
1EAC47316321CDEE35236A615308F15150928FB4B730A59D7F7D285D9F0ABBDA
5625AB93D8385508F8B7DA3A36EAE3140C6080470804B42D24265A866023550A
53B281339DA0E9A0F3BD79A7C955F7F6BDC3C1CAE43C7CD4709DDCDFCAB9B83E
72C829595D77EEA1182BCBF5A42FEB1C128F4CB092D4C1E11F56B31D9B9F> |-
/A <1C60D8A8C9B7C8C1523996E67AC014FB1A27E5682BEF0B6572F213906509
CB2C720AFC4DD7F855016F71A9BB5C484F21C12E90F0F4C79DD2C799139566BA
96F26A4E0E9B9D8E693AB25E86295AD6EB6196F301275B8F348463024EB51D99
FD27E1DAEBAA68E0E488D30B60652EC787B5CC3280E6FDBC161648B4806D721D
0B9B091B> |-
/B <1C60D8A8C9B795A0B189E1B6D48C36A264D0FA73371A2A3BE1CA73FC109C
5583820245ED24C47ACB8AE58DDB252DA6CA31C93B8C177023BE279AD95BEF77
18A3FC92C85882C96D5914C6576594F8FEA0B6026B10ED08C4A201F677776089
8DAAE56E94D7A06A141951A728D3440B7C1DA8164C5D42A1F3FBEACB51711446
B9F2C7B1D09173713F9DDD758655B3C795D608338ACA5B0019F630016B0F3F40
A23E32617B183E5B6D28361EA563B2B3CA3FE3A9BD7DC9A32FEF971EC10BD700
95397DA7B2007EEE62AA9E330CBDF5F6D50695B35E791B8FB5C01A763B1704C0
9EEA48E8CA13A340BA2ED8266E3C3F3B80389A1008334282DD1D17C99EDCD046
7927BBB0AF27F9129F1EB22FB0572A6FC560F5EE4675DB29A5C17C51CF25E550
7AECE6C3C242A0748A7A8F79D74A55789819CC3410E891D0B1F13B89BAA2784B
470BAAAAA6750C1B1321F5E180D001182368E8B2EFBF54BE995FDD96090EEFB3
DC2E4980E9523524962C751195E5149BDF158AA7DF5A2D890B2A96ED6A6ED1C5
2B8DCA2693882B4D4206330156EB0BEDDDB977952149F4C688> |-
/H <1C60D8A8C9B643FE976616041E78680E75519C3AB783FD628FE7D8D315FC
701CFD4F13FA0A7F4E162F0288643550457AD5287C95F92C2A2D1FF0815F58B2
2C5F16CDF6D904D438A2B56C049F25880AC79E0AF94D9E16A694E042730538F4
B76E58E084E398D3AAC6BAD1A9DD5FBCFC69DD9E1BBDA1A93A3FFB550EDAF161
4D2E6D781C0AD04E33DB2789D2ED2684869E7C3B4F763F76C0F092DBA635F9D4
5D768581086AC276B8931650FCE6CFB2> |-
/W <1C60D8A8C9B687C5977E6F21B635BB62EC853473AC5EFC2245DD7B2E1EB2
80A3A1E34AF6D6114BC388D20C62F3E829A6EF287BAD1408C906EEABEA486242
07F5B7A438C249FA64333DF623D81DEAB263C9304FD8F0E3B07E31ACBE7FD211
9CEF0C8FD3D708C82F97854028CC5F80E58B36784D04D9B2180C97B54DDAD788
1B996CE9F209D21EF87204FE0146A67EA2013C57A844C073BB60BFAB4BA23BB3
F6DEB6E7544B06622B18CA77D23109297AC424DB41C796BC90FCF1D628B01B10
A2B6D57CAB4D65B13D3BFFCE3E654D7CC5E032292408B36B55EB23AAFDCCB826
40> |-
/underscore <1C60D8A8C9B746F4A4DD8C759824AFB2EAB355E88194E1243C0
91D77FE8B49153904A1254D996D637FD6F236E85DFB1586E0C7EA36F1> |-
/a <1C60D8A8C9B770DA4D867C458083378D419A58F694CC7318F6E9F9507687
AEE45F77B2A069D448549E76B2E903C4508AAB50F568F925E0ED69E5FD0B6537
6FAACA346B785556D0714E7915C531569DDD1D763C5340651FDB2E862596FF46
F6DD5AE0C670DE4A7C26EE54DB26E86851E087650AB73CDD052DCFB9DE4B67B3
B8B3006E7C64ED93EB76E2358DD551E2A8E24084B378603695F6CFB124F87541
B044FB7D7A67C2ADF9B1E57B89A354D14E8C4E258C1FD77EA732F5EDD1478F4A
C6B2D73D1C865D302BB532C4FECBE6512095E2B32D42D37BF2E7F6C7F6BAFFDA
DE0C381E153FBA87939978EA08A1940232F88E27010726A82A9DD5FD9593CB91
1EF3B313020B58B163C0E7F0DC982F6E033D74FB1D7F33864F276EB62480D834
DB48EA5298D3B935683B0081BF0E8DB77C4497762AA7DCD24B44E127FD3A4E95
09E1CF5249FF1B14A1819568195AD032C600924EED161DC0E699B84EA794AD09
61EFCA22FEEA32BE46F2F13BC07C04DFAFCC69EDC9A78EFC1F> |-
/b <1C60D8A8C9B7BF865DB43D04F2E9672B6999C5443BD27BAA1ACFABF065EA
7AD7817B24F063A28ECD0269B3FA0C73824D293F3CD73B4CF2389E4CDFEA0B28
D4C8D6AFACFDF66B714BF590A8755858363EFBEB236E82E2214813A32B9B87A4
662B80E7716E66520F6D6E86D9574CFE710A6A536C932CD459006B5E4A78C769
A4D785606C7B2629CF8036D3BF48F551194D6E97AF9A12ED101495B966574FA1
B73426CC58BFD2F8A616429F088CFBDFE6D999968B3855C5D6B1AC5F41C0560F
E74AA048E8F4E84AAE827F13BADB4D4335A35D0684E03E80B13AA680C724D8A1
1CB64BBB2F1EE335A1DC27DB53555BABD08C1442DC2F94C6E5925BDE05F11F8C
B4C6A61CCFB7E7D2F10A036494E3EE36D41309F76E2AE121CE6A6FA8FE7F5192
399424A5F9EE1A4F6132AD8C2045757B733C232D032E680ADD9CD742FD1B8829
172A2D67DE6CE24929B0A3FC97D4> |-
/c <1C60D8A8C9B766CA33947DB64CFB7AB44444C3E9B5F7EDDA4F81E8BE1C52
273C4D18A1F8C46B63C589E5F6429FBB535703DF98C9841FE072446512AA148B
7E22D42C2C309F4298A7CE317F5634F8F115B9CE68D0645CCC30B1F8F9568C28
0798BFCE6E59608D84D81AD14738D3C802A181316C4A4AB2E694C2D6314A95CC
9529531F0AA4DBD540D4CE4E70232158E20EAADA19F46868F2738AC381E37C33
E8BCB893EF835AD6645558F209C92200156EC9FEB8BF384908034F73A1302FE4
A1973DD85CC48CA6F8B181223CCB1524A9266B9FA603926E21D0815EF1CAD758
EFDB6D240DCAF9C4D8D0DBD188AE215062FF66BEC78BE3049A1DBEA145B832D4
5C8F09F8A4AD66936241D4B92E8E79A8282C> |-
/d <1C60D8A8C9B7B3D0EBFA8EA62FF99DC7E1E1EA6805C5AF2A1EFD9A127716
54310FE7374B210DA7652F8793F1F1F74D1DB47A8C989C10BC7A914932408B41
677856CD9D694AC1D8AB400EBC9C34455D2A9D0B75A90150F8AC1AFBC5DDB524
1287844C95494FF57690542A830530DF79009BEC0759C54D31613EBE13C15F23
4E3A47282AF270B3DE8722B848AA562C02804D41881E272FB186686C3CEC3A18
33EC8D5B06BD37E2AA37DC67E19B80ADB7298D200AAFC808A7D1CF53B82302E1
4852C4D9B106EAB0B7AB156002354F70C5FEBAA9DFF6E7EAA2F0E1E4DF9BD397
C8155A3754D13B47A867454BCE9811C495F8757BCAE7DD218A09384434E90867
D8CD5E30C217969564A8DF4DB1E08DD339A9AD11E59A8E4AE6568A8208CFCCE2
FA0C2B79CC0B689842E8A43EB89CEA4D5FA9555CC5B2C9F6CCDA9C82C0C8C696
5A75F674532E8A5A6349D400D152CC05D48CAC6601C37ABAF4CD758DB9507352
1FA3858B005AB43AAAB44A54CCBB1F14331F97CE88BE24> |-
/e <1C60D8A8C9B74D93AA3F9BDC2851658C58D50E95B232B2DA0DE6F3BA5B67
5CE17DABF80147A7AD077EE0AB8E779A9FD54F6AD1611AA2195AC24672EB9EF6
3B67290E69B61CE8F3FF83A24F1A85D04AE3406D1D3BCEEF5A4DA43BAE9A8CC3
0AF3535A8F3DB0955D1D14E7A111AB99BD823B041525C17DE16B588D28C0AD2B
DDEFBE27E415E1BD767ABD2F43E56E9B1D4472C34D476FDCC5643EA6BF94C596
DA2F5FDF6FF632375A22233CBEAE8DF13A8EB26BDAD19A52560F84A909E04F93
CA51657A875B30A33D3E370A4D5BD1656595B3FB55269EC01D63C73BF5BD7B56
A65E51AAC3F57E224DAC25DC164782BD6C96C3293E260C2BE34A500F71BDB366
B821FFB13E5B925D759D0910C64BFFFBC7D5D6E6CCEC6845009CF60DAF4F1CC1
778DD9DE5AACFC87296C540FA4810B693040F4A53D201B4C137C1228A2F42F97
0CF7D8657B9982866D94E941A397F1D5B9923AE3502BFE368F1EDCF048416690> |-
/g <1C60D8A8C9B75378C1999FA0EC6F2B7003C0DBDD6D50077E1590BD256DC1
D483DF2951523BA03A796FCDA8759955041D2E7A1F8333C07C02AF09A45239B6
5F421061942DF487D46A46B66BABE139F80261AA34734BF69F7E7C9B78E4277D
F7C62D1BF87EDEC61C8C4917765C5997177B7E932CE05C15FB87906243848254
6C15A6396F9DE8C0A4854ACCD38CF07CAD4396DA7C745B5E61275C02F391F7B3
FDB50EEDA405B74447F42313D2A302261837E84487A7B702E34789DEEAE591DD
6FEF8771F3A3AA27CB4DA2564C025B21AF4212740FA0285061230283F976FC76
F1287C5ED80097446990725CC863356F007862E8AF998E512281E9A488EC9074
E4FBFDC2A145A74650027966ACAA8C5BD3AADA9948BB81B4860DE6ED7967E131
CAC61D7CBBA805A4CA3B790A00C090BD4404A6DCF3AAB0247C2193D3808BB8C2
290839B7087D787A77EA7612E559B860209CC13AE932338E77C1A27B74331FFD
6A11C86D6C053A7FC8DCD0ADB8D8EFB8A9A68FB5DE0ACDD01933A7A78540113F
63914FE699EEB90B5D69CDFF4394DA98B08F1B92669276414544B1475D66B04A
44A8DDAC8E0433268C4066A040E53216DE1D0DCB3DDF5E1357FBD19CFB6838F7
431ABF5F42586EC1EE7BD59B26D5C29DE1821C22F0D84EB7D33F494807AF5045
B2D03349B1876B4E386B0407C8A54F28A24D6238348A1C071E7F0FC9D8731E05
653CC065D04EA7B27A56EA7F90F5A05AB9303AEB844203DCD0983239AB5716B0
95E6E3147DF2FB5EE45F7A3DCEA52F59FEB9FC3D906246D117D4DDF26125701F
BF6F1390B9E7B48952B542604F9C11DA1BBE78E4C52F1BAD0AD7909470A1C395
2FD055A4EC57B30D618BE74FDF9A2D40969B05225A12145516839DA2036A4B86
C587866FB2673AEB5C3C9EB470CB6B6556752F026AEA> |-
/h <1C60D8A8C9B7931D883A8AF26B6C92CABFDF5CB9FE9712860F7286E70824
0F746AA072D5691C32FF653BAE9822EABDB15282C38D533ED282163CFF1E07DC
9BBA786B449119258C7DB6680488A01660BF6A7ECFCB6E9110D713AB6249A9CB
2DC4C1EBF12EC411D0A580EAAA9FCC5D8D9E7F3ACA56F7F10CF6FA02792EBE6B
BEA9A443A97520B70F1381A787A1343D944BB2599BBF31999BAB94270DD0587C
F7B30D0DB66A187C0E8F8F06546A3AD3D921FCE015EF31C48B653858004A7858
A78D1EC55C6C607312D1C2D82983ABE6C607BC70075341C6E50DB068AFBD6ACD
E33B4C7D2E43678F0B992FCB54D753FE4808FAD43AB46CE813EC2ED0F6D8C18A
F86B7FD8AC19CCCC8747027D71D1> |-
/i <1C60D8A8C9B85D12CB852769E44EC3788B710270EF7CBD4A9778D4755990
989411A3B1D06AF346B28C9A31F957C9B1DB9504AE4A33879A5B8D9078EED848
0BB0D76B444139615F428910F02C5A62A6B52D5111EF2B9B6EED3274F7B1E663
CC1DEC4C6FB67A34A99BB995280D83B524B3E27B409E7A22686C211836EC1CB9
E81E95729CD834154563E58A7AADD625A735CDF0E6DA33713B4DDB7B44B0B595
D252AE555D91DD58BD6F915AD77420F0A185AD9D7CA3E97AD8FA5EA876E4F425
DB05C0> |-
/l <1C60D8A8C9B85D12CB212AFD66F919E390341D639B6FAB9810B25C1E9B3A
DBD7E9140684347A88139CB15CC13858ABC8F4EC3CC8E07876853B6BDEC2A9E8
C14FBA56C43616CD36EFD29356D15802642D0B54CE38CC770DB6632C30229F2F
DB1743DB16D31964740FAA4B834ACF0B3425> |-
/n <1C60D8A8C9B7931D883A8AF26B6C92CABFDF5CB9FE9712860F7286E70824
0F746AA072D5691C32FF653BAE9822EABDB151D389B486EFD902E925B123F58C
57E5E81EA549D04E934634E003517FA3EDCC8368669F2E132B1331F37B9333DC
87001113CDEFC1CAD90812CF8EE609A89C3C117DA64B1CD9C3A9D1AB99F36326
7A1DD17ADEB2FD3C9F36A63B519C8B6C1D34628B4FF0718F2C6E6A289D6C3936
37D9E9DCC4E3A66C9E78CEDC6FF7E9B3B88FA120B164E94E299E71650C9877DD
B54080AE8066C70A117B0C46F7DF25647B38FD99CC9D8F38CDFECE91107818F3
4CFD220970ED61FA31E91BFFF45668ED5DB5CB8F4E6D4C89B1EA9256A633E812
1E> |-
/o <1C60D8A8C9B7A4C86C217AF93A06F6868CCDF22D226E2795CD471EA3C2A7
0C55EB03C6D3F52E5ABED3E16D4C580D3C8294C3A353CA3C3614EE32EC3D62CC
E8B05ADF163FC3FA97F65C32EED0F52F69549B0D8B5B9B735D42FE7FB7721039
D36DB91A64E3E729DA4D111641BF56FD382E5EB44309A453CDCB706B61AD3728
D095DC8646D34CDD824BE1E122A7D259B909907FF7ED790E0319F4FA565D9870
94BCE7A96EEDB88DBFACE9DBEC259F6F3756B0DA63A51930066ADBB4CC0C7F43
BEA725C6CA1BB4B0D106EBB4F99F93A86137044E35EA5E7375889D1364EACBEA
DF03D6DF353423EA9206F4AED5E7CCF96267F0431FF2449E772094524B9206ED
C201A5E8117FA2E1906888ACAD0EBF8FA106> |-
/p <1C60D8A8C9B7890D794DD79285E0026FCA6E422BD4858DA41BE84AA7AD58
7FC5C6DEDC7954283F6CD34E806CF93832786A9B5D659EA816E96015C1713F2E
833F248988941CBF659D94D6F68BF4102B2B6CC6F1315D9322944B23C2D4FDB7
30FD0A9BDD32F4F475AB8DFDDF112C7A0352C9A30EDC4DD43BEA0C725690F61F
6F6AFAEC357022C02A3633D711A4D80CB8AEAAA6B3CE172D1FBC07B058DF3DA4
D4C8BDCF030C35915B148C54D96D7CC9A1CD25F523F5C914B0F5ED2DE4362B3E
26EE1DC511EC77EAB9A800BC8628CDFF7EE4E258ED8EC787C752227A10C22727
A39662A1C1E9418D4427E5EE7C255B53BB89F2735FBAE0C8BFE30CC8192692B9
4417F884A800D5AEEB31FC844E0AE83B9E787F90C0C85759C48AFC6702896429
FF003E50C0B031865CD8A1BDC0F5BAB9892163B9E0C629DEA302FF887E68189E
DDF781FEBD3558EE357DC83924D4F328B57378BEF03F149325815744D6BD38FE
0A82> |-
/r <1C60D8A8C9B70FAD1832C48B366385A4AE212539414B2A22541EDC41B1CB
76FBFA21B8199035637CAA884C37DA8CADDC2BE1BCC768986582B186408651DC
DA1D835C3CE46C340D51B2BAFEDA84317E7D83AFC6ACE349C6CDEB314F8CCC8D
1FB0F59E4BF3D632C2E444EEABC1908E1AE39D51F94D4D463DFD121EDBC594A8
3E71D4D6AE472B3A950CD459FAD41EB5FEA2632F0FCD50F257D0FCAFEB5BC599
B9A8F90FDA530152ABAB8BE809DC0724D171F36E3EEED93076D38BDC17B60FB2
60C0A32DF65E721FB0A8EE16AF9EDAB97D96D00E8E1F258463599F514B0A9F4E
4004810766E78D9FF6758EA49AE4D5A7820957AC7BD74E1BCB0258F9DACEE95D
C24320772A40E6BF76> |-
/s <1C60D8A8C9B73970E36E87EB638B690E993A21DD92AEE1AEAB76CB30D640
05FE11066DAF744551CD94DD34757E253977FFEAEF1EEEA3F41507394FC61A1E
40DECC3852C4982731DDBDFB7E0FF9C23B2B1B750BCC8DC406E77D95748D2E7D
4B28D116135CF22E54AF79307EC65C84608FA73F8C8BEEE88F2A9C09E4793FDC
FD063B2D89BA0ED16C10BD57109E67BC53753ADAB620AE7EE8794E7C92DD4FD0
EC42153DEC9E7015C7BD83FBFB68281E130EDA21114A47131D83C475538D87DD
D34AC8ABE22369F295937C10740B1BE9D2A341558C8ABC758B1EE4E96EE944B1
32AD59771436DBF875CF88984F22A98EE4E3D5674C164B66DA6A9B23FDD11A41
E5B1482E698757E6DCD958E44377B225AACCF8278ACCADFDE45F32F554826404
80CFAD9FED372F009650D0E85F39B7672BEF83B124A32727F9640EE898C777DB
6C06CEBFA40B437C415D0C362B4D340FF6EEEFA2CC5A4A05D73F022AE801A571
9068A936F48012C6DBD2F0973BDAC3C27210CCDF00C1CE695254C181A49F3455
DE1546CCE64F6CEF04A4561648A05BDC7F> |-
/t <1C60D8A8C9B812A80438DB85E16FBF88B5E844F086DB8D8B99F9D44A233A
F39DA3CF739AE82D2FB237E096B43BD937401CAAB950E0CB3361CCD535B1B3A4
2A07EA1068AC4B4C1A476EB04A5BDB7752E539C855C8BA61F124550ABED7CC60
2FCE97CCC8BADCFD70F4063D3CB7AFC404DFDAC54BC5C51C0A27711A8662D2F9
EF9270C0A62BAA510055BB7DDEB1ED879BD484BE687859A1C2D1537D1BED6C61
40500D804CAEC15402A07263011F48372848C898F482600895BE28E071FECF9D
82BED8> |-
/w <1C60D8A8C9B6374B34068258FA9A7A785E48B558D495AC61068BCA010265
E1E65F72808693816D69FBF71EACAE0993C76400DD40C403AF11A05CDF4C1D34
94B53076CB906F1A892750208789440EBC1DA72963D8A8952E630411334EA9B4
4D73BE63CB641C28D124EC9E8E5CA058D916BFD99B6ED91258AF1A95B179464B
0F09A18D970FDC34D692F2CF861D6E01AFBF6D0BB2705B3214F9BDF38A2B03A5
13D772905ED39130824100A2A7A7A8CB1D8AAA409625B1FE9358FBAD83FAE412
AE19B7854356CEFC8EBD2D> |-
/y <1C60D8A8C9B7AED87B394D38949B9B0426229126FE458B8FBDD9CD75ADC2
E68D0AAE645E8BDA11F89E70F9423F7DE9F7A3530CDACBCA7E8FE6D0C183BF2D
58DF12FCB1202DD75E011E8533A5F9224C7B49575A0D7B47AF8BE888AE658075
9957060A56C1F04146A497C011B47992F7FD5B0736E76542B5AFA713E053C8D8
6C606F991DFE5A5BE121B3DE10444F5D317A788BD01B123454CC43A873C46B9D
1506BA08A7C2256C5C6941F0CAC204B9B55C1723BC354057A7870662A0EBB366
3765915B2C290AE9236C072403D39E6AC2DC82E955D591013E0C14AE0027A414
33EE8CE65613EC87D0DAC893B3C68279D5AD0E36947604318C8E4D0A7A3C1F57
AC64F98CF4EF95DA6FDD0CA6C377FD4E49126807> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/QXOHXN+Gentium /Gentium findfont ct_VMDictPut
/QXOHXN+Gentium*1 
[32{/.notdef}rp /space 16{/.notdef}rp /one 8{/.notdef}rp /colon 6{/.notdef}rp /A 
/B 5{/.notdef}rp /H 14{/.notdef}rp /W 7{/.notdef}rp /underscore /.notdef 
/a /b /c /d /e /.notdef /g /h 
/i 2{/.notdef}rp /l /.notdef /n /o /p /.notdef 
/r /s /t 2{/.notdef}rp /w /.notdef /y 134{/.notdef}rp]
QXOHXN+Gentium nf
QXOHXN+Gentium*1 [14 0 0 -14 0 0 ]msf
22.3818 113.916 mo
(hello_world1_g)
[7.72461 6.4668 3.79395 3.79395 7.04102 6.56934 9.67969 7.04102 5.54395 3.79395 7.28027 6.56934 
6.56934 0 ]xsh
QXOHXN+Gentium*1 [12 0 0 -12 0 0 ]msf
22.3818 145.116 mo
(class HelloWorld1)
[5.06836 3.25195 5.50781 4.63477 4.63477 2.64258 7.8457 5.54297 3.25195 3.25195 6.03516 9.73242 
6.03516 4.75195 3.25195 6.24023 0 ]xsh
22.3818 159.516 mo
(  )
[2.64258 0 ]xsh
%ADOBeginSubsetFont: Gentium-Italic Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /Gentium-Italic def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 100 /d put
dup 101 /e put
dup 110 /n put
dup 115 /s put
dup 116 /t put
dup 120 /x put
def
/FontBBox {-521 -286 1135 1039} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
8 dict dup begin
/.notdef <1C60D8A8C9B8A2CE7C> |-
/space <1C60D8A8C9B8A2CE7C> |-
/d <1C60D8A8C9B742B24D0E5B5A95E577FC244EE42AD44035D2ED7C78D744F1
AF20FD843F011D9FDC22FC5BED4D58A22601CFDD37EB6524B1D33B97F466B21A
6C921CB63A254CA899106E09A070330B829F9378DF3946C92CB43C577BC1A43D
39B9F16A79C957810318BEB9A137339AA9D9B41121A94CCCF3DF812FA9FF842A
362D9B3E04523512A7F99AF1D4FFF38348169806109328C9D52775DB38BC8994
CA703CA8FB3DD624E2C7C67DE8BA6AEA5F6A0A9611EDA888328F2BFE1411516A
BF25BD3352A19F210909D76E080D4912E836011BEFA578F711C5F72424F821B1
9953B617DE85273F013A775001D99D55968687B5C2C62FC41373E53B58544B3F
30C0791F4302F7E1E4460690FAF0DEEA61F7F406187F084708E2F0E98C8BF948
435AAF6843D10B6CC84DA257E7E9F7012E303CA994990CDF9F72FBB5C3CF1AE7
8C4394EE2749336F297CCFBDF734B999E629DB9F54FCB6773271EFC1CB639CD2
71011F1C6BCE450A91163FEC12CDA684F6CC75AFCCFE5FF2E8E6884AFD38C950
40F555D603D7B753560ED8B15D2A68714B5FD41748D7855F11A4C602EDC7818A
A930163BD43C8BF2E70C230E20FE126633A4EAD01E88D1EADC8BAA9021F5190A
B11F6F8863A08B1217732347C342BAE2D1422FB9F55D899D10EDD97255A57297
84E13E93C0C96A8D3174611271D332E3EA11639BAE47BBFB8B8FA4AF14447F79
D5D04887B0C473AAE9E4211A807DB3C371782995400792D48A7D8A4D> |-
/e <1C60D8A8C9B732D489B68B3A48FC0E92AC91A4A629EEB9DE26B16B556070
FFBE3D4CF966650F77D14A5D4222F59BF0C8BB9BCB67F1C1D72AD8BA4D689A30
0FC8A70C03BA96D95C63B2A3CE4F9547D35A1FD48554E15B67E0F2C0564D7FF5
EDFD8C8A4DEDC7E7AD051B4D7734F7A6594A99E0AB8085A2F262A7A615FBF815
EDE49E940EA2029DD8398A33CFEB9A78D26ADE9CED0CCB6A9E4CEB4D0CA59EC5
A17D21FB76A4EDA63351F3A75DE3AC4F6F04F26FED5DE1C5FA19A4F56F20A5D8
0337CC00A5DE6055189CFAB54A5849A5B12AD0810A069A7DA87B0F48C84394E4
F41E7AA4591AEFD440180F56256A80203BC71DFCD88EFDD6D85BCD56C434CFCE
36554C3AD669D11200A2EF5539402EA875CB5866C3384A9173E8CAE068C2F793
CC82640BCA92CCD5EFD0D5D83C442D215611ACE137A7E9F0FF7B4E1C0B1CE396
B3E7E0EAC1264D4DEB70ECE18739A0DD88571C36CC736D72A9881045D17C0A02
2F904458E814ABE3E01B943E872EAE149D780AB9> |-
/n <1C60D8A8C9B7AD0A34FF9CB0AC65170936131DF01B12D2A40D6E6CCF22F3
DB15CC4E5457762C84CCEE254AC838F9265C47D585559C01DE2F681105FB38E5
FB3429E66B2FCBAD4AE42454F92923EF6B17295A061C59ED4DF039903AB9921A
5634BF6126EBA98E8C9287736566EF80FCC861018F9164364A612A4C66302FED
3566B107C896022E1A12FA7980077965CFDB1A299DDCE761A92D111E3A7C6AD0
575B12AABA736FBFE4BF86528B6E2D729C76BF2BFBB8BBB6EA0C24FA14CA4DAA
28A1BDA83CEDAD4CA5A72D90B6405697FDEBC9E4776AEC19B13343AF0EC88890
413CDD83F07AA091F7B648C87F5C10907D95CCFE037715BF561EF90EB031A059
3DE15B16BB584A5CBE2F4D19565FC57D1BCBA57E5ADA820AFED63F99AC95627D
884ED3270B46887B257C9BC6A4C4BC042263FF1C07600C23FF9192C61CC9AAF4
B22A08BAC55ED22DD7925F48C1A9DB63E5062B4E79CF65C41B9EAF86A9850FF1
3DCE5D1746F2C4F4E761074D46064F0C2FE3A494FB02685C2D0A9020A3B42987
370A32A959B312875D06B2127DFCF8FFB8D76788BC777F7D57BBED44C659BC8B
B0C5E4911616712E13FF933279031463C533711A0EF92BB63A37E315A06A46FE
B2E7FAC36602500936BA2683D8726E2982B4EE1E80BB1367EBD3F6C003885C24
8DA4798EBE219C001534071AB23D> |-
/s <1C60D8A8C9B811DA5D42CBEFAA015C2886E28EB7EA40AFA008ABF819FB26
57D5ADD0EFD429E783C06376B1ED8284D2D064D6D9E48BACAA762D53D158AB76
AF4AE6A98A9F47F7A61B7D6596CD07DA8E5E15F35418564A2427CC9FCFD71C16
5A82299947ABD75B83176703C858A0DE0BE8266D5542EBEB4CE74FDC291B3733
F48FDE34B4C208025A10266D37FC3F2CCA9870748FC056A6FDA128D715275D48
C9D024267BFCAA8F777F8B3402AFC8C154C88C8B706F0BD876FEE6ECFFDAD39F
FF04573E34918BB6947BC3B5C387987C77FA8029E58C93DBF7DADD8868A5C749
A5EEB8EAEF78AA231E603AD40641DBAD12F26A3544E17F7FCCF175B966EE979D
B346A31241B9E7FC72C3830CEC6508A22010348BD3AECB6B75E412F9E93E3966
F28A3AF5B124CD0C5BC46D5C5FD6B8593E454FE4E8EC3EC0D6875737EDEA14A9
974FCB2F14937F42C490A9B1BE4DEC51C86A9661C56D0353EAB09F9744EE41C3
A07E304F606F2D82565BB69997489E9331B832CF2B3FCE4796CECE9FFDB457C5
56AFE39FF1176DF1D7F575BA76A9A537170EC8E49C779F33A3> |-
/t <1C60D8A8C9B8391507488A33D5C3F599A0C71150DEE392B7EF8CA67C59B1
FF408EAB9815985EAC4563CC25AE0C1F6C32C8B8B241DCB203E1DC57B7C12586
405F4CBE890EAE5D51CC92F6B4233DF67A9DBEE4F3A86B41516F5478D135BEB7
9B115A3BFA325E513547E8580E3913F0056B1C5ACA07F839CAB4471538F00B87
80908917039C88D1B64D08F5534B38D770D627A0B7CA4B145BBB03661CA2AF38
542FDA21D6226633B6503CF8E2523325842FDA1F5A034A0C232657AB38F3871D
A39EC55F1C313E67C07E94F4B98639A01B1358ED6D439CE1AD6428B2FB8B835F
E01CF68C8E061D4FB6170E1C56FC2527B735D7540107249EACE6D9111AEBE976
C0CE81C04AFC85568384DD6B71F3455CE2183B53F804F942097C15C814580260
F0C142EC76CAB3A6890694564F06> |-
/x <1C60D8A8C9B763568A74E934D98337C8F7BD45E67227B51BDC02DB230356
77D5BC6B48099850FBA6B0D01DC6D2551C30794A2A0A668FEFD6B50E0C17C25F
B014594C77CA9AA3468E8816FB6E772F0F65FF4048C1BBA0BB08E1A3CBD84DB9
4330B740EDD9EBB629EE15F46B6A7C3B594C094DA6E6E978CE5505FCA64389D1
133F24B4C55CCD386D11AC3345A06CA065DFDCB27D15606B55506DBA7F9BEB4C
4356A4C8055BD50C081468A2D2588028E16D471F7282522478FE196573C5BAA8
127F642BBF17F1DF1D4E7D3512650B048736CAA9299D2D43C382CBCEB12A90CF
B4C85298A840EBB1A6C9A5F8E697620DA0D7493FF5354CE650CDB02CA43659B5
81D3FAB596E3B3BCCCDC625DC17AD8017524DA3527C78088BDF29582C2005474
6BCBFC40B753499189EAE84C2DEAC00D7C4239370832E023835955176F185587
1A4BB3061E7DDFC3B6BFF1F556659BD813BDCB2122656D605FEDD6C63716920D
2ABD0FB30138A1C6DB7E1576E1BAFC36AFDDF04D6805352EB5DDAA862EE3751C
A16B6BA69EAFAE93F3420F184F8164836D3A6AAB5190AD48B794F07CBE> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/QXOHXO+Gentium-Italic /Gentium-Italic findfont ct_VMDictPut
/QXOHXO+Gentium-Italic*1 
[32{/.notdef}rp /space 67{/.notdef}rp /d /e 8{/.notdef}rp /n 4{/.notdef}rp 
/s /t 3{/.notdef}rp /x 135{/.notdef}rp]
QXOHXO+Gentium-Italic nf
QXOHXO+Gentium-Italic*1 [12 0 0 -12 0 0 ]msf
27.667 159.516 mo
(extends )
[4.55859 5.2793 3.68555 4.7168 5.92969 5.67773 4.16602 0 ]xsh
QXOHXN+Gentium*1 [12 0 0 -12 0 0 ]msf
64.083 159.516 mo
(goby::core::ApplicationBase)
[5.85352 6.03516 6.09375 5.91797 2.74805 2.74805 5.24414 6.03516 4.57617 5.54297 2.74805 2.74805 
7.14258 6.35742 6.35742 3.25195 3.25195 5.24414 5.50781 4.13086 3.25195 6.03516 6.62109 6.59766 
5.50781 4.63477 0 ]xsh
601.369 160.692 mo
601.369 170.795 592.661 178.986 581.92 178.986 cv
404.369 178.986 li
393.628 178.986 384.921 170.795 384.921 160.692 cv
384.921 105.008 li
384.921 94.9053 393.628 86.7148 404.369 86.7148 cv
581.92 86.7148 li
592.661 86.7148 601.369 94.9053 601.369 105.008 cv
601.369 160.692 li
cp
0 0 0 0 cmyk
f
601.369 160.692 mo
601.369 170.795 592.661 178.986 581.92 178.986 cv
404.369 178.986 li
393.628 178.986 384.921 170.795 384.921 160.692 cv
384.921 105.008 li
384.921 94.9053 393.628 86.7148 404.369 86.7148 cv
581.92 86.7148 li
592.661 86.7148 601.369 94.9053 601.369 105.008 cv
601.369 160.692 li
cp
.74902 .780392 0 0 cmyk
@
.74902 .678431 .670588 .901961 cmyk
%ADOBeginSubsetFont: Gentium AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
QXOHXN+Gentium dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/two <1C60D8A8C9B746F4A4BBBFDE606B53FB8858DA0C1AF5AA5DEEC3A77247
880EF6CEF9E9B33FD3B765132366EC7FBC7D9BFCB47194A74A96DB99958B5CEC
F4DB4D272DD4662A7B64D597CF1DDBF0561073BA1BCF624037A57397465B8251
5AD322ADA01543B261BE828BF7A901481216C5D327E9C2AD08BCE66955AB949A
C91FFC0CA564153172B00CCB9A2D67C6C9C52002712831481639D943741E80AC
9FC10620EA2409D6C5D44804667E9E93C1028E2C6399C48E3BC53EB599D3E884
C4841A811268426007D86DAB61779C71A6D0CDFB05EBFB14D55B1E5297E9180F
BBFEBBFCCC92B60A2210103DAD4BDE5CE01F1A8F36B08704CE590544C4D1C650
6947FBE59FE6697E93432E0F50F7F1D6AEB88129C1A5CC839E794B43886C9892
15E44121> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QXOHXN+Gentium /Encoding get
dup 50 /two put
pop
%ADOEndSubsetFont
/QXOHXN+Gentium*1 
[32{/.notdef}rp /space 16{/.notdef}rp /one /two 7{/.notdef}rp /colon 6{/.notdef}rp 
/A /B 5{/.notdef}rp /H 14{/.notdef}rp /W 7{/.notdef}rp /underscore 
/.notdef /a /b /c /d /e /.notdef /g 
/h /i 2{/.notdef}rp /l /.notdef /n /o /p 
/.notdef /r /s /t 2{/.notdef}rp /w /.notdef /y 
134{/.notdef}rp]
QXOHXN+Gentium nf
QXOHXN+Gentium*1 [14 0 0 -14 0 0 ]msf
406.303 113.916 mo
(hello_world2_g)
[7.72461 6.4668 3.79395 3.79395 7.04102 6.56934 9.67969 7.04102 5.54395 3.79395 7.28027 6.56934 
6.56934 0 ]xsh
QXOHXN+Gentium*1 [12 0 0 -12 0 0 ]msf
406.303 145.116 mo
(class HelloWorld2)
[5.06836 3.25195 5.50781 4.63477 4.63477 2.64258 7.8457 5.54297 3.25195 3.25195 6.03516 9.73242 
6.03516 4.75195 3.25195 6.24023 0 ]xsh
QXOHXN+Gentium*1 [12 0 0 -12 0 0 ]msf
406.303 159.516 mo
(  )
[2.64258 0 ]xsh
QXOHXO+Gentium-Italic*1 [12 0 0 -12 0 0 ]msf
411.588 159.516 mo
(extends )
[4.55859 5.2793 3.68555 4.7168 5.92969 5.67773 4.16602 0 ]xsh
QXOHXN+Gentium*1 [12 0 0 -12 0 0 ]msf
448.004 159.516 mo
(goby::core::ApplicationBase)
[5.85352 6.03516 6.09375 5.91797 2.74805 2.74805 5.24414 6.03516 4.57617 5.54297 2.74805 2.74805 
7.14258 6.35742 6.35742 3.25195 3.25195 5.24414 5.50781 4.13086 3.25195 6.03516 6.62109 6.59766 
5.50781 4.63477 0 ]xsh
200.986 72.5972 mo
251.048 25.5083 329.662 27.9146 376.75 77.9766 cv
.611765 0 1 0 cmyk
@
385.02 86.7686 mo
379.594 84.0752 372.147 81.4063 366.381 80.833 cv
375.666 76.8228 li
380.236 67.8018 li
380.456 73.5913 382.664 81.1885 385.02 86.7686 cv
cp
f
.74902 .678431 .670588 .901961 cmyk
%ADOBeginSubsetFont: Gentium AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
QXOHXN+Gentium dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/M <1C60D8A8C9B6DB894E02F18A1614BE2F55D1694E97A915F5B347EEBA4BCD
A14C7CAA8E676425076886F9FC7656D4C69C1F4F21298571E40BFACCF2843A8C
47F2261571DEB2982BA8AF62DFEED95650F382CA7BDA867FCB63889FC124AA9A
37232B72C194F658700660F467C5651AC9592A7C35BE6AB2504CB3916E246D14
650F20A27789A2D79832FC22DC7BF022BB95CD0FDC6D286529E13727906D379B
C6671B9C77F8564CF3847BA3D4443A8AF9606347CA44B2D10A17A845AEE02654
3BB4BF36EAF0491E50DA08B60CE2B68DD065EFE15019C1D18F553A651E8779B6
E2E3> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QXOHXN+Gentium /Encoding get
dup 77 /M put
pop
%ADOEndSubsetFont
/QXOHXN+Gentium*1 
[32{/.notdef}rp /space 16{/.notdef}rp /one /two 7{/.notdef}rp /colon 6{/.notdef}rp 
/A /B 5{/.notdef}rp /H 4{/.notdef}rp /M 9{/.notdef}rp /W 
7{/.notdef}rp /underscore /.notdef /a /b /c /d /e 
/.notdef /g /h /i 2{/.notdef}rp /l /.notdef /n 
/o /p /.notdef /r /s /t 2{/.notdef}rp /w 
/.notdef /y 134{/.notdef}rp]
QXOHXN+Gentium nf
QXOHXN+Gentium*1 [12 0 0 -12 0 0 ]msf
191.789 9.68994 mo
(class HelloWorldMsg)
[5.06836 3.25195 5.50781 4.63477 4.63477 2.64258 7.8457 5.54297 3.25195 3.25195 6.03516 9.73242 
6.03516 4.75195 3.25195 6.24023 9.67383 4.63477 0 ]xsh
QXOHXN+Gentium*1 [12 0 0 -12 0 0 ]msf
191.789 24.0898 mo
(   )
[2.64258 2.64258 0 ]xsh
QXOHXO+Gentium-Italic*1 [12 0 0 -12 0 0 ]msf
199.717 24.0898 mo
(extends )
[4.55859 5.2793 3.68555 4.7168 5.92969 5.67773 4.16602 0 ]xsh
%ADOBeginSubsetFont: Gentium AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
QXOHXN+Gentium dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/f <1C60D8A8C9B835D343F5E9E47DFBA477B366364310ACA806A5E933689334
020C16BF340C6BDB28D88C45D80B56F4EB0161E5E31A0F37D458E8DB001279DA
A58C3AC7820735B70F6A1DAD6D7CEB5B4A9B0CFAE732AC6AB70DAF43847F3430
C1E675FBF0C430BF46B8A537542A137D3E9716F028A298CF5379B4ED6C3F72BC
AEF91AC6E86297B96C5472CB9536436F66E60407BDE6D8C02396719DFA74E910
4AD1889856C64E3C70026DE693B63E32FACFA29F2C607225965AAE886FF0CAFD
7FD869B31D301CF0990C94ECD08C0EAA7EB8792220E60C81BF0B2E9D52D2BBED
2CB0CD135AC955AC43DA24105359F7707C0A7BEA8F3A8437A47CE923122236E5
0BCEBA14530BBEC662761D21B91C9E44EC988C984BAB20D734133EC3EBC968CF
A10ECE56E6E8F9BA420C199394A3> |-
/u <1C60D8A8C9B7890D79E7FD01930CEDF100DF26116267C8FF37AC192C59E8
91A9DD58169BD5A82DF22D10734CCB970E66FC76A39C1C59E002EAB2A98693AA
A31ADA08706298BAF38A3654D6ACC445B61C7AD8E382D19129E8998629258D6B
AFB93B7740A7A184389B41AFA7EA0F65DEFF2BEAC855E577B5A6E0ACD3028E38
984A0A57D11F4CFEEB52BC3536D23A8F631536657917D7DF9914E5F7C9C32D2F
3EB3AB669DC3FC38B47F0B2DB10A2B2EE97260BEFB136D4B447757D89A182D96
CB37C1171D989F3D96C4451868987C039F6D8705F4C990ACBF5F98755B493488
0FBE906D13D1B5E31668E388C4F693C431CC91A085D3D21F355879C3BEC45C0D
BC09587CDEB5C03EC22B42D48981D77499982A5C64C9439C63BAD75F9CDE30A1
68615DCB353D24312E0A5B5FC37563EA891ED21F33AFFF00522ED0ED145A21ED
3F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QXOHXN+Gentium /Encoding get
dup 102 /f put
dup 117 /u put
pop
%ADOEndSubsetFont
/QXOHXN+Gentium*1 
[32{/.notdef}rp /space 16{/.notdef}rp /one /two 7{/.notdef}rp /colon 6{/.notdef}rp 
/A /B 5{/.notdef}rp /H 4{/.notdef}rp /M 9{/.notdef}rp /W 
7{/.notdef}rp /underscore /.notdef /a /b /c /d /e 
/f /g /h /i 2{/.notdef}rp /l /.notdef /n 
/o /p /.notdef /r /s /t /u /.notdef 
/w /.notdef /y 134{/.notdef}rp]
QXOHXN+Gentium nf
QXOHXN+Gentium*1 [12 0 0 -12 0 0 ]msf
236.133 24.0898 mo
(google::protobuf::Message)
[5.85352 6.03516 6.03516 5.85352 3.25195 5.54297 2.74805 2.74805 6.35742 4.57617 6.03516 4.13086 
6.03516 6.09326 6.35742 3.73242 2.74805 2.74805 9.67383 5.54297 4.63477 4.63477 5.50781 5.85352 
0 ]xsh
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/QXOHXO+Gentium-Italic*1 uf
/QXOHXO+Gentium-Italic uf
/Gentium-Italic uf
/QXOHXN+Gentium*1 uf
/QXOHXN+Gentium uf
/Gentium uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 13.0
%%AI8_CreatorVersion: 13.0.2
%%For: (toby) ()
%%Title: (hello_world_sketch.eps)
%%CreationDate: 4/20/2011 11:17 PM
%AI9_DataStream
%Gb"-6CQBIWFWgOO!<5E9&RaX.R[K9Mq%/JglKQjUO_,_qm`O-`$sI2f%+f#K[n0bpqs3]ra,.m]l=tLc*nagb<`__$7`OK,M=WpG
%qUP<5o?Ec62a;1us6\DSICSLpl([Xq7;A9X07NSps8M`df,q&/0)Mg=nA<?_qaaf/$,1L)i%=i\f:Ur-hgG:ome6>Ha,djeGIMc<
%IsnU!q<I,%[oYf2038tiFT(X`m9_KSn#g!sMneG"Hh.QHrC?YXp@EY/jo<a^?iB-9e[r;orRHDmr8GQ*\(>QD\ngo,o_n=I]BeME
%h>=6K(Xlq_Q#6;Fqt]Wk2o#7frm02?^V5M0V#'M+lM)Gc6B@i3pfZm3F7]7ak;V#M6Jo!(r8p0?rfMXI^8EW6\Gl+,jpLt6@S_0^
%rMT\Mcc!"?R`cjL9n:"W0ZL8l%o!s4pb4Sme@-6DpWpUhrpfBr:Nom4hVR,eYJ6DOIs:kj_n2sFf<c$mBeDIA07WX-(a8k5?)EO`
%'"eYe^@t?ORH0gL5hH&4pA-GW^A.0K=)Y81A<&QlTDn?Rs+<&8&Y#YAq<@XGhd,.<n`DDuG#*5ocdH`Mhd!qV!D=*HG?6a-%@&id
%b8&o?h>MTs#sdhMh.I_eY:i@l$EV1t=$L'LIFJJ!n%\[;IIl:^s$N@U.^TWnB^/cGD_Khkp$ak+q]e<0VXPd_.*l_o\_8iU#b03H
%%(J^__Q&$*p\)Y:2o#?lmk8*)4*V*[$I^uWdf/:_gGaChLN#!=)\)(QFT3`e07AVDq"3hI7L'%b[ejoZWG*u7qZhDdG<Z*:hH[b5
%R1(;klifTO='GZYS,Lm8.p2Dq[]is8G-V#A'1#n+YHGe;^;ot^_Y;k]CV()VFrgS9Fnfb(nZTtXh9NM&4^Q_6poX#TZG+B&qYk`h
%7]-QrR3oRYJf!6,9mG>JiFVcjhsn#.%PQT(nCHD*J(a5YRc>!04WaKlDEf34K&_u3i_FQ]\OZQkrY9A%hn'A9a$4edNXOb71)uX@
%Q@He<iB(@uK>MgN]1rUgN8qd!r.]j@GAN-aMjq^PiB*#>5@?@/$_PR_b!!P`E+o$,f,TiRVlN4VkF(JCjJg"?^6M47"5rTgn+c_.
%H!Mo5KO8sANY10R.:,Od3WCE6LEH"@*2BYn:CZ3?A&NThL'(sG^j#$*<oH,HL1A/G?;(P>Sm:[a5#Ym@3j4X@9?1?!\];m<noSbo
%oK3-=4EldWb\c[OnKn%KCN+e2UGtNMSO^siiu%;,04S,)1%N!Hc1m=NhuM_ZKlZ!@4FR,9L3*T3"WE(Vl9'\-",1V*?!EnKmN9b<
%5FEm[3j/pdj5]RfAbpdlSf?VFq'DTpNQR@-CX3[49cWE:TU^3jhZL@Rm`kW&-S+WfL325R)%u3-$r+>)o4mSrkLI@3l#bA@GtPHU
%g1>[f2pAb>D*ouS/#]b=<s\_&rlZrWlgU2>ndB>2M6$2SILQC/c[YaJNr4;FmHLCY2B2WEs5hjUbMVnuI_kFK4]ga[r&PhmHiD3l
%`a48[E=MH/f9a8<2u\_F$um*4E?AQmL]+I7N13[/V1A#<bMVE=ID;K1Z19l/i<YdH&;DmsHiANM2glNt4l67s&iS'cBmoM%\'BJ%
%T[rkJ(2g!NH)3VD]8-Esc!dfBdJnWhn(8.%fK1&QpPm2<<PHZPrAa?qr='!oG2.j]02Lco@jCc:gXh;2^=E8RJb4&ST&IIj4`'*G
%@>"Rjj-9R^%WG-%8j0OQFZadO)Khht-N!lkDL8`;n9]f4gUA6d"g<U6a3AV]G55VB1$YV)$X^E;qNc&Og+?YT\#4kj5sEI+8Sr.:
%p.2r7W6[GG!Cm9XIAHE#n,hqbINp\[=oXOBmDR<Ys7\g6efFWY;b->1(hNTk^HD,2QN4,)kB>J!s3:HpG(/PNPCGZIOjM4]D[njR
%h>jSuL.sTH2r03"i3]3*N]?<0V^()92]ZgU"PRS=;((m(kdk"'Fi2-TGf:/1BEj48`\nMpIG[fL3o5OJf\*c)G;4XUoW.)Q7Ymts
%EV&-9^oG$fnE45`9sca6g,oo4Gbcq/HOJU!:#O:/is8e,"#qht)n_#=^VcX).LNu9_b]F.fVW\&pq'jl5YF&p;\WC(:Y[&gKpmNe
%\,'n]U`h8BYQZdioN7&udSVOgQ*Jg*]iO^Kq5Ll;oP)f9*=RQp-Vr,Mmc\q@U2GkaVRd5S"oZS*c6ak(mH/i)<:3eW3aO2eE>`gJ
%2OD2UG*pO$b#c[60cYK:0&mqo)+VWIo7G.Y$O8U'i92>l%VH2&$rH`N^dd5KGfXhN@)BZjLr=)u+HG6GJER?)0jrI])7:nrG<U1]
%PIRH)AGVbno!C:WYIfRiICmsnQsJQ!&BX;9cKi$;U]:q%l+*k+0DQOR0.e0kAIE:s."Q<p#.5VF!P4h+dZZQ7"Wtg+nfM^<+tk)4
%N"uoTh0(e@=VjQRFT:$bo1&i8'"0SOd+be0UNPCf'S<oZ*6QUeHCc(DnK#r4Xp**5UYhgZ>g7X?p\_'Di5gm+U2GiOc6in85ps0l
%Mr9N>%i[\fpqX\5ml"(g>@Y.YZXq$%b<:=]?(?-'Y+'AqM>K&%n4jtP(8&.*^>uI;d&sCD_;M8@Fgu^L;AK#;]7#_qZ&^5Oq=a7M
%h<g9oC]6Z8rSdV%k794Qr:A)Jh=U"4I(oQ$rUK:"O705)VZ,,,G?=fjN<5VOLX11R(N%d6/,jqhnbUcHmr%UNhJhkO5BGZR]6A0X
%I!c<_J+_sh`uhMRj:D1flLioDf:Ut#nF$/1?@B>tqt/A)kDr\'DdND$p!qmcc)VpN^O8Uh^UsL(e#RBs(Muk$2HE(io_IqBO$A&u
%8(+71Kn&sjB;ke$lMBYfe]4:g?,*:%TAI;/F8bCQh:8"\pK)S=!f_W0*m-G!?GCf-qrur0a,b-lg,-M>V`/OtmpO'U04'))E:k-H
%UQ;TbJ%iP,^3TZ5I-G#:q<mr`Y&F;eFnbGqgQ/Q1qH'k=5Q!'LhS&aDqYf0<[l8:'&733N^O:P'mcO5lX.Ok?nC.'TX#lK,_MrJ?
%]t\lQh1B?p7=+Xch<0i<kN@o055jU:j(Fad\$pRb55fSII;RlE?@VrrrTa@EMg"Gn;;I_nYl</+lg$KJhn9-5G]e@smskn]^\[a%
%o/l6b39$#!kO[4Egk-\u\pF)Q5=6nb?F3XU[39dFVDe@jNEaX:cgSkC^VKr`g)OGdU^O@9FSi*@h$gD*h!G?Yml,XEDtjpZES(-.
%XuUn+l.,7dJ^DV"I)@mj_`."<Dn&U#fR<3Q^\dZs_n2OJIIltL_SdO=5_%jas6+A"UYYT=r8Vuch;/1>>i34"M#HqWO0>_]_,i[h
%.sL_&5PiM@\YA>u\pj<UVrO4a^ZO+No?GY3[GCSCYBnAn]lfB\CY)h/FPQ?fDu&s.mF/2LiDqS9qqf!af=+kuPOY&ZrQJ(6>kI3c
%h=EH&r.uc\B<?XYik#;NV:5J>rk"5`hd?E[icbAn,,HYTF1?LDMjfu>?[OL6NND7:k>tj]8q1>jqfi)/954LsQJR,]h;.8[msb7T
%rU:&L#%aZ.acDdg=4IcCG(q+:4nRf>=RT%mKn&iJIN-'%p>'BVnK74;5C`IQbn%9:?i8aBc0_.,0>>-ro[CeQ*MBHoIt&Var:PY[
%J_I<bri9(+?G6=,p\-N?LS*K(q=`Y!O702:?Xo_SC$N;lJ86"c2h1haf<7ETh,9A"rSdA&:Y4bdodsnhmV]bLi=XsqrqOs]GIP'M
%XHR[Ur+(H;gjS1/IPDA<MjGIb5Q5[Bhd+(_$p4F*:B8rRm4\BT%pHO<SAu].?/8fLQKTjsr;lqi"jjGeeWtMdra_(Whsnm7%PH6A
%Df=LJ/[TNgbhp/7JBI,75Q#Wr!NYb5UV$)erpR%?\@m7X@"W2)2ue4&me29;!3:[Wm,EM$h0h7uCV@?k\[oDG+09=r9]'.W[]?VI
%e`CBVU.p[d^\[4Pc4'*Zp;UJ1O*>i=hL,1m`S\MPTAdmNf@1hDL;tjs"6LXW[VpuArJ-^mRSC,*Fq(Ync(RQ\H>#AgYt])m%T'$G
%dr(lGg3n;V9kZm"?&6;YoYBFE@1&L.%D/hT#:Mie_sO.U?0_9(kf.KAZ@!&Hcb;J_a4SBC],2dH(Q<?kS%+Hi\;uEpU_\3Q/k$Jf
%V_Ln[PBLZ4i$@]Z^?rNrp8RNXZ(Lke^[64u?i2i(_9e.c"9h<4A&82#jp:!]?p++LnGaos_GT^T!u2e]5j=btDEbpIf0E7DNNl\)
%j_ee.042Wu7_=fQ_J%sAa(lp`@17Dq\fqA#"cT4a;+):U++oT+7Y(LN>%EopffJXoE#^utH5u$m2>BC&:LQ(>Q@W)]<mF2(`36q%
%Mlda8_6H-]LEid#p4qI4He9=8_g!".r?31h_%%K9G7.&ag`Q7erGKC+Dt_Y/g^j:2TD!9^m/qkOYkU;iI0[F`DR\@%mlTpVh6?3h
%Bbpe0_QM]PgZ/"3h/@Mlm<5h,[c;P`p=ls6gMRs<X#6[pfE;#`h/%Td+#h*7hkZSl2A(2hY\?&@FIWiiIbINNBiC#LkXKN;$qm@7
%j+%`W3+s!Vj#AcV`Nd2aGVh7K4;o/)J2-7Km+j_(NM9[9E]%5E043@hlt%Gf*;,3=,H4au`W@CS/*#1b7M%5%p&4TE7KRpWK)LP9
%-Gb_]h:p;*L.=,0@T7]MHMiID'Rp?=0VV[qY0,AX/*IlcJAG4p>mSp-_=T"?Vu\5]"-^3H8N[uQLdSO0GJuu%/72C`Zh)cg6Tn[>
%g)V=)2Dt"1/$ss%h[l4n!6n#!K)tHWTFsL=HU'/e5VaQ,S-4WqFDWu=@bh]4g&RQ[;2S/*.fsl$JB@kk!HQosOoo6m4f!6ZeC#IV
%76kF8cuV!]P?LY<X\-42A:lI<"GD\+B<sq<cd0j3`om2rQ;;\M/4Tfgg^:"P<"_?\T'@(,+RZHo_SWb^M&eil!lu>]677<6/\p]o
%<q-IRdfM@M!7_CKHNZms!6"=+nddgH,IXh_44kJPXftG&fI[d'Rk8H94m\s(!=43Cd%N'SBC/9CHe-'_pf[)[I9Q/'"Bg*6\^)3q
%8*?JRTAZ,TI/\tXfoEc/pu'UF:naYjJRbrV<dH6CMUOR\Ph!cKF.ogo`aUDJTB9!!/Nh?B[A>]ObGRAJ,taTd'>:28n2/b'S>d,_
%ab:r'M"[Qa*%$4#0;1n'r]9XEDeCkikGOgpR3uZFB+",D@BYOMMW\Y?\8CCW+/Ro6Z@fSSoFqjQT>B_6V1O@5_F!l7;aO&(+eH)9
%8^ZY1K.YBU:dNVpLrsE>=NM*fCdr59M"5&S).rKFV>3B8Iph!cAqOg6B^heh+Nss30ngdA&#BY<[=tSlKAhXK6K"dc3$PpFAd%:+
%TXdl;GOLXBdD$/lp/6'5k^5O2VuZ4**2s?CH7B4.*$%O/,)?ZKKRf4rHTHd7;1euPP6?_5![\8=\5BP^#Qm<oUQGbK<6M)RmN0f,
%#m3]Y!303FfSkbLB1D$)1>/0+`LO_u`-KJ2ilF6QQ1O.Wa?GuRXc\)*bU=?U>U9>M#XFahSt1J'4`a*DTO\d4WYs2E3BU\ELkO"!
%!].-_#g&M\G/V)0M^OBpZN;qGa[qtefs.k<@ZJMi6BRDW7B;B*Z+5Km_:Nd\G+7d>hH^lXWqhp>EXdO;?nr>D&kqfq'0a56^p/ef
%->M'0gI&.Q$eNY,o^jmP>tP)cin"8G?UXc,e?;`hSn&I3%5'lfq'"8]N1T0E`Ct$k-u?P/jQZC1FX!iq-YOET2P(2oP_S$."<ril
%.I!.S%OO93[4p=J4*R=QA`S^\/2N02N?8+4kjKf/S11,9HIiXGg;A\"ND50c%K$OnUgP:]&/0=>`1]cO7CX1iMlFB`6\fNQ(&R`$
%f];`Np(4EDHb<K7D<(_2@NSN)NTCE;X9]WA^$JYO?,Yt_G%5LiH_L_TG:gFB5T=D#3k,^a$o#Qf&q63WgQHm`cNLW+>]ee5)r]Z/
%ZR9FFHdr;0#,ddl(?ko3gA@BKqD]TG`[5^nm;N@C5Ib#_6"ACpEs9Am0)BgL":7@_b)]c=lB0H??a^'e1egM:!"@SQG)P.!n8;MX
%Xi]m^9*fBYpjo$uRrLT;CfAu]m641(<MI)L'X$N2(G/74kEXD5nD[h%@KR4C9X&jE/!B'c',7K<F`[]86;[$%WKWG"b,ghZa$T"R
%KZ#E$'d5<%-\*@79Uo!VK&S?gMN9#0%O<HWc'8IOr>ncfSjNrprW'<A*7E3/-20)&RfU$<i$e>MeFB>L?ml&$V_O3GlpnR!*6BIM
%47;>4*`5.lBK.=*'W)@j-VeB-a%ZZ(kQ8_[Z6;4$JNuJ@!Y5W!!V'\d?3R5.l01_b6%Q2%?juG*n7FBp-UAFDIJJIYD`9a,HRX&m
%0Zg\uduc)/j9oU:95D`W1EjH6mDc1-*2BdK_Jk1r<ST-!"cJg^_K*\]`elA@X,Z+M^YUADhISFPX`n]@JW6c,TicG<&CAS7Hm*94
%YPuE8UHF+Z+,R50omcd(?pN<#6,4HEnAPsC$j3m9Ybha0*We)*GUSZ=J'aX%9p'BGKFZ,TeAMg'VS&Y$<BTjfSL\tVeF;BR`>/&]
%asDl'-_Y%<ltYD/]!DpQ[^rqjFa8D9'p]jmCCG!9X,QB"dlQeikB3q/>1ZqZ>M!)&4g$g4HsQEXmK[?:D#Z!q+>!"@X$lK]es0/&
%O[Whf81$;$>25O7CQ<HQ4u9?MW+;8`Ls.4Q_rB0_8MYZ9)!jZ8a@`od6!^9B"'(6bB;ej)!*'[tdiRGG"UI^#3?*L8"$fHYfDrnl
%Q?N^iG6=lf@C7Ibh`^Ad#^^`J]t"C7gMT+2H3[RMmFKG^%`I7BM5MANP>*=e#Yroi[_dl3)+uHW>.npa\d=0"<RT)j:<Ntl)#jlJ
%cia29fF%`R70C0_!;cpqa:6DG#lCTVfo*)\!pmB#p>,iDi!sqj#.D_]ZO@KXZQ3K""3c,p=S`#uY_0@9^l"*?Et>;bHe9Kl#?kMM
%O0EAG=M$/dhur@*^hT`=qlm9r&#muBO:D>bUt-TCmU/J)&4?3U2-j'&_O<[QMJcjp/uoPuCct:/Q9K(IcWX%L9;(=:@Q!m_*s6;)
%p0+I#keGQ7euK-nHJU8;HWAHmj(VR0f(8u)PZMuS%07LTRF\5afMSV7[]8Gmq0/la+Og#NkIV8nXtP57'j'i2>F^scJ/Rd@fe4Z:
%OtgCANJJ24`R0Mg$15\-J;pgFb*Z`Q0,]U*RMI"ZH'ulLff"Kp-PC`ne8(&jbO!r+J^bpVSr20gPHUQ$nYGK@/D,6[(LT)AH:N'?
%94[@o`D3BQF6"gdcut[b<J'nJ_K5ifH@i56m=.\cQ!,D>e!U[P#\tZc3_*RHWJRsE>i@\<->5"hF34AaI`m&L6.T^G$)pHrRuBiP
%P:A1bCo[7eb`$Bo<itSXQS2$)^L&hjW3mDanp/3]J88N+Ql19^N14g)f'HqK96b[B`;$Vo_jq^A+Fd;C%PZM71!r"Z7PW>Dl"O*e
%ULP>p%GndE.TfWQQ-&>tl=EqUQSj&bDC2PNoMcqUCTatb:POOb9Eu7M"<MM'BD*mp'II;ZBVR(r\gRLL5`?+mVmuC]k"c9a%)SX:
%j9`@(fG_W#G/U*J_OjTAmaokl07.)UF<a\=UW=AS3rttAM"@-)cG[!ljsjN*0Sfj_AOQie%C,_",Vt@8bUd^bd);ZTI1aQ=+uoa`
%4jE).DqZN"\4*.O7hpkY5d$UPmOcfub&[gI\,iosR0rK;5_UVI*Jd`^Y'M?qg`lKO&5)!2;2lh56&7]1f7er/BK@m]mtJ>D)Ng!a
%8&N=j4;Kgi@5AKP8jNOkf!][rC[q*sW+0O5V8^S.<+VaAlekd3KoW;P?/AuHe1?:1o;B^E9m3c,]5kqA`Q9G-pj$eMG@EVA'slM_
%RSMN84Y+lU`J%>]FIY6u:6GQH+rpB6p&Bf8EQZ:h(@4V5K]X$T[V[304V03"a)E-c"96JLJ&N2X1J4#LIh_M%)X1Ys$d"/Oj0h!-
%,42/-/i(56Y]M'_*D'!C#[b':cTDik5*1/+8%<n=9h^M^!BU]8Rn?$IG9j^s*e:d$j9(b_+:_1lJY#\F,V0X#;MI:75WJ9;bS_gI
%i-BS0&<o[m/j]:9jV4(`&8o>SoZAm:cTk`fcAhK\O9@1s5f^*7*((F3L:A/^CS:\]OtBB_F#TN%l)NV/8B.%-S:Z+\Hk)Y_bip\K
%3qmSTF"S6=*?_X`niJlk9\&U]G4[1^c%0P[]ihHkKu8'>C>+Pe6;Mi)c#oF`&5uZ*HrM`*1L5Z#C51/J#UT8!ohu.@n2[X:B3VI>
%LJF-_dFuH_Z*_)[IHTCXf0#qmEgXGsU06#@jsrjcW`m7FX"e]kWJHF0dWEB^KM$5^PU>U*L[>M:h1Y;4e)ch,Eq5&*jPGkJrf#h$
%/mH%$R\PU7<?Kt=kijJEp>R<"qac$O5[(F'Mk?fQ#P-(R9?`:9GpP&eZ_I"n;>I;lHra31.k7/+Q!`2'Z_I"n;>I;lr(j*;H<+#E
%k?HF8Wf"sJC<6;&Qk*W:Y2:d!$s9NaBCq5S+qRfD7ij>pR0T:r06QK(nC@$]'9WX4SbYROmq!kAZed)PV51g$7kFM&4Mg>L/NQ+^
%s5<lerJZ!HBR_#cXa%Q4c+BJ@?$;o,Z:L46ajc6KRT-+p?&U$b=m(O,KJ.=[A\CLjp.;if_X2F4e6;W9MuSI@K1%5h.Xb<OWf47c
%fLoK=ZtubJXiaCsok3O3>uC;a3Oj,%KboCVj,LR2k#/oS=!Eu7-fu8J\asNL18%)=b&j'9!4:D,5@btDZfa(_5FIVq:]qgo<mRS7
%pE*?.KNPIhcRW/%FU\^9X9]5;9=bIZFinju/*b_ieplg22OWfb3f%[-ERqo+4"D4Gi'9_9O/3i,5`8.A:%KmF:VfAqe9`GVZTrRW
%%U"5jGn8irq&UqK/U_72poU$\%0&D0CgG`uq-3Y6I3rg]iP%HRIs4?UO+!p6.s5!@FlsOoCL&:I>r\7?T[ATE<'[]'9f98:JJcGA
%1e\KI6t[^@On?%0H=1#q94B1]2,'`mhM[,Sos98VNcl[+^p"Y-#n/j-&ZK//Z2?nl]]s29_XWNF@@nI(7m'QWriiG+".c"\e]kjN
%oN.PI\^1D:pD*:XpRK1/;")*>7DE6f4n>LLmlbZ!bYF*[=ZVN(ap8/Gjt5hLGN-TAI]\YplTH"d'Q[ipmG1HhWT('k,-M<<47'D8
%YVZa+1sABq:AC*1/8"*d_Cl[;!\C_\@4:[b8O.jdXs8e8>(WtR?u/1sXrS,B$ti,V-P:$c3")#bLjb#b5bb;FX8rm`e/!RgOUPe?
%_VohR.sD,-]neVc^4GYPa<CU[#I\Q<LlOatL*Kh(Zt'c1aL24g9X^IF!V8!1_'9GX."iUKWW8=rEq!^HDIgD!aq.1th?b:E0_'iI
%s6h?IqtFuJ<Mp<YT$jg/](TOODr&Y$c-5"&<ilIHoJ;L)EZ+0E/^EYBA1l&;[;=#QPgD>C!q>_r:@e4g\$E=ab21%Ub%,)E!jKh5
%<eK(0ojW'?-!KQ7"=sJU,Qbi!noDjCo<4^MXXb>l-8&j+`j#fV%'K6*UnYf%FLd2rQnKc]eWaWhXNI4d(sm%_.nd)5C>"i*-s-6q
%FR5?I#s0;DJQ#]?/Si4h\Hm%.'8\bi$Rm4M"f#DjOp*LAoJ3nIJ/1QRP=7/TKOHTo$=ZsK_nm6+a07fu75A=J!G@o0:K]Z`22ML[
%.rq_i;I[JZRQ[4?/@F-W8IIUNA/@7X<$Vf&&3&E+RP@a0Suu/+=*_Y[3=T3g;uFge@H&'RT+lHW6.g?&"IL%Vg!Pns%8LIfFRq2*
%b(=48"Y,+6b$f2dUN"#c3#0Jr5d#V?(<`sjN^\"+Ahd.\-\Va?d[;MsJqd0PV=7;H"K_N0%4\;)>kA4:;5j7td,DJ<']UrU1#q[s
%T6Fj,_]%p6(;#hes4'kEBQ7on4uY0&5%f3YP9^kp0&L[+\\*/FbNV.hD<ZFS.!>YF><8geZaY&%O_=BQ-+ai';e3U'1=:F;a<f4q
%@g*rkLTS*B7UV];4Ui5En4Cua]cc>8h#G%aK*g7?f:+7KD6"N:j'LnsN]S8*3ULe?hn6GKXq,_6@s58;RqObDSZKG*GHgMl?M5u<
%=l-El(*h(KGJjVt43V.;o9s&S[mG<*?m]k7'?hWFhuRG.6Sk'>c45FnBsqF3,&Cc-SU85B,@J_$Ri8e<RNob64@=oF)o@ML@5nl`
%m)G?q+C[UsAcUs!"%L+TMY@tRn[Z\Q?<.FXSf<NY_RX(`f+?P&1IGU(pk1/_%]"=\[6nXaW9V4U'G-/F"HUCV*1:ajg`t!r7gX9q
%333c2Z'3KAY*'>U1V2d<g#$/0`A=ZcPnPfanZf9-=eNaodhZcifR.BfiP8\THCc/$MXM4/?+,>6@PaX`K^lKF_4icQ[S;+TI0i[4
%jR&CNX/=SO6L:+.37++:9/8RU[:US5'FCPeC*f%^P)?&7ojGoI13q+OLoc2)nW^$s]SJ&"18<Zo+n!I_5ATt,mcT]MQb;P-Sq#pV
%P(eAAY3`e9aB""AZSI+I+Of]*Q7Q5Ql5I%K)@X%Y?3+Rd+@=@)+Ikq&?!@Jl#!1""W\n6sNJq$7T^r:_9cC-r;Vf%I<[Q6e6LHsk
%K;G#7KQ9g,=\73t$YrdHr*ghq6Al@liSG?r)>hNrRX@"%]GJ$nNN)/dIjpE&Yup`NidBDC!5>tp"#7RIdkhG;EL6P^puZ$T4.Gte
%0<Skj@b;4"Vk_oU:*OLcqd=Cm,@N)1olobIAc#PG4su6H]d84[g%*;2p"6UfS[;o*T'\t+Wt&`GMNkhfL$jPKT@LM&jPLY+KF^M=
%4:AE,iN%`:W4lHr^Xj.VcI^VRs%NLoKP6Os>8aN@>!U9NQ#0Al^'$%USEcas-3i<C2M]s@[WD/IV:G1gWP*$s=hnJ.o0$(k!O<=s
%dgHSrcMLhk/sdLW@()?U!(oDaquH4nc``(>)A<F%e:1XE>G+'^\dD34,\Pb?8uoY(',\kREASY+D'_*%YRE)i.j>Sj"1aELWC8Fo
%@N!?g6Vg=.8R)\u-mCCt8[WH-"O;4c^^?l@@*;,P,>]Mh;$T]SR8@_KR=]uu*!L^OG!%$9,:aZn&ROJ4:tW<%pKn]#iet39$Is^#
%>/NgijI/Wm@At[&b0[1cRiKXaL`LR,523tAl-Cbl\[]nIEYR979"/%NhQ&<g!Mu>'$"phM*__fJ0q7ZW<osFAdol%g6Wh"WBpR+T
%TKXWH`_pp78h(2&D\cLM%(UV"K'8.)JX@J"5lQ5SW0`NWA&N2D.$@Gj$Oh`5A<r>/re71j[$6`SOeV[icK1g-;U.%N,me:OQCEPl
%OLLR=k55FkPk:cA1eUF!J>jikP=\A^)>]Mte0Lk?:H+2k7EZR8eRBE9^'Ml)J/B*00,:#%@Ol[4bRDo"_Ggc(AanC:28`TUB$Qj4
%=r0!H`mjjP-$W@&r7i6X+\p9k75r+\=2>klB<kK#6_2*Mf#&N)4sK7(Bkj/[IM);9cr\$?b84Gc^gMo6%#6C;B/n[=_#MMBUV\6A
%,\7q:OI;e`D?i\:Q(%u1j'pNj.:<ippb2\b,I(hUdq-_]Eo@*^9nnQ;/s5t4*%mkV1%k\YlpBF3mj<cpm_(PnUB,dI%d6Q*I&HBf
%!,/q24JijMS.(LGP-eW"UP"T0d4!&>fi'P$Nr*eK!K?i9acC+(,783cA%c*LjTrZ]aZ<hbh*<&9nh)cK9pZ-5(L=Zn]=*YIr%out
%s1W=.@t0p#[YKROm"ZE!%nUnrdQ@.)L?iM!E6?jH);FH(l^+=]91WP!>n'.A/n)[P5sma0Y!#'d%lA8*j3>j!qs-0W58J.U$an=C
%mH^rgoCchgp1O!jBCkh0oCchgp1O!jBCkh0oCchgp1O!je$&AMPc+28cfXW@k3^LWmEaq^cfXW@k3^LWmEaq^cfXW@k3^LWmEaq^
%cfXW@k3^LWmEaq^cfXV-[ZQhscfXV-PL%S;mEaq^cfXW@k3^LWmEaq^cfXW@k3^LWmEaq^cfXW@k3^LWmEaq^cfXW0<:fgl>;gGU
%qC6WRLh@EqPR9Z=fLC(hoaAq$:5l;(N4g'6B9Q06%9]WcOb4UsXHIkA+Qf%#;jhB`/Ogt$:nlW"F37sX9<!Tb,fU(]p>DNY]5V_p
%iPh7+$B@g<ge6'HS(j53=[",&!U5luC7<LJelFmGgT6j<@uq!L4oQ_/JLQFT6)6!)SiET4A(m-o$'-F=)$l4TeO25()FH"^2QpH9
%E<K=Hd5\S/?lMXV,U7;@(,urOhM4_3(?MA@\!DYp,+5I0P#*nYUuRad2KXnII&T'RiX?-.SF<,e%"L9GW]q6o<DE-Yk"rJ8nikUp
%8QjrgN50O?,TSYn]#f*$PUO_3ZD<:e74'H5A4>V^T^j9b$<;r1eg*_3P8H/(0bTmOBc7>*--M0>8lWoffJF<;CGXI'8&h/q/aq5m
%OE!sb)U05mes_kH]o'o'.5tdE,f9.uP:MWMF!4s0Ok1t_-P#`Xp7o'9"$O%:@PNr"O+&[?=K13I)@kE)`D!At3+P58,[JT+24g"N
%p]NXDn2SCNMDI6/Gtq<d*rgK#LJ/eD1+12mZmH)R/u)<LOj[mcOf<GjhA[i<3r%P]s2c(cnG)$%XrOoj,u\@jqC<bY>HH'99c!(U
%bsp/d@[:&]46IW('_,o_.A30QQlhtA:iRjrR*i25#;XUIkO7HEG+=nMEjk+q_iO;92bDkiUke@e93Nut2hMY]bem,WCrFe<1@9NC
%>C#,KHX1ftlt)YR&aQ?I&OK6gL5Sp^.d'L#5&VTippA_d-i<V%g#+niT^kY9b3KtNk3Sh";R`_sWGL/eSWMoClg<9JAj%Be;Md/d
%XnnX-b(8p/HV)Ao1Fr-!XOMSqSZ(NnQm[Q4]2cR_hUCkJ&dS#M;a338aj(.I6bM4<(o'HW%kp2[=uj%0T4&lFAR"OZbo3)C`o[])
%Q:RS?N6=d!];<_.R^:*W<]q?jVi^Dj#kB>nNn4$b\otaSl'PU9?5FcZc8L#'5FEq?.Oio<s$A*R.;'CO3A6dK.L&k.+385KPm`6?
%`GhEb8<A@@YSU1c&-Rrjct<:\nP'kAa(8$f#p$,=hdYU?J'Sm+X+4h@Nb0tASh/Q`E9T4$hKJem1hiYE[OXE%7;'?2Ku^Fh,W6t-
%egq@klIBZnLdS"kEV^>^dH`s.5=)8)n3.!3HXIQ]co_L4POsR4JG0XpScRsgi-bX=#CtM+(Dd&-b2:tHX#7Z$htP^u@[YQ.pnUC)
%p@fMgm7nqa*D+74&@9uPXHuQogWGPDfKbCs-&a2hE)%8=;oVbaq#<r(#QHSlOo1sH4(AH/,dZh$2$?I?q(//GL9%@G3O$iSm5eUn
%KlmM6XF#&,f4$$Ts6kg"Xtr!(Jd[L?CT_L<8!-mm];D=D8Yr5(G-+b>Y%9UH[5>7W'4C`,(@\SG5+W?Z.u[Rs7]c3?fW(.(3L$SG
%WVjKRSlE;#PZ/:-N(cKTLkOWK70\t%lr#qa!PMQdakDV]n"EM!#IA+/7?X?"$r;g4l.'a1p*CsGD,iJoRAr#SY<)*?_j'gHgTPtQ
%PT"%Kli-j,*tD"d^Cm.phFCXD/p4X2-o@"WYYeb;i6Cu<'b^&d3aki9i]]&uY(f:_U=m#'e=)l`!A48l-i#0THmA92/)m<H66n/\
%9!7fhOK)T.Ne80(=2j0\"Qumna!@W/OsmLlO%H'C8Oi:1g5pj57408FT/jC)]1p/Um>Z`KrRI>$b3!IYiT550O?<kGV]s7.M^2qI
%C#3>_)kno&S^G)<ZBrY(r*(AD`1(*Bs4HrsM8+1/B@]VO(E5h\kr_$]*T_seF"qT/-fQD'hAu."4$#*WBK4!"1nP6*JoJTd\]Qb'
%ML:hTj@B8AA#_96:@.n73Yct+kuOZkOfIfi7YPR35b_Y`EsJRg(HJTTmU@fJnpH+2&R/,mXROR\?-5Wb4,II@gp>!eksZLIQ2@nF
%`mQs*H'2H(qp0Fi+="U64,R;DJ<)$UoF2DT9U6'e_*^$/dQ1+0C@/>m'cC9[];ZHi>U^mn)eJ;*C#$6`,h#:rqZCdX#n7%NdBQJH
%p5R>ROdU)bXKL,>RX+d$7f^\^p1>8N(%9h8=Desuq&k!n_WHl=1.ho;jMEFqW$tM</Q#J;k678:@c:aGJZB&_Kf?)&n5=D,pNA*8
%@'^(hR7>fn:%NncR5+$)g<q8D!GD;,liC;dJ?#`nZs[\/X\BjHCD(7Q::6q?gs0H3XI_gC9Er#3Y^X_1:gq2k"CSG#$RpO^;\KM7
%INnFdIV9A@STBM'@p0Ik!7ob/p1a]W99YsQNC`Xb6//['!LZ-e';pa@Ta=+qXme.VMX?=.B;Q1aX#&[/[5^]n;1c5$nl*a(2qtQ1
%QOubED[H#GD*FD?moEC:h6JN,FeX*q`iD(j"nG:hi?Vmd_P<(*off"R9&DX-$T(V[XN+dgrUPgI02cZqHhW3QZD+NP<o,q"$MQU/
%AtrZc*8GCNFDE9:m9R$t8bD/Yl`L/Y>WAlKYPOlFJS_fFYTR/P\%$n"`2Ko7"a]CKntMQEU[1_&T9D$llGSIlPSV!pWF,?oqH*;8
%7l'_nf7W`GM4@KjS;g)u]asg+iq/0Fod#sdP,Z49RCql\7_*doWBrKU6e`tV,Yck)%T1RpiF>8u,9u9[#5>A34W=2k.tL!a=_LV<
%ikXVI2Af^0k)kWkQ!CSh)HN17BK1IIpa6H"AqE,g99KDoD(W]f:5BFhWu=MdV05jP;rpB)C4OL'!CkW17=ipU;4#;(*,'p+C[FLi
%M>2$(U*9g^#u!Z^s7^%RmDklpi%b!lSRnbF*3:q$ltduDT8lI[V,!:mQs0F3_K%8j9YljN4K=rs!0)['#9&r38LOj7A4/Q=315DE
%T`=.Z0",^m*7gfSe`s+_7d%\*k)oI)UugeWkDK0$89W^VP+sVa:hs.jC$#ar4=kJ#Z#E""a/\_lgXB?\,lGBq-XG6U%`Hb5Lk!Hi
%Eu$E&7^YE4Q=uNN[7__XaTe1,-)ZUF@lk#FIc&d-SM]<b@VcPlh9MP!%he,D4t9mBF.B^dMRA]#Ci*^ZY.\/N,-!2QDK5qk9.RJ6
%3\RO4!i77#VF=\r-AtJ6!Kof?Yq,'NDWsX+&c(RaZt9A7/M"-sQ4!ruh=X6QW`SBIPH7pM(kH5/[:!>Q*22IG$T>AcPs!;$O29Tk
%LMTgQ0lf)72\1I9'!0b,[jfDL4EApcAZ5qYEg)B&Kkp\G-&@K>MR/Ss1"G=L"G%L`/)sNAO-6l<X<!2nO,b2=Jil+7PLD7FMe,*,
%dPt$=BCZti#bR,B]jE(o7&JOgl:KqF&2d,?+'+KR!heM'WkS@p[5Kd<A*9!!$1O)\pI+dsLbDjc&T+NDf"2jNUH>TpI%V,$Y8N:7
%aa)$iD,G*sMY'f?8Y[Mkg!Yk[*a]]?m:t-aiQRSkGGVUo'JX[:of01moApA."e8V>Sefn&6/@(nfkFQ\XR,SZ:9Wk4e^_'Ze'sjC
%qDK8ZFAM[T5Vrk5Xk8+Vd'bi*eNCBFb4Dua:1qIr=S#)27^BqbMQ1Eg-9e7SSr!@u"9'mNr*=if7?p)7feSaF^HTlhhJioaT1]4T
%F^A?EI&0&9ITNI`;u^Df^/>8>]('A,e!VcilN+@mF.6h:bN=$?JGDp2QW`:ch#'2SB$S57AnG6oHe:MuI\GZOBBI+!ru.T/geZq<
%W/'.mjfnZo=1\`uij))I?IE5)o)o?,&&n>KCCbgkHaII\qW2rhbL)'in48'MYoN#m*fktWKI;[0"D>YXNVi4p&rt4f1[q)M\+_Rp
%'[CTY_0Obf*?-a\Gf&.iN%T+jhr=Q_l.iFde%klFl0KT?2ig],R+^9t%%KJmO.0KHVie$+?2C9(;Y3E#;Gir>rP?Y+SXA)'PTl#J
%erU@r&<3SBi0);?cZGaqST1*>Sp*e,&Bl?^+,Eg_(DeIRIFGtrlt>>LK*7**'?+9,6dJ<$\d#o^VZI9YIjA]BfaCW.8U-UX\:Rkf
%pik0LEM6(/ChAAH,lQ$2_2T,Z&ZH/60dLR#NjBD@pmk\733q%EQ<7l3O0T4hAdI_$VjYJm12k/YkJHfO>],i9VTgM5-ee+9"gr]n
%WJHA,9*qoD#Dm"[+qLI'(8B#RO`JrH>,.AOKUUpd+<.$>-A$k9JqY[sVh#bB](>Q"6/=*qd*@2.K^Y:kM'^0G:s(mhognudErW!)
%ctDUVUJ'na'2/9F.[o6g)D(*]nZRjq_cpu#<lu$9ETAi>s2jWE7NfD5*ERGG*(q0L=q'_]RXPmS>u/R^S7;tiNpAaXUD)<lJXsBf
%BEYJ@)@mV26/T:(Kh"lJKBM0Zdr0iCmLb:e%I-oKq$o$[=cR.W7%-Q/dtJK41S&V.lZD9I/+LbSB;$VIgndQ>M\H;&j%1rkY2>j7
%(DVT_6d8Lb0=)gCiFBTnNr/*S@_jR_9J>^"0Z@juM#5?d_).GKcQsfTSen-'r_p<TSTZ3G)u@[f8rNsIEV9c\(V(oq"OK\8l7=\#
%,QVoIcbGjX\CZ#gjbkd4]JqVf0GfGt`OU'[d+MN?6[>1P;+ImS^W[:$fgL9ZPc]!pWJrRbMe:'lX/]ca$a^pIkn5!i0#m;lN\DQ,
%B'EC0&"AI@@d#G6XrE6G\8!b_i5^$*E_8ML:g),r7]78pb7Ukmg?oSSg:N+krMmO[$r!b^Z"=tad>0$s#%WE@p_/l>DK/Ha'=61P
%B9gA<0gGEL_n@UZ&Y.U0jF*To/*e]d-+VI910DZ*mUTlZVD&t\TI>19W#R<@$L^?ei&s@m;tHD"$egG2Eje:7A.kPt1ljr0]q.>q
%SM,$A>@L#\BEo+Q65Hpb^dr!%P/&(W,F<St<YON8_;S<&g-K9I?6"EYi/AB*Fc_Q%>Of7A`"Sbq(iN-q_VpD1T^*)K2A3-jkJAW6
%'k=@q;*/.qXlo&$2(1YEB>CTFaK'KX/40(TA62S:/M^RlX&,qLf?<Yg6F4\3XJ*.Wi6ahF>DG!K;e?Jkj.L?"n>^X>""?c!flf[>
%\#$=I$GSUf%#<]rM#cY96"^1(PKTl7&U#V8X!Pl2aAF2m+tO/J"`BgchbZF+G"W`@ia=JC1k*B'7"Hlp9K>$e$!'+p0[)ku4c0&f
%"NP+/+,fnj]SG&ed'ODNlQPZ1W'%*!H2)O>id)aIo1BnUs5'fVCTo`j^Qa-tC5Xh&pH==HZFj+4H=T>6MTh)3J',n^#m=mj7575^
%o9IF#ApbLo[oIXTh!m>'k)pShs!cUNk8'[or6c?bb=ME40];\k-Z3q=P)o4)ZMLj4+qMcR=i;3JAJCcpZ%tT,MpoUH1m/i@,Y'0&
%O\)da'ICo@-m==n.8%_=]$)f_$mlXh8W;lc'Pd]WP'',`N6^'0X-;ILClk"nZjtb[MZa#lMPd7o)kd.#j-2))[eX0sn^cLaEa%tE
%$u3dNiA2!5,kh,ZPR`D8;YIg=6R>cX/]G$"*O$"U?W8)siZcldrn,aVLWUKfQA+8)L=@,Ff-,;<C8"(Ig_+?D#e-93[fET5\INL5
%e923rHRti@_^n)*dF`Mr/^4`-TTorrCO#6Zd30CWc#`0QAC[74e6OajI/.57job*&AZV/5i)L^<Z=-fZ_LFK0@\YP54?NaF@(:%"
%:K%1L/ZoJ*c7>4>)HprY9=%q?ZhTW]nB2WS'H?_G5,,JSRH;VXfNE"cZKJd(k8CS+SChA01QSV[-r.u!'4i.=O/j#7J%prBQ1t3m
%9Y,A=lOG#]5WJ4Jg!^W;WB?%&rG3jCgW>T^\]FOh\WC140RnSEMZJ"k6@d]S"/tO@#32U/El&bQo(o"3e.Tqe>`A&]lGdqnVTT!B
%4!,X0M-=G0ZhXVsl3D"]i#<'o8e:7JJ.CLoit@'(e6X=<><*]f9m_p:=uXW&lXgpC8E!YEUI;feiV3a!PA\df`:@WUI,QYO/:<"m
%Ze:Q0keV(1)@PaI/3l^<_-D?7lLu(.FYYlc%F."YR!JIB*f>W))bXU1E*$^(-Su%f!4XW6jE<F36PV50o^S<5`AI-O63d+G!H0GX
%j"*fm,n*oiQ1c'&4c)s:_SIrTQ*)ABk<umc8hfW!mIq5-Jr_uRm)14f4Vm"D,;H4P.jqW%DT,rs4[g$C^*O0`/^2YY2Y0T;ZKaPS
%5)7[/"NH)c;qC_B)[SF*nYO`B\[QgAfk8ub/Q[DEk-2]$i.IR#d5c-PL?#W?pJf(s>`(/%a-B.p`g"sb_0B!MF*]D!88K9I^4anX
%7Nn[oSk^WESG9LSFKh3o</^f_;USrMNqt4gCgi!Rl<c?cbbgcfMH=JOC,@`f<0'k5?$)-!Ao2#LMpb2p[9BZ=(gjB->LiF-4l<iR
%Dc&lbom]^]#Zq.AkU!@QZL27+Mc/e<.+7Xs`c/(>/9Q`UY%8:h^o8_$.p8@?^5nO;Z&6^o>"-lXXMnhA7qEVH%HBh\7]L%\!c+A"
%NFm@PL.?!;'d`ZqP->"&-+IquS%Y2&6.&A,Q8CHqimd1NP6OT4ai:W$'T7.]NG'Ph(r,dZ8DRZZQ=0XGE[#cQ[(*7>kAhW.)i,>i
%QVb@*_b6*WiH@`(lu!<HRUrRPdLnlpUd,D]Z)&-L$D/70ll^kQR81sH:Qj4l*NVdFDQ,,l)C^b)P:])-M6%$Pc"q_Wn]"]Jc=Y_"
%QsXnIMi!Bq=W8u-\mN1El%rkM5DhpX02;eT7Aj5)GWcL90A]PonkgTo_l8E2JmJ"9FZN?cK/u1ZT5A/8K7VI=b)(:TLnA9,KC!!=
%mKMl\^n1Sm<cC$iGl8gDPdA9EFEQp20n"F_40)F`/XG!A4iP%C/_0*akJi\HpZ;$6Mog_QVR7k&X"CWK(KWQ3;91I#p(TDYEd0_4
%8Y947DXfra`QEPmDa[h,1bD`pnh8SoY%iT[rqH'NCn9BR%GcXnF"1gha@3"KF/=%tY+^aWl.fF;h->>ZjW_jZl0P_,c>2i9VGGmU
%ZNe`knS/N?Bq\7jQSm0jeVds_hDq.6e*f:;T@Zj,D47r2+)i,_dJ46G/RWu-CCHpk(r8%Z=`8_Q0^sG:,+/B+(TB2se03_M1OcPT
%RGsgA6g^'(_`^%lM*8;M=mdbq?%CK=;?;5=3%]9s-`eO"/[Nn^'1=HU8=[,Nn2dRAhb4XHQ`VN*Xn)i\M:,"JEd[YPoi9T>7K'RE
%5gOJ"gnTQe-g+!fnKV-?H42U(5t:-)NuVDX6]4J@*"25FTs,OSZm2sFhk9+X\U8r6#?j6`f=n^Fkd7&&q_d.hgXBjW2bEdO^,W+V
%/p6!EmC'=!m5@[/Xn+`QoesLmAM$cmpX)hf-%/Tnifkh`U'<aCPnG#QLS<K03nK"&.NDDsT2+qXKbJW4>B.kj_`"4(1k]LJ^:5O#
%^=p''('/nlfsdnY>=.NQ=WDM+pDm+,*6ZjhPA64/rTT,U<1s_.r[#$HG+V:ig&$$I`&KoRk$D7+7kkuZi]Qt()9>eDQC_)Dra$r"
%\?G2bT;&a6C@.AZXEPL5GUTm-=g[N!n+`SIIBf;!Z:Gd'aqtS;37#G-rLAfDbCu"`H8q+$1Fa!XIAtB#CuPuojmOF]+!ln_4f1!_
%qHiLnfUk5>!B\nBY1N[?5&f]%81>k%8;HWQ-V(QVPfZ'IZXB'#N?ZLnr"rZU:-=[ce%PVAfB_K"ERl#'2,00*lcER+@0@S)J:5m`
%jo/j\:c%7ir1'+%HWPWd(Hn<"`#*uDU;1?d?:g\CoBiYLE-@'4`DO-bck0LcLjq\$]Z%-PoVu^IAtuUCjA>DYr6McJP\X.!7Rp)M
%j[be^'Mp(ZQBU(5fVXp0^0@)T<1o+Z=2d2/=?LF4cYut*giHOK7HK^MGWqm+)5O;?+_=Vu*G0'^W]Cho&WE_2DT-%K3<bbd(hWak
%FR;28+X"!/BX8$XW'+AkLNn;6`3e0sZn"d-fWnX^GC-45guH;p;h.70eFL`LRH8,?R2Y^Z""UoiQTf*ZQc();73]q?5tY+]@eQN`
%?$OXT;9p#L`m5iM=ao'UnsMZ4gug9-=d/"`7QhGMf>^l]Z<N/-[.a'J1KM'^,fOnpie_]>j=H=[S!!(7MWcfUq".rpNq5YKXjJG;
%9#0g\2OH6gG>?MeJ[@#K$mcWUqQ#F_F68m^*>!@*o)+_n,kG!f5PBcD-Ab10J]DseTm<&f9k+h?ZP+qX6ZWC9I?f^;KJFK@R7L3;
%/^Kua3%q5A#>mKs&SfHJ2,RsRTk9\:a&]9.G<?gT(TO^gdS+3;:lEFb85*G_k<nLN<q9J6C,Qoh3/"ghPgkq?M-S,!$8jhBV0s5W
%4MMA,<%P;E6Ta$^Ad_,6DNqfe90$QG;56%/8OBVF+jZE)a<=ZM1ft7*Egeh`_h5;)er3ue15XmI,AVSDZe_P4HpW`[VB&1hRD%cd
%o3u5PbfJ@+^NsKY@G+eIIk(XEbfJ@G-:Ttc3?r<9Z3hu0N9%3*kKetq[a+]3Fql0'PJiKk(O5I<nSD6fHT.=s=d^9l)^FM58UMar
%,)89]]8p)3k#l*QD#`ItCm8^3"/("hIluZ3Y]/F?Lo!F[.08M9c:He0:]22Clq&NIe];A#+D44W,M__HB,,]=.LI-`Oc2Gp^.t11
%f&_P7N3GuCmg0&Vm-S2FZt;AD+^Qs9SS@_Rr\eenaA&uV*-Nt!"+i<4cB:]'V<0OHEkJq*MPO5t\Vih=0YuX+>YONr)SE,pP;Of"
%$oJu5UR*n0!0eduj%K@oq6\l!0"'M(S>?R?U'=%mM:08l$gCp-Y>JkWitU6kbXi*ih,i36[]qL6O?^H6mSt(])P#ZWq&2WGf@Xk>
%a[%"-E!Ag-68i(<9V@c"o`U7OYH$Z!ICqt"KV0NkVJ*<:*XN;SANN^_dtI>r^nC(/[odD3`OJh+1Js1$UiN8Dq.<lm*o#1S"iAII
%/*"j19?GiQ\tgn&:l-WdWB!usFZL<eGU-^RL0.G!EYEIW*>MD27YkZ"`odX`nK^Q^Z7J$L@nVNu]nfk$?I3G=AJ-T@;Ie:/5mKo7
%Y@VTQnZ`b@!e]'[_qF:)a312sA^FZ^fdbHL)$En@U)mPf<$+_\hq(FbC\Fl(_Pn,^4QFj*Cn7jd_+"@f*30mPAf_7,\IpKbB3J[Q
%PP_ccQ<D8%8-DQBlE!Pq_bm0gC)fa'j;;M"hCS3!,`SmUS]OR'<Pj$L7!+iB.""E3F3O2R([9>7M_%4A\`6;`atJ\.l"$_m*i0+;
%0jTuTPIp</,'U2e,[F2<)UDiW-rF76(q5fs1p=K7mi)Vc51m\*GI:X[Q9&YL(emSm9K>g^l'Y(b[#fa#$])5Eh&.\T#'HnBG8cJe
%]uRp;(i"\6RiTJ3mL+f)S]e%+;=Mc1$C`NG!aqpm0>shUj8?6!+1q27;KNG4&5c^.aA>R$pe]BtM.;/@:nrFN8BR9hN6bB^>24PL
%!allGGZ5Y-?_dQqjJ]?4aS6Mu4%fJS%KNu7pnsS4+HVbW_n^+G&0,75B\fUH'\pD0#,gG<[_rZ^X+lW>8&Omi*XbUk=]1)sd@CDq
%CC(2T+i5TS%H=CTT0dF1k+kkYM7p-WK7-\?Uh4u):Qp3rlsS-WQ/M]W%5CJMI"p_lq;l4Fh9Mfr/q:8,h_Pd5)4XmQ6-td,[O_>I
%+rpB6p&Bf8I!"DE>OWa5TM_X/1f7U-hU(WTrO3XDH8/.3M&=mQAD2';e%r';Z[7<298coJ/et_:7?br5B!S^Q*+qQ?!':VMfB3TE
%Z@Q7=?'uY8M"upra@VCE^gK1k=_T;IK*m;gEZp7\*+4pj9:)*mOn"sP1McHuoYs@^c#8ofi:Dmb5&VAD<8CZTR3beHj'jp"_V!2(
%qn[Q_SmBS%(G!`/6nPm<?OVbW;u,0aDAL,tH%Y0oi)p0oHB;"S;UD)bW+m2:]i!=_JBr3=3nn+\4`oiE5s8f%R'3YshtrS'?Od_r
%'0hVq>d"^Y?Pukd6Ja`:(3t&22JOk.>$qf0UE%u*0"\+Mk/"?qW'Tk-83,)>gaQl+f6lgg7'eH@#mCfR4I0$-Vk0Wj8+Xl;R9<:-
%Z?=kTWXEEU0Q.oe3*@'"gF$cjLJl1;H=8eU(/s2:;Y..iZWCl2U87_o?4Ueu8bN+9qib.dd3G%IGd[fYYle*spEBcLO`XLrel9V\
%XZ\9Q&eWj&qq,G)KbBp.O=s/dB#=(O,upeFb#"@C<\us=/t8kWX(![aet8ch$eLbh?PIERIIr40KOcnX+t/fKjW3R(Bmga)UcY9-
%0;V`6ch1\;oW5uEl/+^%OqLcCB/OTVDmHT3Kc-c0RI!2QT1Qf<i6:=IY@P>t2([7]+u!OZkplJY.G)hJW*a=Cs-__[1+B$!bI>?[
%W#8TY6W*G)0qidlW\d*Yi"ZVrPt_`l;7>("X6+aS(:-8I,jHgCLV*j]$05&PG55k:1Kt6(h&L#$hiX@WBc#iKj_sdZ(oP9"H`$f1
%MXDS`:8Xq3=aHVEbYf51C\1\EYd/7cEmiguLfi+Oq34`--1saG,U8RB>Fd(od_pHY&KA(ihdIX)aGu(*+#/5+BLe4fP*-bnKHj5D
%WDSWhb9$l1X2nZk*3WHcp8MJGNUec"7*pdD8;cfbkc$Cc;Ofs36S$1RMYT]--l.93bFG(Si(fe4%X=AIBO;Ib=f'l:cttVY/eg:5
%[j79lM,%Ecr/X&-4Vh0W5gMnN4-d4C8WQKuPGKG_S-NTC68;)IZh.[t^s,I.'<tV&M&R>3ZOEG"Mfb95FJP9J."XNQIY(>C3VG'?
%jh]j`)2_D5&AaaG"DJcAKEY9[CFYY0#U0[g)oCQ\>S)FkNhEJO(a:;AA'ktsV]t4Q5iL3\F9IKTN[1-08N;u+b_b?)/I=]T-lU69
%&4g2dYVR;M[N`f/T9#5[THuQ`-t1Lb5)s(2$Wm>2->*(7DfJdi6WjH@76RL"Vi314U3eUu[5M7UB>UA(1<[N@/^?.n:((X>>./")
%FDW@jE`)^Sj?C!Cft/)M.bn+;T8gh)Rk+p'8?b,r/6f'r0:T%2.ncIa1N,ET%kW(d/]X2@)->B5b:^i#?1YBQII4\^>uj^R"lHr7
%"0_:51Om%u$G`Cns22MA=5mm4*W%-X'.;:'E%7o_Be;p34AD>=MDgM4/O;7Bb\/(Ug;T%pZ-=*5aI45)Ve"'/].2$7ELp@dX$D_7
%H7[QUZ(;<r7'q`k,mf8!,2h4E`.I(cflFfk=KoSZ:F@Vb/N._!_@@437CK+T7%jeDVHZPHAkLP$oh+s.:H0i%@4QhbJ%<m>AmtXH
%jXgORTk_4N!d7"94I8*k'"]g;%6l/_SO7scF+]-EXTd)Z#;"A)Yq??+$V4[a/rOpV^l(s#M)$n:1p@4>6GosXL/NJsn5)B'7($6P
%$7ZB!]tm,O.R"\k3,YEQ.VCa$mS9BuAN<+4nqD)!k.d4MMO$n``m2o`hH=NhU;c4UmQ6aOcXo2.kJ&U>cO7]ei+8asWnkA:h5A:E
%N@LIW!Vn1pG1u8bFA%>nN"s"m0e4"p7UYn?Sd(,]pa"3k!fR5#s7>Xh(:f!+2Xmk^0gF]Gh!6ta"n$EbiO6LHDl\a%G;WlR<R=FH
%S+BD+?*$+iGAf/3QM)lu=Bg]GB"Wb!5/@)6BO2?gkZ6o-*R#eS@tH_Z)*G_$D.r'pbh5:$.*WOO>_HsQ\8tGJEs.F>@8d:&8ooYf
%P%P'*@mbL'Q!GWn_es8s$goFEoO\pd[<`PBVg+9-*hRe,k2g7kM!%7eVfL@AL9nkXb`J"qT5^XlMUY_%\gl63l4_a<GF%5D_.0!D
%62\)J_EG20GSIVo`*o4XLn/p"E0V7C59t9t@XNp95`98[2(L%\d,JPBa0Isga/:NAij&=-@`!],BQVK)Dp<L<0Z+!sbLsB5:\>Cs
%\9CAZEgN=:70.AG0BI@ac0fJk2WqM.>IMN`iBU%fW/^u`]`]5/8D%cR^mTglV^g'%$aWQQQ@i+$A/.KQB%r6B&h,(%S`tf'cM^nP
%Di#c55IDeicEl]kfgB>E?Z>Udh?r`jCt0S!=+I@TGQn!`m#!Z6M_u?O@->0,V?.t&bQ>Yl:ZU4ZW,L`R,H97MPr1=/h3cY)5W*7t
%?NASuE[qf;,p@K(mE8C%.7-%mNNAp[9WP\WiYMuJ(0Z*)$hq)ScIbpYe)[iDi4W6#WJ@2)rM;J3H`$44`;-Xd!ISmj#>''.NLmJl
%[A@j%=eK]aNjQ-<?h\$k\0ZkmV_I6RX[;t<m:Hj\9\,2d_K_h;f^3$?<\RB=K.RC7%jZ2WSa3OnKfa"hqE<Sk)HUbr[hLc1?R./k
%,(<SYWfV^/GZ5alV]g+@12$Spk."BKr:bNsg\KPaiP-fAJ.U7A)nhNQMQ-ieCg>X/`T0\=im+M5Wa]FFF#OXF>qin,Y4.)bbs6dE
%e6]5jb1&_QCbU679iZS*_a:F@L0`tu+D7%!PX9rN3)YW3%k_#mr7CNJiAsTPE])qpa;3tLXKI/=.`iPdRF5h'l3)k4:2F5A96YbK
%i<6-^!\(8b5rki)->Q]Bn62M(H:`G,euj?6OdHl%0.59qE4uth<ZopZ8#c`',:6%A/[i<6183?t1Bdlu3"#G(C]d=^7TM?f,/!7k
%;)/>.hj?JP^0$l#:`ThAeVS/h/(kAc1Z+=s/;#WDY<m)H0Uj5/b[i6,N%b,I,qTqB=aV9WF%WoH`;A)O;lKlada!b1GHR29'BNTF
%-9RlbGlZlH(;'74i4,[f65LI.r(o^Q^;cF;PTmdnG[K>Q(U"i5S-oN4ZT7I/C!!<?Ncufj5?d2FOc5H.TZ[7J'(Xc+[?Q];;K@b8
%W@"fiq5BXEZOC866COb4-6]cFQsO7I;MA:HH;[M,V508W`(N]MPEaWRoHdY>8P3!SDAF1LQ8:/5cSCH-&X;Z:s3b0L;Sh&1c,XU-
%Arm3.[[VXS:S7NfFg/;5=IX\S_a5.qf>c>:QmI"#C!CD1E/(l'Ze)F!L7tc%3S)JdWI0F]KtFIB3sl*\dWs<k39g>bm*26-JA7F(
%,d3-C@"uN,LO0?T]/<,Y=S.c'JOk[3PT_hMkM-Q-@nLL7`G#\C'9%Jb3?TPqe/4234:E=aIQ(MbE/De_Ac)?-NNl&q?u+njc%saR
%^%[9+NOh'Xm+tEBbu8g(!46!T*n-#AOTX[@,V>Auo:VjoeE7c/Hg8T5]+:5K^mK<gImbgP?`cNKHFI/&rm5+R4eNU3TF^7A$k7@.
%,m)sm(GEh3/Np2-VFBb,QS!UO02pX!Yje"X&B!NOWGYOYa!U%i*Nd86%u"cg:IfQs(.Wfjl>R%SL'\c%+1_"m>'m?%HYO?+gn>Xt
%&Y+E!AYsaQX@>)@iW:jM>rN=bRGLR(c6V7OR_;WUGbRO9bi?5K;r!ngcI-Kr">Y%?al5IOE@rA6NHQT;N[-'CasT30<\u8e.#HJ4
%_WU=1BT-Mf!JhIcT[qT.0j8lQ4BRVtZndKFZB/.V9Z,qV6r8jN'$I_H=:V1GZA>&l?E&p6(Q643WQi5FNPDf>Df*^ec+07lfdl=)
%7$*Ku*bmg=i)C3k+d6J^'rWg,CbLm4Tu+]9+L4afrLT$T<\&"r-:mC>jqX-59VEY6CthhF@7OkD*hgF2=]os1"<L6g%?Rm!jOd,N
%r>VY-33[n9M\c-@QeRtU@\'R/1kDg9p6Lf8VW3lU_a[l4e-r-0ABnf28&cLVk"H>e?Y;ks8M@-H-7QI])p3N.`qUHG@ZSHhX`5k,
%S9KGN,2]D7-n?$nP&;ucZ,ZZ(CP6l*PrOY+8(Y0oZ7o-:3`c,q?sU6VM!W^$ZXelgN5tQYrrl(=Iu,c60/49FLGR]+&KlKYl<P,k
%UuQ]\(?k"1H,]X'g#/:ZllICh_SEB6/M%;;Tg^gcoVR947.o4=E9gsS9XD56S6D_EIc(jf*t#4!NJkfWrh:<:fV7q?>[A3k6i9;u
%1BHj"'_L5fcl7Nb"59Dce\"/VKd!+WJN4At1B@"I]Zr'@XZ3[I>O,9fd^.Ml&iur5>kJ"1c=WV-$%o<4XD:SGYeIi__VQYBj":#b
%%4on&/:L,*@[5r,;Nqp?]LRZY>F.g1<nP'qQUD6bQo/+,01]i`SgMAf`tBMt9)Wb53H;b3DWN1%MdLVAX-ZmLYB@D([*E-L]<IL"
%<A)mJBb/As-Jc+"\1*,r47i"9Oi$.8rB!WaJQ%<9e'*nTeoi[m8Et::22544<nCf*71J;n24.HE2@[R!'f(cHBhuYR`\CX.0c*E!
%B[SkDlnFdt@d&>J0-/=[hpeE(d,fdg;#N'`oNmii@Q/k6?!oV[@l?h+Mi8u;(Aiuc3.oU`B/:jG[q@0M\liVr[M>jb\[o\;d:==Y
%Ah8ruB!X.X9d)R\lt0\!,jZk^TM$UeIEceiOc12.`PPGCc"-N\18\\=URhW@4HN'GI9s7Q1Bu@]c\'BuRJera`s8oB`feQ5:W[!O
%ZCfM]:kk?3_16io6n+?kP&c50&d8YXCeAJT(")i`NJ/RFF1</&9#4Cda/WZNe1m\OBj3K3bJmO+XEYGk>!&*4`jG5CpE$jP4hZ+%
%cIc$)9%?^'TRfcEG6/-_?qO"j^;uH=r&CPf+@'!l@g\8CAjQ`,o1mMA,2)f'0$+O*pd%rnV%qVTk1/m:[EXKS<kGciNZrZ19dmtr
%/LrI4[hMVW#d,Fgm;U$#'DkjKnJi2qn%[cu<q[50Am%d(2+PBFZq6sO6U2tTB<nu?ZEc?76g5S*(?[k.p*=te/U@WaC^,'R]l?%b
%:GXtuKl((N8'esX!=Z&HAoZCX@.e'!Z*=HM/5-PX[Zs'UV6eMICgL><^"J;0P@lY`kJ9D4a>hH"T!RiRc9Y&-,V/m+[W[ql_175\
%[^KN:@=b]V)Y7Fo,nO;*g6V'=`nW33cXF5J=eLqo?!@%bpF*-@R;DB+Ci@Sh(@X,8Nt^l_5sbk_?G,eNAp9frL"3@"r5-T0Xo!^c
%MH:g!]AE")`UMI03SW4npYq,VKsFrrHC'=dI`76<ShnF#l7Sj:Y56!*0Qrn+0u=G1IGic4$dA.i[.cQB)"mgsBp`CGlI!iG[*0Lc
%Io#UnWc6d?gb/ouhH7""3n,Z_FEG*_%0`/&%b0lu>3Ci!fqV$M3\9mL8so"B+PYO-m8]f-TZMLZA2gU\1O`JWD9HG!8sZp1;Ln,1
%i7Q^S1r$B1Hrp6l_6Z"8G4r%/m_Aci?5@*Slb*]#4M#LXF8sGFOOfj2VV*&F5#^4?Ck:fP_j8a6brd^^_GPeS0^@GcOg5<Y;'>/S
%0[cd^l_u#TC0Tu0&5<p7U0ktodlo%1o_fpX:I^8TW9g,6K4O1'CD4(k5s1$IQIK@(k`6+-q2l+L(B='P,6!40(i`eU=-/U\o]Gd.
%\SS:d,*9PMXlaZ?E\-0W=k??K1HHV/S`Rua+l5%k(c1QJ$2,K"!cu[G%Pkuh3r?@b-ngs4VC+j(=nRbD!.Xfr[)g93rc`IuDPN*i
%^(n6S@"Q']49sO9&A8=!=L*b@3I8,kCK0642C<c_'uZTS'mgUSXkcS0n;,2a7gWU!X@=kW2M5,-N'a%.imG8u:KpmYj3AGbAEe#T
%Xt6^RjAqjI(O*S]@qLW]^`#YqHq8mGFF9rB3GX#f3-XBGRBnUuJt;^lZq`m<(Oi2B8QBd"(.2V"OA(VV(.0#J&E6-"l33Fr+;%hD
%+^deOYUe9h:adgc*J&@M#LMas[e^s5,hW`kaE7*+j/A/K8\O7C'No9<gVmo'ZI4#`F`kn#4h*fZeoDp>/H)-1fD]%#B<$\^(lP?T
%RV/kG&WPS$"TMuZU>gr'1.6*ro'B:3RIu_tA)+Ce:ibo"TqHNo7"\'M82#S26%jid?r08.!a4l8`3q-@%[P=lfj\M(G[oJR'b9[8
%o5)O!Qn2?-:jc[2@Y)Lq:bf=dL`F[B/W,+",#dT0ls>!hgd.T7mG:;F4JI*Wj0Qk/iRmdJ.j`rjD+$(k',,(3C90&l>*QeJ!lTFl
%&+K1toIY2g$Y+3<9UH=nFt2_-Fr$rr<s@i17D/TmMo91$?If8ADNXQ#54Aj2;ll+q6?(5+?R7eWP^fNn`1[eI'RK4:5sX"JDp-eq
%:@u"6h7SWZn)Ko7#j3`O"@Cc#SEDm*3Kj>IE,inE)oLR.`'5@11adY]\62XZSc>8G8t?a#Ld3cfY<2MGEW-KdiPB?L.Uu>](1nXC
%XKX`s3mc)]b]AIGX!.J'H'Q"a.H[i[fU[lngq((ap"Pb!oi^djP``cE,bW[4Tl85ZODMo,9'*J>Q.V!sE$pZN9G))o2FNn7;1qGl
%38:[TNL"7SF!Xf)Bl0P4q>9'8=l-gfH2Z@c3%5QO]oSl`Hl>tnqu-M<fpmqI:-5?d&BGte[N(HD/f))q*'=l?_k&N&*h:B!:u_b4
%,+"pS@>U\7iQ5R:L+C7Z$sa9K"kIYg0*pF-7=dLT6PTM^%C\!pMD*_i!-HB@126tuX.K-'5S2.i_##^ik;(*2BZtf`OpA=*+bFtb
%IsmV'+2qa)V%r2>%g<%r:Xdn64>CY_=b8UE.qLl<+KQCpJ-3$]IrppZWuLSbeiZ4]kH>bR3#?q0!=8Ytd9e!/oHhb[K])6&rZC@8
%p8H(!_9S!^7Lu:2F,3'*k-:%V7nB6V$\c?nT^+cI^4a<Unu5BMHHcW,GCKDa>h9WRdfGp*en6D"LI?2<6PeZWPd*!0@rbBs%.6uH
%cPEaQ@5<n_4SHq-Wo7btiqIj4LI-/5A2dPtcY)E-F_G>&_qo^HW_gli+`i)K(D,$XG&_e5`8IE3m';l-AY.Gk+PZA+q2X9&i9PYK
%//RF%lEV%@c<9D]=C?KSb2*i6]30S#n!_Cmi**$`h3jFcEN#GBG31@;dVC;i)Np(a3a6ni;Z`I8#<G4A=SrH:\Y2r2!W\,mC2K$*
%p7_3eH@`or[X]G44=qpq%Ku#%q%N.X"*'q>p)\CHea&@m`NAngFKg?:4,*W.=HX,@'5ec[1.ifB^pK1O(GPOK.Y#e_[@cj<2\IbC
%fQ*j7QBY)V:ZH+.Y2n24\X;Jk>CWIS(1K7s`E3q72-#D./uAU6o)B]h]8A*bSm"Qf.E_fNcX(0TonC%SXXW#I0VRX!9X5J4AjqYt
%T-1Z0/eO/:O9Xku=<sCb[k7MXTl!QZX>tg\Il+/UBB&PK,gK-_jUg2'>I6RkMql(`P452)/P2D]GLQ+TPE2Rf,>.;I8K!")5\([@
%6C1U=rV:PPEZ]YQP%8j?9e#>VPi?B1AV4?qo?E7q]$I9ioWdELZ!S3S6ZlsuldTe.FjAaPH80YYhjUY_8Jia?.(*B_/R<_`+%?j,
%X%6r?[]fQZ2HSidCgb[5)FApa(4rsHoFH7^+**+36]S/rR1jVbF68@d?7P9>1lRS%:>3;3XB@NgP<8QbJQg:VDDih._7tBA%2)_V
%;bSr6[F[C@(4lE,N#"*M'^'"RaI-LX-mkQ.\Q%D11=fEu_)elH,th=]n9gV(Ch__UVQhX,+m0ge3@*7C"Q)^Y/L_g0`L&hRVYF;N
%CZ04tL<<"[RCaRm3ZtM+h?5,:m@a'55Ybt@\L3^RgHRd3B^`1;QK;a&]8s0#hY'uT7]".:Cl,tZl>pcuCiuB+^@NkEpc@$sL!_Q5
%Hp6h05$iA8T%getF>EUnA5\VQR)Ul!_Mpnl65h]a=c=]tFDZoKM[#uEo[pD3!G\a"279Q@4KqM.5VWC$6/'W=]f];YpDc_#oDS,q
%Dn`o3Hh6Lhc&Z4[jUWj@bKC^:q`qo=r7e\^T0?Q<h7so:qs!tM^VF8(20aT#<>`s]EQ^e&Gob=%gB)*=^h<q2(P55rJ+`bQ-D=Td
%UAjd@J,^V[q0td!?S:?WD_M+cIl/$\?=Nl*IZM6FmCr=;de:Z3=BRknWg3Ir?>,PfDR_L[cqP<@ih,Yu0@5iCpu8`)4m:UF$V,Tn
%X4+r)g-WLl@s'3IA4B]'T4N=>1#DcU'mK9DO/'Df[,GHQpkB*H1/6D26o*QZ/\^l[FK`[';N!XDs.m%Sm';(TGr.n$`7*eA*Io7B
%>W9[G"L)1]9eB8KM/ENDXJj%W,f!Jd4*rs;rcnquW5GmRCn$Gg&jX9jQFd-p!4S(u]$aR.%=fR/&rJt`ASA!A$iV<[:CLm?6M"mo
%lMNEEKOA>@oG_o=1:C]C]%.W;Bq#^3CFEeX>(o=k?<KCjS2C`1dnLZQV_+gKR@nhq(c]_7(RcYCPc5:!bgY'K`(4k0l:-^edfS(X
%VAMl%iNaJ@e)=4:]?Vn^UN:YVE&gD_,m;$$e*+AIYLWO#7:#,r;K!/s#+QQ<W=Y&5:Mj>Ao>U[4#Z!:[WP=B:[L;*s'$Q?9g)KM4
%p(5a`6eO9.)(73X6OK@hVHG2I'A]7k"UL$-:osDkYB02o*<>RI6Oj##W7p/'ZX1#X'4LJH.q,ggG15Z%g_&TU);F2X@U,r#X0p0P
%J_-emi3U%12/knPTs-c;EhoCFSgqABU*nEkeu]0b>(hnb<!+R"GoUpM>Sp]3(T%3NrNDR!=`#;JCUtL`.FoFdn)>#8*@l^.`P.&B
%K=21te?)2E#eEfs`M!9q91*KBARDR/m_E:cQ]Oq]A1>qmhtAkU!.>f@96B'UTe1Cha'/sHYn:"0_,\AC@[eO+F.gk$IA>7*Ih<m#
%![o<ii1?a;[KIoaA-G*[Zk[Ym39sa>I@F[PNr&6kj#XKFhRU4JD<lC`eWU'Aa/Q!HD:o^eUl*IA*`gPM!bSE/[#l^lAA/=VMibHY
%_\Y8b,0!p,c&5'uO6eXq%8*#WL]U\V&]!)U&8%d_1p[(BgkaZ,&rA:Ng8p93%Y2.F0p\(J?A;mOJTn70:Fp6FVL3^rgrZhem6O2@
%EmGgnHX89*bkn,X'mOAV$NO7\i=GpT5(f5.,mLW[,hJ?]e0"VY=[$ee^8%rlrGq!TICSd^MH2.hL\p'#>RK=7dr2O$kKT.a\6*r>
%%JGE_lG4m\pTCYG-&L2[XB_J-Mn0u;6GZIV1A.k<^RRln3rj9M::UOc.J"Bi<k1mUc"Bq:PN'%F^2ib*^Am8sgT4f$*DZ'OA[.MY
%e$Q8_4PT#Q];ApBU1X@cY:Jes:JDK_5]Lo.qkCM[)Ag`CZ`2Ou$p-CeI:2.8hH(ntLOu0#AM7*Lm9_NSR@j2nQS/h%=V>hdGp=N)
%QX;4;)Ypl0h<0h`=^.a'Budu<fj&>iqt?r&]R97;rfogEAJ#L^Lq`-SPlP%j-B(*8JcgfEs/U$R;-Z$TqQK42R$Xrb>jpEMX3^1g
%83aj4Q'LXqH;Q<f)Lc;Fi2dPl2FhX"OWL*KZT\ZqF+%`V;"k:^!DoR5D%mc+-:%G1s+F8u!&",IT;Fmr!VHn,8G*)5APsE<\U[Aa
%l"PasE>8mjVb`6rcp[fM+Ukn/KCulmiZN(<n(VjD#W$G)fWj&2cg;"e`]p/]b5.'_n5A-DNPq*e+/Em5eX"@2bS"!;YhsZY6B"c2
%dj+63O,H<9LO3O9%m0/b!6>F,G'`.pX)C%i.Qg_AZ6.)^PqZUF[.T$bn+;&O"*F6(lK-GVTn>7+4l<j%FdHP%"_[piFQQD0*TOs.
%Vui(BlG@+s7uiqA0HJ@X*ftDZ:NP$Z%Q2@^6(TOu.%9:EUcH3@Z#iO\8gAmKh?*p"P!#l4#ri!WD,T%4TFbWlTKYg_9%1hV(FL51
%1Z]CL:7F\*pR5=MJ4T)"ih>HtFI,7REl[6&9d*lnfYF`*)77,95qa:j62T/HK5DFs.D[l,7KP\..8=n=b]fgD@7ns75gc;i$I9r2
%Tu@+)lVVmSQ-H75B\K8I1/_dD#2Q*Vn49;nAt4+\^j=pU>_h1M=G[*A8YHj/CY:@;hrrW.@L.!o2thRfUiiqZA2hE?8_QF_B-993
%(b6'N"b>$=luX';]&EM8oa:Z&cW`;%5rX5Y'mYaT$<l-Vf#"68Z#=I-_u05'ii52h(5,;i<_&IOZ30SOS:lu7/S$,o&/YQ)i>T2R
%80!gNdW`M:KI_m*k*FENDl52&H(aaR:l`d%=fdZo^r7(`mX!)oP@k_mQ;2)&kJp#A&tO1Y4CVm59W2!RBl=HI-Wo(l>=P<E/@$G<
%?<Z`);Ym=.g0T@,@FAj\6WAl/L464)IXk-U[(01N@"MMuFaaQ"<4=G!3fS)_d`Tr&)M\H7(3Qh!Njf0362INjR+!b]d&)bILFsu=
%mMeO"SRLA7Y+f7(TA4,]ULYo?3S4Sp8:jBBS*V\b.3m8\N/AM4A/H5pp9qFD.hEW`&;D+Zf2.Bj8B`th#D!H2BFpPd0f<7i6H%nM
%pI^C$7Z@$n]q177eTGt9D]9)0%)(4G#*"6c8)((S"6`&iJGh:fhB%#-;A,Yc1fc[l7>)TH!X^i]"g#0J)OZ,rHKb<<3&36,e"^ud
%@5DU8.-"V<-O?8ImM#"Y4XD#de,9Q5RtA6h.L,sp[b&D0d1<^:p!'Eei!IDO"4!kN/lAbn)%d:0*GYopN4F\b@0&VMH30$+%qV;V
%e2(MZXCpU"#cLu<m;Xhs"qU9*pVf+#O"/Qc362l_+C,t<=Ja/j^nE?UW/Ekd47`Sj?mY.A3Q[u4,L%nb*$b':(=:kp28DLI4,53;
%h,?ZTS3/E$(FE$51t&QCmZRhdZ&bG\)sPEGF9<51K%bmV'e;j&YMC*2^JK>p'hV@DPf?LLWmfn!N@P5nKk5^'g)<nJb"![=%!qF&
%8a'Q\DoYm_mSSJ1oA33:1kGq,1(Iu$.Yl+o/&Q%&5=V3:Y%</)edj05;p$T!$p\?F?fZdRQ(7trMr;7s(.-'/=f-JP=[8Xj=_,4J
%"gicFGn/kR_$j7UFHnmV8e[7Wd2E)B::[DP)?B;qN0UBmj*,=&2VZq_7\XX5+_*2Ljb[\-\-/P^.ZM=JeC!CoL/DBRj+l;%>)rYI
%'Gc5Zb."6F[sSan"0R]:ki@'#\5=G3+RYCCofBnHDHba:c\lb&aXTt5aMUR8_NdAsaDCUgi"d+\d']IL4]dZLZ&"gq8gTu(^@R9;
%l;="3_\MZk=4IO8i_^H:/VM]-DQbIr(N#ptHEZu@(`<o.Tog$^!k;uV'S6]o@!(-4NV'UtU!m9hPl`<f53%D4L=TWZ/Tf!"Nm.B.
%AH3.89L.LB]i7aZ/fW/-J^79+\CKuq_lgLW'SZ6C;TZG?n<Ro5U2r+SRhX3Ae'Q4U6_d2?i*7b,m`M44%O6^_d>gE)D&OEploRM2
%Bkm9P37%5/PTi%X;(lq5;_p-:nCe:<Pfdkt:`,J[V#"-^BcigN/e7Tb?I0$bWG=lfYI&gqXXsq4Nb:[kV_4',ghb:e,!aV9g-S-a
%e&O0g^e"WT?7(%$##m'^cj!ksk[&%TreR=m%;1kTgJM#Q9aI^2G_OKk^![f)%N&WC'FE\XBUG9&<30mUh_qhs4(s(*.--,1@Zp^Y
%Q?-l0*hF]*,.RlNC7m<_H`aX'.H:X*.UB="iMkXda]b>e3"$F8&X;Bpf^28X(m&7GAl#WB;31H.0M@Il:"2c$P>_#d9Y/Sj[]>PY
%(ek@"Jl"'52^W$o6`+,b7aFLaS%mPNY&4*&^e1ES'VsbC-E6?kSETJ?Q^.qi-UlIY[a7MJaA.!AEHFMIWjEPYUpD[e*_A&925=id
%;Ane_Gq3S0kuP^dnRAn`pfNsTVTX1mK48>rAACgQY,O@a@r`54ZTooJ7^HR;+ZCT;A9O.]I$7E"<,ZdupeM#I<W\P_94?YtYgZC=
%;Xe2cfLY'H_oT2(%jWim2'eic<6@P57A7':-'HF!\'BY/88!j:9cD.H[[/3Z$Wo?p3_@i0<9ikGM;s?9dFiQA+K_9F0pA>6f9j?)
%7Rba)DgR\h!aul@U]>ri>e)WTQ#<.Jp9M#WU19Q1Z9T21H68uhn#]f";XtpqmGO%^2_nFB9%;3M9''a5Ml3qd7sGqc(MIbi3M>lo
%7a*&!@&2LR\!7'g^,*#&Z9`T:!FKZe+3k>=(])/4*_:mN'FO.rS[1!S?2-gPWj6_?_MtNbBoc.rGj7$\W,`+W`n:t*&)-_[I*",J
%i)\="Vd!h<j`e&(Z^h<@)eZUB>*-HA$9*FJB>udfHn2p2=\V:MM1RCN!BTKOPAJ94-\a'tIE&!u@b)PLJON+iT]F7'oN<sf59F=k
%g0(TtI[1[Ac(G]1.C,`LVbUm"'7""SJk6PaRg!A"5B_q.gVK[&:est;Y%PZ`Fg.'o`u\68iU03ET<o"!N]C[-+]]qRqr2nCQ'9V1
%A5=@#1iVtm8;3bARuk-ZL6It!)r4puXbqW5#uTH8N@dXZ3mrr]Aer`M+p^IWA7X<bNkN]-*nFtU4(R"Ke<<9F_dT],OgQ"f-fhH'
%biN\9ihP_0q:1Xo+R:ptdd6_=4tXk(K-!fWV7"[>":+7Vn_h;q_XgMu&/0%:8^r5dhBX!+9f1UOX1*_E3"DpX[*S\1V#0qaT[\s!
%K-\"WPK4%&=W^acouECPVMi4dqhm];ce2r/LE:?iPfh@"Q)%B=[e:N2es8Kb<B@p#?fIee!6`p0.?I(Ns4,I@nJD9mk5)9^H6P0Y
%+/loE[<gHMc'.B`klE@[/9ijBq2cd2!:(;"NbBGc2/&B,7]`-4>eKD^>WE,r_"A_/':T1%OXgOFN)4)HaDnHe!g7L=*kd225K-\#
%#$_-?l-tmt#t(f\(uOo'>t9kVK*$:kjXXiaW^a-=>:ZjPU",(5Qt1_AO?0[;Uq4!sZPs,P"Ebpun?.:6!-FH7;Iq6)#&G1rTBQd'
%;-UhB7d2T&cHD(iYD83H9G1=%0Qtl%@M#JYCg69[Y4bUpJ5*2q7][M.''IH'9s6,W5VGYMP`=c?dU5_=BI[2+Q0kr4;(H(Fg'>Gb
%<1UTiY=3bD.e?>q!h1\(OQS7SXBQ'C1!2'JJro4_p)J5:4RmYYEoduRJ[R!QRWqe!FhOk>BaLVIW5nH"Os1XcPpEBm9!mQ@asjd*
%_0)]LQe>e6(FgYf/pQb2kuU2&/sRp\V<Yn:&>RH[@UgPK0(&gU^q`XC2QfM<TR^t(%02qSB`lQ\;J!f2k=Ri?U]m!LC'uRPUWR;>
%Ulm]DX;h5)q`uPKejN_-lUY69G%u/N:sIM3';o5t&<<(hbFBeYVfPTWG\L:j2t$:i=Na%kEm#,7:a4&icR^!2b!,%sV4eF1jZ_r>
%n,"HmQ:Ee2@"a-W&R7mo$uU_h@&S`ikW7Po_,_8Mb6NKuod&;6PK/r`i5UUn\l>D#NOp<HOR$=^8s`I<C(&ESQt1GHfuLb$;$S+F
%^_jX*IES*?"E\CN'JasPXOYp"Ug=i_6m`b]_dT4+5b$BTken_.Qc`/q&UN>$lu_KJI\Jld!c]4u6Vo)K$B[hQL(:F/d'(r[$pa"p
%L3-5E!q8fJEE@q43,'OU06o(-N"r$!]g*;Tp`'Qr&Q,-?CB9&;80?oG_9/_2TL3cW]2JJ:J;DN'OMr-IJ0n`-M-U!5kj2JaN4NFq
%Sd$nf-nkm*_Na>UnUZ76Z.#[d%@j)_i1A\o7_MpOVdN,u6p"'Gs4Bc0"f/onTGJ!/6Z%^(('V]a:^M5`0=+;@.9,!06#e)H0@k$h
%VaWdFYmN(GGn>VYAZVJaX?]f']!XUh3s#-hgH:'#Tb9>Can880(g4O'qh42QX:2[caAM,mpgRL[W-FttQ4YE2"((7ZLN+V^@"`q&
%BjJXCJMbR[FDU2I*_i1i@RK#_\HOa5O`:MQ*)KQW(r=+c&LtR$76"eTYQ3:0::iblTNhf9AMoMhM.&H#+0C5/c)^FR^__dGp,[LR
%nWd$OS8QaVWaU$)RQ)bPMbcaO&CV!8W-uRF=\=X\f(*4%9l!r:>AcqW+G;**Js"rYNp9G(3t4ePjTuF`XM]H55rqtgB_Q!R6RK<Q
%o,4-l]\fESFHNlMI?]YF55%$%9I4-UU!lG"M[X;#&8JR.%laF<>)s#/WUFD?dHG@.(7<*ob%S:u87BXmA&oqsMU_9=EU%ZWYj.Q)
%JNt=Mg^PF95ce>\)ce<L0[7qn&C&.9?)*c.NdV#%KY(EcBBZaSI/<T"O%aAtZh)^!;*s?B];U^80fo/H$]S0sFu&_?rnr*TGLF3R
%XnC/i%[hFV3^B^=mG(Z]AK,aYagtUnmb*>r>TpV%;"=XYU!nYQ'pS'"a4p`a6L[q]!J1pn1nC=45Z6;j167YlUN`BF7g4UR^t9\Y
%6ecCs)BD6b'm1,UD_4YFp'.rVFE*(jpN5O`A^F;I,u9[fFD@\monhf3l=%t!\X4qo\7;'PNe'WDr2_O>,*Y>>=c/@6#?3.m#[FH!
%3'&l&f8XTae)hFeA3k`D0_<5Ks4h%V*3lf/Eb3i@c//gf_a?m"O&R;Rc-<!I$!4tVC*1#qa=Y>*aYTc";+ei=3*qPq=KWX@(j1.a
%K'@7HX`h4\5%"e7BgG9UCj'R$1)eEo+[t6\$T&p'7.D9BnVL`t;.Ze]&RIIkMN>!5$'9uhb&Zk\#J%:hPpBDkatVoRjZLNZ-W*$(
%4mBSTB.^Rn-V4_eZ*;]>]R6P.K\UNCNYB6&H9eq=4Q.Mp_q;9/JT&m$AjdO/,gRjBi&40la)1MYr)agNSjUMqfJ,k0jTmQ;N3j_W
%4%a`r&d[`$/P#L4fLlTX*\WTcb"dpi"AoO2GaX;D*UJ5\*<etJ*(/m^N.G'Mh>hId\V6'#EZE'Nl$7pSSSjbC0SpY:fGj`fE+Q<q
%PUT\87Ker7(03oMa3$XkX9i,l9aXW=p2+\U16Ql;OW$,EZiJ\g!n<?6[p4okp`'+'3_-?6[]t.H+Zs0BdR@>jPs_njgI[.maR`=n
%Tjk/E@Kt@P>KC$1?qOTnb"`PM1O=jj5,qGY>ZqifC>#%FcCpgRl)'LcT8=s5=7eaJ4'*&uPB!M.!#2U0Tp#u\.XH-)&F*HTQt1f?
%)jp91+YPIN*'-N$'[_I^a%8Rp)\(D/IGa6d['Jcte671*cBTZbP@H046a9DG4[?SIY!bF'TM>OFJ]+B?Z8';Q!c15@JWKdiW]Uq2
%(mXVr8Z"ND"H`mVr?roYojS9?+Ga4`##1AGSqF;m%J3S767uj[ilJqljD!$qAG$\RZrt<]Oaf&=6cAT(f#-_ECmhYiU$ED;4-nDd
%4@4@bYr'GT0Neh*Bu+bG)S)NnKW%tTCdpj7jNl.(UkZ!rHl!Egjf$7A&E+GZ_7$q1h+<LsPDsisPaDM-g'W/CCF7O:)b+]3'MF8"
%'qc13:8QWmO:er(+(Ne*-"k=DeFfNC*P`9sC_i;Bs$(jK![^ug*==$r8-hd<!eUKh"`5K[l+-[8JW+21&eZE7CBP8X+np*QbV\VL
%*kH^*O;G[ara4['Z"(FX+ZB%PoB^_<cLRKY5B_Kls1o4q:2Cp5pMMAXP$io$+CKi;J"<T#FmJaImk!b<UYFF!lZC[fVlEL_X\PG1
%k(\6R!#-ouKKuE-!U>R$%WIP<_\?"39-P4,USG3*Kl%$LW@ioHBP@t]Urf6&Usbc2!]2SX!ol.k"V5S&&A+%k'`a[,d_I(GQGK).
%c45TjA"]e+lu=.1L(NbZ1R//8(sm7s'SuZ`!.Z+C]o%Y-%"j1KU2o@2R;B^M6-H>n$\D,EKB,*s&EFWC\1Z'+/5su.\.]1q(=H.C
%^5,32BY"gT$-Y8d"_Q'6<$ll]*mq/N5TWV./3%''%,`!1beBp23WmI-2)JKA")6f#9Zho1Z:eoO.AGpO3"83BRG>!@1l)TU8dIQ6
%6mIh`\sC<M)?c"1bJGA:)Cuk\7AR&:$fZL-1ts^<io>r8Z1MN1["Kd#E)[>pGM]$hLkU3'iWi:VN'fOpHH%51drsi4bL(VO:'3Ei
%!6FL3PcHtP:%`82'em-a2gBp.*Mp7[m^$_QOc&TQS29&Y[s<db1t5N6-5rK<,LD*q@C]GJ.'tg2Sbu=hR]<qPkX67!(g*:_!Eb_B
%<;-*+?Rp2LD0CUs30?+R+-7_do-g"m_+Jg\V9>GR"7hg(2?!Fr4(L^PN'R-0!<&Pl]LSOq+b^LG?'qhr[s_TW4<0js;9E,MQW60,
%cWD1Ll0._rlTcGM$CGiE8*o4A+2F:]@C`[(a.4^'`H[/.n,+>80I'D)Rp64d:(`4@WR,0@7i+pXD`\RkMDL3*=WYQ`4l8E24NV`N
%nWj?4Rh!RW0teVL#'_Unf5quO/5'5*a^bI_Y[]4Z!s!K!nLU/r!e!:`*cH'-)W[FKUjFZ\85kp1VVq!CYcZsU)miRu%8Pi[,Vecp
%9l1\*-D*^,3[2du$.'B()lc_SbZ(H@>;-9FnWPjMdZfkpJ$T/X2/=2r5[2EAp9P4RWpk?T@Ct5iJ.SOb/V='h6ScG'T^Qqp`YE$;
%)7VE#2p!$)3+@Xp07hLq2n$Bui>]-=b1,MOVJWUY'S!/<T^IZPN\A"]PIUhUBgW/l=9L/V!OjW;Jm\h]'So)2g[G>8$X.K_>jQZb
%]@[lF.KR,\&@39Rk5Z3F*`YKG",%Xk#WQ)Rg6O!jn-BtN1l:InkL0Kblat1a\u#VsRAb&B[K*"];SY"IRoiSd6Uklbp:AN/O9Fcg
%.RsDS)oKg3bAdq#bJe,S^]elNps7Dka;]Z$4CZr%*!71^U-%E#X>1<=e*MS0CJ:ncr-461G.?2ofM,7ufb)8VJAF]f_W;@]gLHT,
%r6<&4(cL*3,-#&B#U[#GQjN,Xllm(3@"+ULDmonZbo[)+!-$6r1Vk9VNf'_FPbgL5"/uUJKotl:*EAKir`g)/-(H'43B8p+P`7tm
%dKpnY`PhSZHe=snG3p.EE3ARi7#ibaAI!.2'=`e[UXHT)!K60*`Z52;hHSn]<p>^]iB)q5@@i4l'5__Ka@.+W`fhd!Wm-]>nT5HT
%)$X::LU%).9]0Wp&q2rn7^NA=B_3!qNIi#oFLXZ]EA*OVM3Wh-9f"$t^=)-?b(4:2aJR%(n0D;,U2]BJ&=?qIC<.V<V@.Zu`6a(Z
%9;GQcRZmqF364cN5[tO]7P8o,*'$(Fq5+YHGXd\QWWE8H`UbO)]b236*pU/uYCdF>&*'SdNfM.d^q8#UkcEhOKqk@0J9jT;)\\<H
%D)pAu3aPm]E.7.GfjA.VK5VSD":W^@C(^_s8WBo8he^5hF]9Mf&-9JfcUa.B_%=VL`X7B=TYK<nBh3cSJVLbrLW(:DG)sY+bp-2J
%J`fl!3:'ES>'q)#rG@ZLW/A5%!_+2kqZ4?@1^<I!%asU<kbAu\M2<;gbZOtr0RjQsO9CZ%ZGmYO7KdQ'-lKg]g"AL!#7:CH1oJME
%HCI$SX0Im,q;Hc2c1.n>9b-_brE1.2#(m_?o!UYI"'"f`XsTc?!8KE9Yt.i59OZ^lil&feS.Xm]Bd+`$5k-\q-j\`LVI\sS>R!G7
%$J0qnZ7ne!b'T8N!1,9:PNr7ef;AaHX#7/qK\OLUb+(6gMmj9@]dqG%WGD<s9cJ_.:sRn;9X>i9A9)NrZ0[6rM$027SB(?L"WSol
%JD81E=^]C'1K#r@S(#Am$1lON98:6)Q@K79"1O3i29f3Z(5H=s6'I@"!&=3f5Qpn8ZR)dZj8\ac7ZC:/f^.abYLWkhhl=R^#Qf*R
%>^d_gV[X*LU07Nt'Gfj__8H9_>iBcV["Oh:#?XD7fb<5'is5ig`ShqIofRVja_Z6KaW2[]bjGUd?lk8V3f[`l@nnR,&h029[j;q<
%kMI&S"qDo/$Ps]?,6H.("0(2"/3Q6.Bl6TpqD?Z;1*3CdeIUFf2Xro#8"(F-/hWle4HYd,4cqrU1V<f5:fI`Zf@Y&A)_E$ls*+5A
%&@%`FJL^drd`T+6%=,#Z,6`Bk`(jnc3@sXi'+5'9!Du>%bH<g.4G\W!:r<6f`[6R])Y<$N@u&pF>u3+>hOheB87<<l6-(^N(^!2j
%*F*6^l$5m].m+Gq_([Rk7*SSherM-KlpW&@'L<0-C`+-!>66#Zcr`ZY'LVQ_/9-=cme]g?O4StfNI'Bt>]0V28=-(p>FQ6a5W6-V
%oaEImiS<6)d2D)_4$9:%X#J'hi+W7DBB#0G$r"u3R<*(s!h'r)nVH46M@t%f%"+LZU5n7o0be5paRDt<!AQg<db"lA&AhFOa!J``
%h\=?LI&W>b"a0`">@WHIXt#J*pcS]K31aMOop19];,P0&@g6%\oG$[1(VD5f)op8bFhspb.XIaQpEUE-5Ma9a&IjZp</FOe]RKo<
%M3+1LcQrRl-i>7APK)^?hunpZqD^u5ITT'iX0G#k[Nk]$H33iY7$qKMEg7Em&HEMl8'7AGE(@F.W4H8/S-Er-!.]%*K/9S(JN86r
%^1(Ql@]n#A%*4<_^^T0K3PKM#lDu[Y5QSB`FCsS':`0[CC_Kt[<t)t:d$`I05fn`>Ng9t!qEQ2HV.1@0*_R5<)QkCK$rapNGn)Mf
%Piq:=\qIk@7:J@)K*&Vh9Vk0BLB+k/GPT2hJUnc#;Pon`adEl+\-P>51Fja(jD&N-(u.r-fm$hmkGQeEAR&YZd7akO'XTbS;kkt/
%A,m=()1!>V3+0V0oWu(6S/0?19>Ts^f3m"O+AWsCqArRC6J2sTYK<aG"[H!M,&ipDED9"N8MO7t_*8E@[43TOd=_^Gq//&XX:79$
%&ShIW/D1Kjr%ng#MhEj-H3*5di/jrG)GG.RX>0+Z$$O!#.1\cZnTHD-I2XXFM;bb^d7hb^!2,)B\Fe!JOC7m!NQ4k#;p'G%+pZC9
%`Dn3K=T^,_WKuI5VANUrit/bbXsIWj;:gIGJ:Jg*_RfYA`O4CM%9Qs?88I%$$pHU0ro(B(r_;i\q\bP*W10/4BaIL,0@YouC*'qd
%"?(-ho]2\lgGhHrDp>o2g8(-u-74>\]mLEKE]#K?kUfht=Nrcd>XB1GiZ]WRD2IMYpc6G`#j36I*=:`uPHaS]*.Tr-NJ8te@R%KU
%6HRK1'JR\>m05.:9X:Q2)?^8n_6I_P5fBK6"Yah+#Rm:qcDBdp!WucriWSkhH'g$N/Sp^s8TW`O9G$@o)n8V0gld?_i4L*Q#VdfX
%s%l.MFSY#1+0N.`Ls/Kc<)s@TcW"OB1@7%bdq<'MqfkcYoeQV_l8%3';L*]sXKY5\f5)EJEM15R'QLAf&;r)FbUTK2.or9tH(gj_
%.@E"+>@?A5S0k<.bpgsc?8eK="hC+/aUoBf"<J<>UkbjF1jtq>)3'Q[FD$q#ecGrNMn0c'Tp`tK^ZJ!qfGnR?U7o*V#RL3b)4)A1
%E'CO?X;QPM>K;7V%fh-Ciq?L1.eYjF__'n_G[6M&;NP1(G,:[a!4VG!Vg+^^DT]NLc4+S!IMXP+"5N^ho/BA<E#ir#c=OIN\=hfi
%.K+TrY/AC3](.][(N/0k-IV[k"dbR2iX,C[,jFfUUrU,W%^^4#dj.mF\_*SsD5g)`QoaAW$OmQjZaen#q?#0`>Eb(sh2b0?;jWf;
%D\\aI*+_Z;<m!\Dkr&pp18&/]=fA0272IQV/TKr=!h)f818&.p_5SF2$Dm1eOAM)!"t9>O<:T6ufopc-"DE^O)Y@E6BPD0=9O/LH
%b[Wo[bCK5=,-7VU87nLZBnh9YJ?$,i6OP1HJ)*D^2#X1&E)eL&<:&6A-;%*I(O%69Fu\NlndT,"UnlK*^RjL=q`>B#p)I/&A?M[M
%6G_/.h'56O5X7]UMmIX6#S@ep63Mr$VAK?.@H'$McOUo(\7Z5Uh>MjB]s6tA?$).(\3N1$5oIKp6QfFN1)b-Z7BFiJcblh!Lc28n
%M7_W`&>X"X\82%9))UuC$]<'C"@un/`IN?ZcpEgPNm5nsK!7"k,.W.^bRiCp5k4FgLV\!n3*L<>$:bZ_5]N0X$:*T%R[/q3.F.5J
%Ju-@_F8a!JI]pX(miCYhLT`f^#/h2L-/b0A_W=`OrrHj>)n]@)+7::[Mjl]=@e:5K\LS%Ti>JA/2!p_9c3-?_L,(%n,5*7%E5$1o
%l,;""'Su\I#f@5!bZ2)]***k@SAt.7.i=&\<&F[OD.<fH6Qo1>[e[!r&t`bokT'#:bf,;V#Rs@ErS.fWB=9[IBo'QT2i&GsFuk:q
%3ds8+SlGbUQST2!'7cM.RWdfA/kG-_-6Ngi18)CA1d%Ma`T93P3`E:@k/K1[g_$qo$kuWMR:fSd;P1jp`:ZnJBH\IaYFIRo#KN9q
%i3<*L%&i]sSrR1RLaMiJ.Up1L8rMG-SC9k='6bg/WFdr=X#TW-G8^A?U`'ZA.JQS-5FMn4>C[bSZp8CD\<o*KO(3.IKmcH>!m;?O
%a(H'Sa61#to5Om[SfkY*0Hr'=R7_iN0e\nprF%Cb].J"9`c]5c0`fR\4;hRpQ)e@b)L)Au]"o/k3<h_J&i-PV1JGaiP6@ai!5bFY
%(k^4)@2)6K!Bd'j*EM<sQfY#)%a#SI04@,r1^#T@q$V-PGDaWUg.W<H&RBjTT*$+S_-QEb',%kK_!!m"^iV7u/?pYZ-/^^FV=Nd8
%/qJ^<Ln6[`TOZq;i7Tpe*L,K^T<AKe/[Vd)NF,Jdn]hosJ@As'+p?7>n1ulY[:lQj_#3&?bp3@'BgDf,]7nE1652_:BEtr[\<(4)
%],YY4GQJF]+7e[e'q)$mEki?4K(*M5<+Y[j_A,<4F*YG@JH0Hh5TqJOGQFc/3!aC<qffcQhR=d>)N3D!_=<EgWjj.mX#_u.^CnsH
%?WnVq7^7_MYuFSZ_=d7CWN;+*Q`uM3A)J5<Y)DJDE19RH(RVmRGbVJOX#n;s)]l%!kZ\`g#j2F,<6MU!I)D4S-Zfn.#Hn@8_uO%D
%F`=D.eG<Kp"kl=%V.O$e]cGBo+'hCNH3RIAfsNJ`o0Wa2`P=5N_>*2KLUngP)84#+1!k."U3bqq0m.dK#^<.`@c7U*lKn;BkU>4`
%L"t.^e:lq(Ua^%[3%>D)1:8tMK@3"'gT43c_a>b<56?B5U9c*%/"uX7clBj]@9+9_KffnAdsBCG++ogQ%X"IFPV.3)!e<D1m+Y]o
%_%dU6f5"2``Bc<!n9l1)RjqcTHJ0S$Nf*-GWg[$Xl6+>4:Y4)I4Jopb:Afr09?ADt>8TFuX'7M[EUt/kPo#g#cgn9%W"'lhTs"hh
%>K")m&a34HG!a>a=Qg^S&<R/eUm.erR-S!rkq%$(=M0M`%>k2EXt[<3c*&eWF9gB>JnV5"L!XtD3Q9GQ?+EE:`/iO[A6MT]+nnqb
%cnAu$d!2^Ji<"JMJ=[1C22?OkSq[7kc\3nbOlrk<p\HSR,qd4,`-WD4(5^V44917tGKW58"Uoil3<m5eLtM=*c2_Nf&u=XPNk"(,
%5<Zch&VK=.QjN4i"M\O[rqLRa+5bN"RrLID_':'gL`t2)p]2<9nrO%bbmPt)O*O8Y<"i3)Z.S4B_K?m*4`h'-Aosp3C$(D1-SqWn
%gBb0^;`8M!dW?HF)rpl"9dJoPP;"+Va8J%mS.X9H(GHgpLamG/?,sp_Jg\tTV;$gm:^g,Xn/t`K.QK>L"cog$-kO<_nq68e#l,E.
%3F(#e^J)W5$-1O`er#)FSqY8rDM@tKkG_A!Ls'\DY]F7pNNOYEVp/#:d?#o82*#n*XbulSXn0euI;I,hnP9?8K*-]7,+V3bO_`ZQ
%j>^NI_68Rnfj&t]JkVKg6$e.rcWBV,ilke273XNNC)!!\<KWkH,7[(8n;'RO2HES*T0S'(+P]2Z`d=ga[R'!"q)'LDFOU]R%gKs1
%,-\R/C<.3:nP$3Z"L2-bMUr7#nUZ=_AFR5+%$"=\);N3R+8";a'0JWaVfB`L(las7A&KM)&8[XWf*k!N'S%,TbCgdsOYd25)"<N-
%qk4Y_ZsVZ^L8p@j)9VJ\]ad^0UQQ?i9k"&s?posk?%1>$J;uJ$:/7o#6a),(]\#8r&&Y0N9oA4uWocUq!8W!@`_4eD.!>$E(6/NT
%agb;B3\)WcKd4\h/7X!V?bM5N$"Q\&@-ABbNi4SnRTQ3+;8neI33fihBna?]3%AG4T;9Ju)T9_rc(CNb"on[,Y+MpAn5tuI;=krf
%^^M\o:8-HFN($3?2fO@WK_#;:@7\H@L<tHt+Tr3$/9E;14,?Hrh`As(El+nmN!CKkK-cZ7)De9<0NcZC[V5b9s'V$tMZg8d3>.k<
%PCa&T'(3#Sirr-S[kre&#g_2nheoZVT?/]_B$bAQ+Z'FKBhu8:UC4R4d<"S(&1/3330`C1`dC,q:N/Xf\=!X.1UIpUI_]e\8CFQ0
%B?QLFB^)30[HqaR#K6q[oF?b\MRo2IE6RBYKq:s99%?XC?ssu`]>ZW&E0DBO%lG4P:*4JoLr7>[<.e)S+Jrs-af,-3^VD[Ad^7Q+
%C)qX*Qp>7"T/0Vf2f*(:&&_0(nB01qC*F[Se'6m"Eat;=SY\TaHO@k=lj>@5ktQ0%j3O!+0nnAN2&ihV@mQ@I0(P_?=04'oJlmEP
%THEr<d9>]mQR6$=Jigo"Kj3gU3*\dY3BS.dAiM[-a_E$C`'%;70g?G(i&B-[NS(h..;O)m,Aq84I1fdrjT(()%"5(WehboY1G*Z1
%$S%UGkPE#6"%ner6[16nph9#CO6%aLqS8cRp#2"6cWro;.NIX"L9-l\=<l.LPo?.)raZ#2%h-nE_^0n_[*m=dkCI%)&*Q4s4q?BP
%L'\abn4i'ri%PFAa<DssV#2d!L].TlKAD8l"gp5)/irZ+T]?5lIKG2_CQ1A%Zp#;0AuW]&,:j%p-dk+L"pOH8^.'<BB!HAs'SmK>
%FT/:/$FGWU(/)S!9L(^=j`SX4R);nnYgh%i-j2l:(+t\W@\jI2G/^as%#ZEP5l"R^,!-]XjCtkq]*V)sEWe"\$o)l:+#."O;a;['
%PVhGi5:MZu@P\ij[9,g9C,\/-?fm76FJtX]Fc*uR[lI8K)R.kP$jbW'[GOX_lOd?u\4>Z`iBRksUDZ04i,H3*L:*0q/.`63pEhtH
%KE:U1%o'cX8W/;-j"='eI[Va5Y8%4M4V`Gf^lsQCT9r2rbE9Zh7tp2=Q0KJhfMcS:_W<_j1)TcI$O:CnQA)^^q$KK82b'SH2aAk(
%m^%Q(*4S>N1F.>hK3SBtEU`eOEEVXh1SeDb`t^AdB63@]lbP.R[ju8g!L39gj9W!/P]ds@*gcRG9nUDX5o-`#H-@&lK!=3;O:'1V
%!#uZ9^b!f#%(='6p)+'\?%Ia@/.YZL/VouQK*lAVY]s1N\M,`#Y6M4C_\K"t0gF02`8rHK%b1RD!Lj[C2]KT;F5W&BdoLAN`l-<B
%EunYs65.f^>)HqGLqEU,`oc3JJoIq?\8B=;9-lP.n-'"5"Cb\B/J>RAB$sp#\.]$WO[OOi?]f'(R655rg!g"&kY4[:4K>/MDI_mD
%rpj*;VC:i]p#BgD;$47O^AC_9gp(#U?7e8nAJSf0o!F3"n,OL9*dFgj&$SkNof*[Biua1=`&s"k(P@KL+L5N^[>QDPI:0<+ZCA]5
%Ga_<mXT>85/Yh%hRRCHtYgErFJD`fYR+EYr1`3,4>mtV<M<6n[2L4>o4A5`6#^!!s8CKJiAfm6gZ/Ot.g9M:8UMI^oh/i)J,9ibY
%).h'gpi'Os^W!92A&S5!MA`?7Cb&@,J,s+iGYj\kI8+m>gdK-bl'[Q@YQ0"1[Sh*P3FAlMMdsH6*)76'r!QZH8c"pRZ6+kjfXW56
%+K1SXknDs>c/`5ep'fbXb3%p^_0i,K0,;stPAPd&U@atC-ksda]nF1AIUoIIX)(TjObVW5j`G@/b]pj`/a&"uKs((8.TZKiiK*9G
%aW18a7oRsG)jJ(kMtmd4%hma;Z!c<rl,"-QHp"%'Njim8>*CikjRD<$i\7b0>^gM%)LcMT^/KZB0XMMP7s-!k"$.<K5USWPTP_<$
%Cb&2>ViPMb#F<]!VX9*@NB/qod`B,49XVVl<Ql'oqb(d.9,cM4Q%5ZI[1[r]!hD6')d'QUf]lF]A?(_AAoaU.MKKCj8`ESf)d_`Z
%Q#i4i63JHim5m28@VN?@Y@cLe4DB<\gAF4MOGgp9JPI4!^F@\?4j9%1-+BY>]5NS2FTc,Xe#cP9eO,D(3&Rs";b\?lZC5g+O<UaY
%0XOluBWNUmM46RLMk2hK[pG#RXOD-&Wgq2u/>jl9o9o)/Zl"7oo#6t%c?ul+dfr==GA^OMVI(6@Beiab=%hZE,P-8(G\7JM-72BN
%Ho9^!RNj;\ER^S1^;8U'Z6f$.'0gS6m"WFhNJeln-@Y.rm"^Uee&3dhgfDR!&l1@S6lV/l90CVk!OI#4U>Z8rieSqABNN:"`">]`
%d<Y/9Re,,CNA@lN3MO4`]Q6Ld%4O3\BRfGPXtVu0cBaL:dEuVIh(rYQ:e,rj=VrB;WA_=F`h$=X,JI(#%d&f5dm-qJT1n\'@<5pk
%HE'lbVi1Li7H8%'LL70""G*#$KbKl6T_5T2<-sbG79jA2Blp_FX7i/48_?TPZ'UJ-QI;H,-7gEgAkIbTH1UQGk#d<PmjAJTJu-,*
%ZH6]u:mK.-B(&]g/JDVu,CG5@AZ@k]cK'^9kt!oSkg_CH2>elEH;>:(jag=7;G@rPXCQb*Nf@)!4P]<O-;2>5FGB,UN2`:7>[m71
%4_+5AT;)3EkiZ/I`Y=WhKbeBr,"F:IC#SD/jbqY4*ZjWLe292/2t[`k>%22d79/#\0h%rUc\]j(b'Z.TP/F'_QQ4tLbL&4&&p\Ji
%D>,!`7jA:sUE,R4&_<o*hub4P@^/BlKFo)mel;5u]-4b6&JlHmaB/,4oBj3+(b=Qe3F<f!aAjI(AYP.Dl./WT3^*uReB-h.P:M^U
%?s[>WCIOOHo6PQAP_p`KCUPcO/P5$W'ZWTo/,\%/&ds])>d;E2)CUjXrT.;PrpWFRah=GEGHXP1KtgDj:1s/s&`s>QGLeXCT1O=e
%7he&"0q(33]2fpd9A+\9*?c(B`a8/+;L*;q<%*`sN2<.'T7u8%'7ocL\nHa)?&8h\7,[Dm47b)D3m.-:Qq4s\a&oS[I1bo^7?`.j
%'FZ]kXIf1*-_bQc>\$5*;`8MK,5fgI@NV.<"[^'Z?b?c"K[9Bg$A<M!]sYuSO`t*L$Q5MKM/d-C[J6O!NJ(r[fW"0*6]6l&hB2`A
%F'q+9/ER;W\O%n^.@O,kZW!XT(B3B9g7te=fjT:eR'01!d[AlYY#sMDSrBLDRn+37i=A36jK5Bgrhn7oeH0)F&"e<1@!lD[369X[
%W:o_Ca4P+BLp^II'@[qNS+_2*eAP-T7Tl.hm%a&fBC,=hpn>[GRZ)2irq+__lF'tZ)D+a%1g_Y!b2Ommd$ABUFND9PGV`WY+;enN
%WI^lRa3uER%uuI3C:YBZ(9n@?)P@goE7oCN,6CB3;]TuS_@,"2.>#0.MM$F"/XIe.L^i(L;kki*W.Q"7D!>ao?d0[Ni8XPq3]4od
%W>K&oREX1!<;Rr)^_!>+SJl#^?d,@a?^o36$^j/SCkP+N4ZYI=n:lk6Sk-b9F=a,P1t\q*hGLkOT1F17Zuc-q55)QZ5#U"ES=02B
%Ntc#90ale_q+0<\iJtctEKLk)2]jKcd,G\(3hu8.cBq\r7OV<*A0c:q_1agoj->aKB'Zl"A0baKDamWXTuBH'-Q,L88"4$7Fd5id
%P;8<.1G0n$MHl.!C7i6Y8J-[mZ`mKc1QnK69O.;=r67ci0XS>lP?jT='Sl:b3+c2[iSWkIVNWMLmu!Z51*)R$R3u!Vij11W8jt*V
%QrbS5\*Z438F,[`M&>iQ75M^5js39$1M-g)k4ac6OoeO<+IiU$BIACnO"^E),_@]^KS^hA07n.iR6VC;0JNiC/dHI5a,(X,`8F>-
%?t'Tmk$TA;'/=aOMF%(9lU\saJ9`[T_p?8hGQsW'Xlt,T8bNoA?hg$[p/\K.Rd@/)q%L<U^-_\WObi`f]/fJ[_lk`Z9Yh<@Z,.m-
%16VB%abuFq`)L-1EtbBnPrk/o7lB=!WZTLQ!4<)*(SC7gR\FZH<CO78T;k6W^P.%_Ir?Jp..]?>5@;Xs7e=THKO^j!DDIQ]%RsT'
%WCs,nRT*"]*FMRA-<2CdDGo\,`j'8V85n]q/Xb+*B%hW]g[%J)SYV>:*KE[CMp!]4,g$`Ifb'2I@j3b,Hghf?+pk*&a\mgpc$QAB
%8@o]Ha*,Zb57SJ7E%,9G4i57cNj^t#Or"AWG0CI-5GAG3ib/RN7>*O51\ebAZrjD,RiK&ULl@]-oQY*1W:!4sFn,A]7[bsmX5al(
%C'8T-;9JDkoU-af-^RT+91<k\58T+H&IY@WF$M$3S50XX)ba+L356n&S?FjbPJd2VP"'CQYH(m%8Z(Q6^+l*(#P,ufr9Oj_%![b/
%EZcI1Y]t12+4DoFEZgtoa<q5`ZTkC)IWTZ]_Ae]u-9%ZZ0.s!ZA?J`W*=k<76@Na`8fI>6TG2GA+kHAQR.hM]6&25K![Z3mqo?dG
%HD"6=<7Ael]<SMKa8GZ#RW#2g9&.7=$QA@H;Y,%#_F`aCS!#a?]qjq4*-#<!j.**t/S!mIY.00&HFYX'@Q$GOg2\`O.cdU6b.6l)
%;E8#&$bm^G!+TO<9`g8FJ2%?aL)sfK]02!+G)P=V\`(l.deDoPVQ+K>WZ"tbm*I2Q[)3D,=!7O#(:018F?!YcR&<^-&8]1C-6isT
%YAK*=JlloIGo8`F9]e)u#F=QEAIi8GSiKZFdiOh=:b#$2@<)j=*bq_D)2D5R6uP:E8IXhI%+js9"J(^K;\F1EJkdmB/eDK$5pm_)
%U9UUAk`c4@P+Y_dF@q-[8^Jmm3r(lun$4p9:g0(-2-5G>F#P]%Z*`bKS`18[S)7;qc\-gW;B;Y3--6"b%MN8=0rYWrTpA;EWl%5,
%UR5#9RG[HFMOZaK)a.HI=8/Q_mGe!t<l.F.Qp_h46?U78)(297\mH=F(@#ne_pe5Oj/.`u&oEI\NdZbmkffQ]B:CLgSYTZ-Q"M$W
%:M3>@P8C.mMgP?FC9tlVGU:<`@VT;(0<(>gOm)^$$i_F0m)]O$CaV<bIh>0"7LTMkF<W'k+tbXT1ceg^<FOdLF4k59IKgFiPHnXN
%*V#Q]Ls08/kI!h.D<l;t:6=JA7#BA0#H(ETe[;+HolrY>-/4M?n!'EnN!McicaD(mPfJOG4#ONSbmH\F#hE/aNO;;EMI9>+d%^5$
%1.f%S,UAS,A7?@<Z'18CN3$uBhM#JaN$o"S,U&R$,h(:Z4g4h_DHj"a,ZD0?8Ot0<+W55;X6D$H7Z#;Js'3RkE]R,n(N(bb,Gab6
%mU<"b4KKb0bfjdA<G.%#50=Nt7l\B4ic8hH=;n@)X-kjHm=:**bn&kC;+e.t3d#29C+=W$XH@TN\"fJ*D^ni47.?@T\ohb`&W3:t
%V^D*M&UQ(OC<Cs6W`\D'A[$Ge5\j]WcVd^#?_C@M75/XPnIW4*jjHPM*Ca7WC0X?(Y9p#<$@OcM@T)FU["QrH>ARqiSZfS]I3"\)
%O%^;0bf;M3)TAn<M&/@jCC__6Gu!,NSl\d#9qB%UISkh8[m[t:6]4I'?\AI!-HXRm!fjXeZB1U1[#,mCrm[ep>D)P9bQ`e\DiZm'
%W:L#^9K<XiT0[[ic3"\LFQT;DECCOB1iYqt=#=nc]@:mp>gY0C7DkU>M(:Xe>g[hh5aXO+o>MRV?[*pS^1d:]-GF0QM^H/Oieo.t
%kZg2cf)520UC8_l^1a].n%@%=6]-jfHE^AkNg8'*jE'=>c9Gr`I_T<(?C*p6<j3_oGJD"A@S'jlc:a4oe8A19-#U+Si[3e\=O:X)
%"FVXdi9Z]/ktE)35V-UB%en3mKllJ@(57<3PNbcTH?+(kph?RNZ4J1pc^T-9-_nAb5&NG7g?<"SiH>3Z`cAg_>aG2hal3s:5(h@-
%KpIuEQtm:s`:CMcQJZOWEaG43;;[TX2k^iZ:!bU,(rs[l'I5*BaTZD*)a`#s,HU:aWR41`_rbnb*Q@.OFR&i[Eh4=#'e@gV]=5ca
%JgIfF4#PUYBmQ&Dnn:(JMn#Fr?6Q^_\*4jV#X;&JqstJ";%@>0LJG)S'eT$\_O;LZ(g!k*rY7$)/p6E_.6!Wl,%QKOTm&%DK+L@\
%g(;k8M.P?lQK<5Fr>di_o$"DV::o*FE]X[i4Lu\:hm6gf%Blsskj9`E9?#\.L?nS-9X8OnaV'L_Z,gNHa=uN=Yr9_$A%fh"17R08
%nRmI0R2d#b^B=kHG)j"&Armf6g3/A>,)dq%YW1?&=V9NA5MDuK?pn0Leu2<rY/#jP:2?p+RR\CoHn%%#\<*o^9BY'?M(r&Jl#OL!
%5*:coetPPMGJ@7=M)(*a\mhCm,HOa9P];@6MMX*K/C`^SLSs>(-b;:b`GsJJEK%^]0;FM^a`TXD7=8-K:8s$qJ'@e!?.01fa2;.C
%&A@:Oge<S]W#XKY;]<:FhN^*&MBV-Ta<o=<?2,loERG5`U@S=&I1q^hA#EZY0IaGkOm\$`>22\q=5#%8c&PikX9VoWQ1s2XNLtH`
%caMLEE>^U4AeV*0ef3J[N(Z1#hYC7!k&eSl3\n4Y*P!TU8Z<<^!\i$hW&&r5j)`uYk7]Pf"7s'.I?K69rGlFPN#3@.+qH=(7G>7g
%1G'@#g0%nMGC7TY?e#V_mEfOL]H^eOReTXeXaW,j&n0n^'XcJVn4*_*(@HtqQ47s$YS>eG<QsfjV>-In%%)&L<B7BfE+d%>h8P!"
%R3i(64.=qlSM.K,J"W;a<^t!>Ju/qM_mJd-\/9qK]q#k8:_"H)kq[UL?qq?YBt-VheT"feOSE.g\lFs$gZ_V`8I?ZUO`'Qp?(-(M
%HSI&-9LiM,J<&Dc.deN`BSi]p%e%`'jbr[_bEgpAM0S6F_^?g$8d.149U@[h;jD4CQDhs"j3*`^_3_k)#A,h63XPi?9toFV@)j!\
%fq[>N=B2Z&gS+ShQLm4uY,>O\ckY/S]Td#AXtii^G>blEHO9b4Pc*4>!:?$8WB(2d.G`Kq#rho%>g#]!QKq04+U7[=Wb4?n,d+8H
%1rjbAO->-b2MPAM/_*D&[YpM!\<Sgk7oSKh=fS$u<6nQTg&uAFNS7"XL*JVu@W4,7W1"Yji_P]5ROQQZSJn/`1*+V*b]WMN0_^V.
%5PEl="O>+=A*%ej:TR=1[5TMIC.d#IA"B]-Y=I/#V<YYNn[2qXp(QkEG46Z-2:RlXOXKj;VNrtg_c$8J2Pj(^Ph@M31,\1?7'J`r
%fJ`*)h$pZ+(0U/+9V=J8,MOEKhtH;\b&^iUl(?PU9ufsGL8N@rNrj\&pYumc-CGt-FOcW7qMZu`AE$TZ1H<]qWbjM5Wp6n_,id<X
%9*0-'-;3cq140?Fh":rl1(r2ZakSpXi,KA@C#bQm%[1@;[b)cfSEr5kFVOXkPheHmmMeH]!-38#YmC+91,p5_KZ'K,l#AJ?dl,Q`
%Sm*nSBi.>X9\hE[_8qAs3G)2Z-6sH=&I]_C!Lc;d66h*mn:H[bBdOETUk?n4d+q>,?I@MN\&c@,neba\6CX+cCfP9.9f#\%7ofj3
%(l"8Q/Ma!mh,H_+@ph7d:I@(pp/3ale&[ErlkW;?lOF!!Fa#$9;e2DM<]t$YY1e&.JTl7k[0'265Hu?`*E\ZD*X24)^f5W[6j/m3
%B%$Ygq+AC=^lN4;TL=eRiCU`pM.5e2E[XX@L.PpRkC<X)$mO8BPIk?O4k#SQ6a^kpjdH6'iFrMjnVjcGXH[FF+G!dY0XQClp:DH[
%"f_QoAoJ(&B^I%GPiWeUUIKLqW1/q!'^k!)O1p%q&l7cFTH$!`^TTdeXNYG+Wa:#Tm3uM;)#K+hRO]3K'/QI_/^o?c")(l?4eaES
%rM<C8cuaUH!`(nUnl]kOY!&N2,D>oIjf3t@/?:!.FhX9_NM@ioP-UuB<QQ\BV;oP7VGkV?For42#Qq*Bi.aOn-IkR(0I-'419j8s
%0g5<kfn>>6QR:9b>cb-V=g]3]`cctH`GTW6faVg4]>8>n2n5RK#,@UBi-!ak0K-^q1C1<CRt9c2e$4_?Cgm8T&hTSh?*9^AVAb^2
%U4GoCC/g`t]4u%s]+[8+-%+!t"uZ&5Qj/T)^=OX=[N8jVU7808rR[ncZ*I7C&RKoFc*g<DI5`q5A.9hhLA^>Fmm_+XVp=iD3V1$F
%QKQpeX+CTt'\"0;_W2*2)$h"II,Knb^JMOo$Z%<8NPqp^OBE0B;dub1/_-7#;]s;m9aY)k-QAEA2>ei,W=9%9[3rcZV*CrJB5>ns
%#7(/C*>F?#2@8mj\a&bE/p4Vd5(]t+fmn\%;i[_QP61T[[LCC,V,Q>[\ef&H&td)2ZliNYLbpdo!Y/t\Ka5e7/b1\pFB3nr!MgQ[
%K&t!]BG0#'o7.GT0DWG6Cp,p\!VW!a5A:0o*pe3EaX>?`<2u2m@[e3Pc(o?PQo&(p$S"(^]i1e&m4]Wa"K\"JKZ!"q:K(f*i':J3
%D:cuL#DtNOoZE04aF(&uAq<[E(>ur<\lqfE(b`s>rSrkH),7Fq86cug?8S"q%o+f9$hurJ>UJM,dm.CI*GH'&.O[@l`<eRVe6(]?
%MCi'Kp7j0J1gFLV%+E53TX;WOXuX_=ZQ,1_I'-2pb'$ltJkR,kq1rAO$l6#j>Lc_n$[WA':3<&E5n1X;OfuVm[0V<hK[KZRE$bTF
%5[EB9R#IX;.4#eS%[3<T4p:p#JrGhmo9HdjNJTuO^]^cO(eV\K(nbs,=B5%]8QUqXYD7"I5GslP!pL5FbI_HT&K9?[OY>cRMgnTP
%Z9MW'-NZeonfd>(PG3f-=F.?&;E8h<5jfC<"uB`:&<q3;d7o<Mc_9kEN<$m8Z9MWO$Vc?G*i3R&-"nu<9lF&@PJ@[q>&r3$5-*N=
%>AbH"](MA<GI7r]DL?<s%DVMM]AE4@\%JtdpQk,)q"e2&Dgpo6J+pLo*rGl55P`ZE*SmPgnB-=[n,0@bs3nIWrJ*W8pM^)\VuQD6
%\SWht^@!l!s5:)ppmn=THh#)<T)R$qJ+9,q^9mrJZgZQ8s2G$6p5bgBjY*6Ql<B<tia%i(ec>W*rpenB^u%?TN?::Yj:Auppo!!G
%VNFr`AC')"qt5/_jDQ.=LOXR@YQ*s[-V"B'TPMcB\R0^TgY_hP\,GHofBk8pOTsCCA]O54Tj<<=]'2r5=YS+=Y^f<BN,sp8"p4IC
%iO0Nq&R%>hZ=E2!qbJ]WL-\1=m1F)?q=`$p6Q=u[d]6X79a.8bI.:l&>AI4*.NZcuX7bt56@Nr1%u'+tnA0JU9J:4sKbAX+Sht=#
%c'IR.AKB/Vfk!fm.=MHa>ruG#WPM&&4;('98^@_0hR^BNFtV[]qfhb_D&_,ge.<gR**.mi@B"Y'2JE48er9Rl.cC%65oe[dnr@i$
%bG8A9=4@,Tk1j[GSTRP"1O7I'kAs)E%#LBX_Iept=WqUAka=>/F%Xb8W&bC[7&&tRd1_\CdnEPAW]EIB$`Z6Y:G]"39i3K6SL0,A
%\s]?h',('c,_c&9)a.hV,tZ3+q';TnPC/P>Cjilhc#oq(P*"2edr"5k2gZrY6<3c,],dfL+[$jAWWbO+TrK\-VjXQHoUIh>,11HM
%W1!oRF%Xuil'VprAkpQ$&iRA?b`K'>,:4%KZ]''Ypk5&f"Uc*;IJ,\nF8"8pgNFdCcTQ4:OpdS=cNQte?Zb]r$X7b)k)5R4I+cZC
%Y$SO$lDmt"lB:7%(7e*ie%GMPb:gPTD6N2AhQg_!CSoZ5.kb&6\4N"j$dW+km':DEE-CStm7;,2Cinb-J_aQ'orB\k>oN?;E;"Pn
%XB9UtGO+59l[S)KGJE<(ms`;]hKWl'i%=@+X&`JEhV#;"(7`'Oq%`4ch++K[rPp#Yld%]ig!;kYRD8R9T=jJapDr,XXLhs;U7*,2
%c<bnGe\1p*Q%/\)^\HTN^[^.Ks4b<elZ^,>e]0oGM>+a[^,u4=YJ+[iTEhi2V<uF=iP@bYr',]2aWLQ\R:i.?k3"sWlJKAJ`97-t
%_)LFuBr_:u#X'!+dYEjsj[9'o'Ari;ci<;I0>9h<0E1NrkC39Fmlg48+*u,X+aqm05#ht+T""W4D.qr'*e*H[:]B_V?_2T>(&E4O
%e4[Q(rb##Ul`l4pDdl8LHMMhG<t!?fi/6As7t9uk?i8d0cTuX51[+GRkFV\0(I._B7sFW4EPXXCDu_E>p#k3&n/&k>PNQ<DS$P:3
%^\%G"^Al0-hid;4[t5-#iOR-43Hr0q6]ZZa-SNuXV`eA]anHkRcu0o0Y$QGB!qq.;DqKKqK7Ep'Vk8I<[Q3aGddp7ao.tkugp-jA
%750T&k:XI%3W**Rr5sLQpX74o\'3#K4nkTKo^Oj]e5n8R;(Pson_,"[#=&+!TDc'U*i/';5Q1;Rh_hiB=\`WS'OB;%s7IK4nrs+(
%O<@$BF8u77T,cVA6YIYaQE2oMq`CGHqN$-RQltU3l@g=.ob28V^$etaT=nXK3>Yr^Afga>GCTU$ZNlRhr:6cCr0t/82HMM^%SO"^
%4SnJ9^]-u+MT@#Kr:tP$o8\cV'j3WH@F^?In+l=b4km!S9@*P%U[K8[EqN>e@Jojaf;?Hls7Y.?N8:un8r(akrqHm_Zl_YcUoUtd
%=o-a9ZP465XM[+`drHH1dg@URpaq!ec(Fp>kt7.nqh`(,B:o4(e:BP@r7)lPJ#XqNSU19*?[_\Y#?&>UKNg*4^O,5J?hhID9keq8
%`Fj\iKb$lEL(+1\@JR;ijW8[-)aAeFaWh)[rV.=m4HR2>>$u8Vf.5A0?iSL55Bu>0L)]-;QX>.&#EOAuf8%m,QGBA(5^(MCD.=+S
%p"+Zf?OaL"b:ihG&&7hi%ub@0F"uLFB9A$VWU;kId%fKI\kZomZ17Iq++<AJ5'80<1IR7/Uhi6mV@S18HTuBrAq'Zk07<OhLGp_"
%Td3i]cM<h#%$&'`iQ&^V"<$plK'^+15Q$hp_4F<GkCO+AajQHRh+-ArE@*/Bij)I<b)a=)kjHsCV7p-,_GpbJr:a!7mtX,UmY,#^
%==]>18[L8CIGlZ@MYk^_nXY/ZlDI&,#K4<elG>ut$K=CH;!u!bc0tVLB-.*<2o#6nru+ib(G;jh5tki1^@+ebqNF_Q%FJ=\<L-I=
%mO\[aNkOs7ms'%<V9%3TV5r25>B_/K4H^Z.[8FQk%Tmnr8nEDX1j`HGcFYW2ZM]ke&_l:0p8.rZZ=)WOk:Sff=skJP'@oV)5@MbX
%dAa[-,pb%h1rYn/`S5u'*Km5g=\]koH2RuXGbLuC$a/%mDY%rb/hu%N<M)pUZ;lfh_/`JS"d^P50DH2$PGrj<^S>LfDD8E0l-5aL
%l-?W'hFt+uP!9F,QD%DTd[U2)!+HDjT4-0;Fk='7OPej@chQ69I-:[no?`,.]f0J_GC8Ie:I"m=9;bOuo]#I<s7=:f51[0c]mot1
%VbbFWl-rX=s4BD;5&]f(J,X`,c91c`YP`D3a-@bD8RpTVX.OcWW_&i*QX4LVk?#EEl-#'5<PI8DNZi`IM^KG9q8ZNaL][QJrNfZl
%LHXsJ`95KR?`jOpm@W,,+g^\Lo$!0n_b20Lr9@?Z5:CZ#?aKF)rVT;[oGR[$a?I@bm_,@D4+80Xe$$KK_bM::e\3p@r9.ugh:G!f
%q:,ipkFLK'FSJVGqZ$>l5PTVZ:/AQgFaAOYk-"_Hs$s0>#K!Soqn2\8lh!EZ:EEr@%nrbIWG-MOT;Sg?#Gs5&3"ZZi=XTa180!2=
%qpm1.pG?OSHiH)mV^G;7Ho1apr8Q%A'>FE8TfYF5!-ZM>Vsg8K6:a629ZTCns.M*_-GjZq024uhmgl#te`TM,=ItfV65[!*MpLMH
%:1kScU!W:MlLCMK!*.LNcc]ZVG#n"nj?L)%f#qE8Ud1t4-2PelW`<d2=^QQMBqLa+fM'!9pXmf\o_J%W>A_gOXL!pNplurO5OF.H
%ro8?0g,cdR5Q(2Ha>2eP++<t2*lthU69k9iIIsR954e\*Idr?ZJ,\M155M^LL=fY>hu0>E^&S'"J);@HDYn'gi?u1L##9jnlLL?H
%GPTHZJf"=MDk8h*W3sR;SgB/\'pJ`K=s_f09;.('FOP&+:f2:3\j`3BJ,:Nbk_3N9c7u#!LLN^R8%RG-%;Q1)#<$`"?Xp:nO=q'L
%L?sCu]P=DDFS`Z8OGAGr(5QJ:2CEn8S9s,P`J`&,J+;Mek<[%gH+V&Y?a+ABKbn(*I/21uc<oA&m=M[j?+a_4Kbn+%ij)WkG1haG
%/m?!]r'fd,LdE^VkIgDQ??jS'Q`n'mb,_\VEoe%&?Ztsn9@#ikS:u(p(G/d5nRYd,H1e1QY>pg&Y??#@Q)*fQ-&ZN,/i\Uj*3[$O
%)WghGCWL/]ou]-nZcM/e_6E9OUuCE:?)+K-ZYk1%q5dr4k'CUhQ'[]3JV`R-F3e1t%Bj!BY%QdlhVR*`Rr7Fm\)t8;Y.>UIT*qK.
%04&tpX00+tqR,WJDG'T<DWsf2\m[a9HKD1[?7J*fiOMT6]PQ]0ldkcG9_E,25sDm2f=R/%?+'7/$dTV[!TbVo?`gD4^G2SM#07%m
%1itTDROVBG:66Zr$dLp8_TU$,fA4fSlD@8YMsE?gWN3]kXLnJ#Pq//Y0_rTW0";`pp2'#HL.&n(T'P%+f!gJY^$8T6/NI_mT;"bI
%0=bO,6(-.0bOIL.H1#:jYmc5+m<)K;+WaG#>eX\/265>I"I*lnHfL)i[WjDjRbC:S^MNF#U?,rf?FtMHGrVHB%7sKMeC=@RY$VWk
%MO#q=\`MDE[&'T46<@N8V:77_:."-/+mE6Tai^Jj?Zj=6@dIWk)U9]RZ\Qih"h:),m&qUd2HcfuQCiXZXsSGlMCX;EDY`UIajS/f
%d,XI](L0@rNpr2]GU^&*B.`3kM3fCH:Din2B\JCB8XOD_on8S`-7B$J_reIj4TF.$f;u`<npKo'NBQUZ>^n?aGs\@74VjWqp]Am.
%Cld+^fD"&c5!A5`XsTXuMA6q6&D2#BjKS8#dWF$If<&AcQ@.8b^@#11iCLl*_/2l8?F\up.nNt,3q?.N>m87RZsi?1agm<_=FMu\
%&3+41qPl'L\9u97YhSJ3'>_89Lms<Z<4`!b.k\U71=D0gVFE>"MRk*,QX>!b`KshMnO46H>M<'/&IQfDGEKtE=M3kQEuIS1hK6S#
%deLID9[:)4b*^b"G+3*r3,H%EbWgq9>\BmfWQ%bMX6DFJeX3aE>NEUT,FI26!F!gu2/;5u]W<K.`HlO(kL-[Qc.&E_?c,2kN^kX6
%=(b!rCo%NLj07No@.d\Pc(W\;LfrK**g\%:Z16V6CUduL0qft+349Pe.fkb:DWgn9GVF=K"BsDgFaF0H+HW)WJmbR_1h7\FrB+W%
%Z]pJ;CD%84f-$*Eg=RnK)ZbaPA:K?=MJ^n67AKX@CY'3td^)ubV!b.=PhrOSLC`6ekJ>d:hR_s_Mrii^/,%7MZBHYBru8`Cq@f(G
%4*FfZ0(V/Bg31O3nc/-p+2%(@msjdJ]`%jk5(<CR)mT:gSq4LGDg:2g+8PNCIcQVerV<)!pOV3MhDrrhPl5pYjuXpHpoY/,q56IW
%J%kQOs7?'$qrA">q1ccRhGs3g,rb0aT6TZhTDZnL^@Epas8(?]r7Io3n^-`r8FO3BcG_*`d+I[Aq7lq'kPk!Y^@g=NI-YQTqWqSf
%krW6:2Pe`_?(qhjIf1::qH'<fdau5/SSs#LT>10b?[hJb^RjK#0'V&<cd_F]n])^Hr0O#Mg=Mqkdc^Z(UC[@te32Q5fIUColl5h?
%DgUA35P=cCJ*aGds8Dusa<1HMYDqqUYN-p3ZhZIg-f4cm%t*H%J,,G'r5ecmrEI=Jq_kWaM?CTDg3n5*f7*=.n+jjcI*^PsoAn<2
%D_\Hc-gRjlf6Fn<AkGuL:/7'0GMM2Z#u!1Lr45U,GOIV4@,EP?2I0D!8nX^&in?9UeucJp7@TPPqahLLCs)7G'ns:=`T+@bn\?D)
%U"1ch;tJ2>@QK$LVGS@k@qK^$3g?%$G1I]`2Ur])FZ2_FDqh+)S#Vbg`pW["V>%k5k/ioYE^tY6p5W*mj^YjfO]ulSO0DYe/[V_L
%.<U/IcS>bfBr]?,Mm=/;Q-'c0ad6gX6E0$VVUb@:\>,cRZrobmWO%?%Sirg:U111$M#PiWGJsEfBHnk,72ms+/_\i#d+B:P=Dh3F
%;G@r`\K`5jO6dc1,&FQn%C"sf'=l=$N&oT9.-re=UKAuqL>fNhb!1NQ[Ok/59+bp;INOYpm7Pp/OKh0r'C.]A";<Y3=&55\_%FTi
%1#Y:9j3l-275<b\(R?KN70)(]$nK[AWm>FKVZkF>5bp]1Wb$-M7,)Yp)6Kb".E>mTk62:raA$.i=Df[E-D>91%j=<m]#mpfTIqYk
%gK%"'aAe^2^30ps4sS:%<`&FN4@n#AhnAde)itHHodDht*=QC)b;KaO7X\E>LGI1*AFJ20PV'?&F\_G[L>#(;LdMBM-d^Y5mb!Qp
%],,tT_bgl,.8*T`)jH,KK*m?Fb$o;EZ/?>4LAs-2@MicJcOk!nIj$9Zg4lG"X--n9RlMt\=XRVF8=BhoZUi<AO>1g&As\Hj'/LG8
%9S8_C,9mgUF%o+p@SRFOD2C9DA@*KAoTR[aQqidk<Ks$(:%^QYLQ]!TWNo-_OE";[;3H<i:\%(@alc@mFHnIR.&m#aM:pI6(3N^S
%4.W+ATb#cf@[^/7RYb`E`p"bG/K(IAR#kk&2)167QoecS6,p"T1D:[=OdK8p@j^il/cjFoC3FPK=KkVLg8(f&=EsQ!jXVtFT,#Nc
%\#:;KQ!#_HJ((NHpX.=D>Am\pq1X`A0,!d#_F6!+DB5<ni5;2FT+=.?Z2_i0Q8ZtB4aZGd"8N0crohu6j!k!'O0:eEZ+&TGHYETS
%B.rY_l[_R?roDC33;#',S9j.,s7qoj('h!LH?NTS%JN!W`)A=ZP3_)>o(#H"Icp/@\>uO)3Ag`N^H>G%!pJ`Q4S?W[pM:*lB8rO#
%F=HgH;pYBb#6N.S1^<TuP3+o#EMs83p9\L,Rm2#Hoo"&(T1.Ahoh^RdV"lfB4>=!kd;nr<JHqckVWC7p;boQ>?alD'+Bl-1s2\-@
%D`tl+_Dg>XSK_EciRS7Jr^-2p:^m0KO6"moj_%par37X(?)W56Ks*_FotlDq/QfZ7imFC+^&E?Cac?m<IeHnPQJ^2`&2Gh%HZW`q
%iWT]kh"p"0BRd?-8@`I1Jq]QZHhaQOpM`q,a+nS=Z&l?l7$uOY5P=N[9-^hC7+\g.F@Va_8FmjB/RS>LB8^:P6h8@B:]KOmQ"Pm5
%5p1Mf`PR`7c,o*pkNOnG@B7f35ka=5pO&_nns>s`gN^QoF_s&!/&1l)#Ob+od<=!2HKtM_p7h=r-W!'u$skDO)\Z6]A0rUT#XVlt
%8b0AgOZt1'I5*-\rSN%dfi*%DbaJh,lN`:hAE*S'Ct`,S/6m:2n(gBsr9)NnB=`aQIBpEC=hrP:L]?qO9MZ6@p$m5_=)(\<hDB>Y
%aE/QPJ&>Jp-qmg/CrI,_^G=X!8f=ti.pR;-f%Y5+VD^a;MHl/0&7\S?#'i$=h2t4V%J`D#Ed;n,0&;.]QKj,+-fpbb!kG\(U%GYT
%-@]a<m<L/(Zp!t[2sccC)&g+jX?dISUg=r..T1M`0n'_LO<LWW<eJ0Igf?;EY"4nLGMG.YYc$*'1hXufV"DV)rb\(IeAV>a2%>O\
%1TAK+>@*h.=i$*-./;!XpkU4)c]"&irq+EZ$1k'-_G)U;QQn'*ga>*4ICGKAqfA0'3D13[rn`ZpqtB4$Kfs.%o)uZ,0X,EG:;0(*
%5WUInX\k*/R>p1ja[5EO:I;Dc<_%T\n!'GcWo/fb[6XH"-p1&/Uh/g,X)I/^#/847#FfOJ!ROIWR`XGS:);+j\TO>Lj;5$+)n:'.
%@uJ*lgd`hZm.%_E!Zgi"I`]aQkGCqn[;$c.JR#qcPkpB91&5MK`m68DFhY"#]X8dK!@W^<aF%fOhl<Os"k1KXcVTl4oQGG]4p=qu
%?MXDpi;6<<)=g`$c7QJ'n=>mkH]#80[I&G@\#f<K:]KL<<a%VrP;ACh.FAuTc7T?F(W3C2\*^i)hc^3@ofFONmD%J$[fPAFO2'q1
%GPmMK\%m4JT%CaMXoJ?B-@ET%k1AF5hiUtjXS3/_hKVE)Y]Idf5pgDrl`6.sWr6?e)N*OA^5c[YB;26T+D.FI:A8n73hsT`Mb>q:
%PU:FYpLn<Ed\PghU';DI<DV.-\BnYfY,cVR4D!9Y@tN$8CDL'5#*r&sb;W`7mYEY<<J(IG^`2+4j3W\e0&04+PbB3>*"^XH"sA\b
%<Riq.'c\hf\1WP8:=2'C6T9)kG6rV2Q>T7cE4D2h9XO%'_MK.KPOTcE,NTfSh$S%t1iU`pd#PCPc"dIni,LW[1q(s:*h]jU4:b<\
%$bc+7o+aeR;i^+jC\^`Je.%`t%9X5IDQWd)Tc,nY>[8ZDk>2VZAoJ(&W)toEZg/\"Rd=ChO7qPK8,.=t_1RdYjhFQ+YO*fk"2\<A
%qCQp/l/$SomWB>GB:0gr3VH-O>6;8B^4oJ_L.bP+Anhb<Wa'c^S&0,%G14KP#VP'I=?=,)%#ef/]#*Ua209>HbI.OE,VfOl";c&W
%1[#D_0Z@i_>R[PEC]Lh@[UgC85UT!48,"_\S899I\+nus0f62r2'N>8O/k"%r5!n1%$J4kA99/X%B/3@lWiK6WlJNN1MS)(M'M"r
%l`MXn@AYm!FICddD3m-BHB+0M3h?>OZucHPl@rmH(_H-3f9o>WD&An/ag5!<",VkIZWXLAa73Fs6e1tuBZ(\I$J+fJS^!qm=j0Pb
%;l[A`OCN7&T"@kKfHlF,O<58A_GXT9E=`<Z0rsQO4rkLZ&VA4D0MIK-R*>.ITNDNF15oUN=A.3'k(KaK$tp<"U?QJG4N!JCK5aHa
%+tY?b6R7D[1&^)dr=T5o7#;0P5+#$Ca.kO.fpal9W/da#S-5ibl8AgN.>Y!3431A]pQCs8B\=%S7]81u!B-LkHPj9Q:BRi!:?B0U
%EmWGn:"<bsc$!i0KL']QlHR.u'aOimQJ]6^aaW4HTr/m$$"XV=fb%\E_8\g!&@@1'=Z&I=&.E#5%5\YW"Vg^8cX@FMm=3G+]5XJ[
%:;d?>7)%bFf;)mWN/kp"VQAt``P;qk2l+Htl#fX3BMG&(PRf#rk_AEH1PDeX_mQ#me3Q58MhgXA/Ek/?0m0KfoqL6o*uY_KRdMR5
%kCLTCDR^_13.uBFVkp,BF6R^W]Rb6hj'8M$+=-Y"X4j<]/?&CO59$cCG72K<@3EruCho_Z13Ce!>2R[\Ep[!^heglo(E?mM;$X[j
%%+iJk2/LaWD'X;%C%+8Rp:&?Cg*M>FZT7&*&:kX`(muI5iK]-S/3egM+*iOB)]Yf'[`=!/A7R)G*$RKsO7OfG"=lu.U]qDMN2*B:
%dW!V=>#[@WH.<#T!@:[5Qn1rHZV"dk4df4q9%dIr#mk/VBou4ME($U7Dj7OGr)INtZ64H<%Um+/S=>8>=?#=D55(FPLAYEDf<4'^
%f<YThY@f&thN6h;nn&me9?:mt)=i9Vh[p<@:AlLYBKGAlG>fRK+gfmfBfU$k&u)X+IAk/h`jLg)"bNdH&?`;)Tq1ndjfX=N#_NN6
%QU/.X1QXq^LdlCj9ARf['&hE1M(EBR5`$hIlIWd`?b/9^RP/8oAS$*9?d3HGMgf?sCe:\<=+",d8WtV)EkbFL#+;46KmQO[cLssX
%f<[#G@'_<k0!TJ?%:'tmT&AddT#scLSLf_,IF#2nMcmNh9q<R9K94V@(oKElTl[TL_3gIs,`ZL3D?=eh1hI[F@+$edNRllp-E!nc
%PEYUPjJrk6dTmouTI)#?:h1JeAr&NV2)^hP$pStPe"]4j&A$h6!,)E90!9nN"GIpdbZ.U'`-FBsE!T2V4]nOH(J?5FDQ3oub,0'f
%I"G>8d?sOjW@jY_NS0\`Ct&#.5iNH@/]K5`Gc9(,8&o.HZ02M'F."+])4'^pGqRpii6/sI4-q[f_7aSfo?\,QR0VW(S8E=4k"o(2
%5Fl']VC"8e7(OC?Ch:quK[Ul\H6qPB:n1j[)c"-g\=AHDA^-1c)n629-sNo)fFA*"rR5kL(Y)*VYQm"n*rm0;C`@=6RNBr@41&7i
%cZsa81R$)(L,ZI+a,NfY9lNHP`cRgjnhFUG#q$+5Hj76B-YG6geU5r:mtpHde8$s<A?3Cpb30n\mJ$l<engjG$=n=ID*DgN@dB"0
%Vgcf_I#_pq@1Bo8J9;Xs=gVA)AaW=>L;uq<MkXX!;EM!.B4V#\<#Q<<=LWB\I0#jT#a:&\^.X"J>TTs>+ISmhSr'DSNBg9mqrg>!
%-,]OB,PD25[9N_h*MgMkI15amNk4\6Wa]Jg:q?==&JRcgA+F".h*AimeMPa:i&EP*(%=mmBfHX*$E<dH\r`AUHXUuEHg/)!DQ5h]
%i&HJUT)p7-#\6[Uq5To*5IdBXfLsP#fL_8,MXq\*n;NgU/eR/D*6DlB+K%LBo*Es)XA\RN'%-Q^-d`KmC5H>tYs1&OD;@=YWKn$R
%Vn;+0*V:V>8obTR3m52a6IrP,;h>O:Cj*_hQs=bW4seM4F]Ht[Gh-sD*eqqMRr"pJQSFGjK4di[l_!GU$4M6FL2b_OiD2WF^fX`C
%#L&Ch`It!Jrf^qTiW'"Z_R_iC`.Mc4?2/kU`cd'63>PO?;uqo9#G'N9_5S7ek@0n']6K(q8Br&61T]n/D$-&qpt@D_EPc/RP:!$r
%>f.7]5Z?C6ajl[^AMqF`cne!1cFVNWs)*o:2Q)=%#LXh+KXDSsdVFRQ]>QZQp4c&;L-+c"J"d/86&(`H\^?2]_dJj*!1N6X'f>#G
%K*_^SSl-_og]t-+*?0U<L*j_ST3Hsd>Yb_ME@dTMrl^AoJV#e7fn\TiL74'@Lu&&Dptdu+gH[.4@g=9q>-7d^iWrFkbSc9?feu6r
%n/i'"FLUspLF*(N]eFk/84@K_rX:?P!HtY\L3stG*`3Z19JgRoepZIfFun<HX:LiDC;bsHdt];7YWb,4j-]61^sP@YA#p&@@G<-Q
%dA@:J6Wg'IqWpKLK*Ru6IjTE$VJYU1ZV=<gMmP'f^J&QU:t*#7etBe%E-!]QNOD?@nIBP+h9V=m6th`&KLBlHL5lUR.8Wg/HncVs
%ZKR3oW$6n"+%u93=uVtdOMUL(Q.T(f'b6O&B3BB<_3TjkaG5CCTha$4/Y)T\/4ToC<t.&H(++UB3i'[)[KPYH_BYo\;fE^?KX-5,
%jophXLQ=!Yi<:8M"$(3<1W%+5L74&5e+"(0>:Y*SCS9UV*DgC_f:t"On4_)G>=da[S[o)[\9`]+X+Fh(Q337S257UI8/#:,C!/)T
%)h\5Kndm.-eZ]QodOo##?8H0'2YAi"p!QB8Y>$[=%d1B#0AWE!DQPu4HdPnG]c)=>PM*A\>]d@G)YkCoas!h+EE&ui"A`QO314W=
%cRpsGV5r-O\[\86S!@`V3fXG?:?H<[=%H&p(ZD71cDc1LL\^Uh4i6S6-;3I#KPGgFDn]&7;BPDU>cqa&cogeu+;8)mA8.^&i1p?q
%ONNRiM"=-_&=UXQF9kONN=BNQ\.5se[>k]31sl:u*l[66JAZ[Ff>_S/2df(b7#'2X)DS1CF#U?1>gP:VK[(`il:&+jNmhO;i6u_5
%QEW5+iP_Q]O4Q6O?"7:`i^k\2)cc(uKG]4Nigkm#8;dd!H5#'s$3(S%fp_(ZIB(.!'sRH=q>@?jF=^tI<=gkhHLWodk9Ue[eQ@2*
%?5M^j^'V[7_8eJZ/+U7R*mJ]$k70AC#D_ItWsT'0+d]6S$tca<>JX*S+Js,Tbed!Xok`)t[2R@HL\#'D`c*&)eP*Ri]8l_LQL7*K
%TP.^P_@l*lG)1@H/^&>o%`[Rta7X6!E)*=9pDWM*]&s8MH]\%Z+CHRm&`l4jV%$ordAm.IlM7)5?i##9_/!_U;-8G,&j12=WOT.%
%037\`Z/4>KdT]3%?^<:SD3Fn\ZJY?jVT>BV8++W5W^O(t(G#0FV^g`LSoc\MQ7FJ4bLp-G6b=ETp?OuT:rj:PEcO:7iCsgo:"?0*
%b%*B+logX]hs6bL:jN.tgqdaY+je`39c8s3Klj_>#DTiV;hh(#'DB>s7pG$_LK!)_XR=ph*/=Zc%udF0R?Bd,g5=jfCV)6$biB.(
%YB"#5?Yk_15L"-]Me&*[G&:qD]l/Odilj\*.``NL^h-;Q&@fjF(AO4c\;0up.qH8*(As44#d*?^k-GN5*:2>_q9L;ciKMePIPU"&
%s3[:8df2u?c,ml*RUKEXKn22OF?J5`Cj<6TT@up`V.&oLkdbuK;`j.Pq(M</ch>q'Zql68^/Hnt8,<pAfi]iR6*^8#r6K,OmeXH3
%V>CPu5GJC"6aGR=A0XXNc@#qQ>D`o8%(:b>Fm^\JM;4V1h5;+RkYkUSIS-5*Z3%nXQ8[!)9N"uEVSg1jq[JJ+&20pLemdlgOo>`i
%(F`J>G8h\=4O1ZX`4e6t'5dRMGYZ)8I"=8UZl<.uHr4<H(mpipo^Oi/)L!.'VDC`sFR)_(nsMb8Ep78?FXNaZUTh5O)Zu[t2157&
%6U!sc8q&UTV=Y5Z7[5RJZ6`,(KSk*B>86pML"M)OhnF3Cg2L-rV.+Tt?Yq]q@-;7,5j^@9NnSSh3GTh;EI0"@rE-542p9?5d)l%F
%ZECE8f[nt=I+<Ygj!>K$OqpD]&n*6c$b9_i-M,YU1&)Cnr]j>TgrIg4o]H1@qa#pAd-*h@IDi0lfoHh9;dj5b_C?-u>q)j!*630!
%jI3\T*bttJq:TV,*h+<ge@gB:$dOb3Wc;Ts3]!@"k9l*gAQC0X#=AOH,JV.n5e^D-+gAo/<j=;BgL/&C.P$UZoTUNX/pCh[2ce5c
%`,D_m3B(+aVXL&i$9&ZET1UG9aPCiH?`onB3tD/76^6T[`'A#lT<!7[7-RhAQ6Z:,$k2S=%cFq[aGtA>=t2HVD*Q_+l!b*9[+eEk
%QkL<PW=*/D%-S7VR[iG1iaJ)BHlQ<1AV!^UCjAEmL_9GYTWa<P`L[\EU6Pc<,R-Xq)\@"q">Bl\23Ah\"g)Pac\>j>7MQ>t99[Nf
%GWK%i?EXd5+.I%t!/@_h!.o;tCh;)WUKh78JI0:&"%%C2:h6W%@?Zhj</ki<09tu:FNRS*)(m1?CfHisB:A+,N*P$[kiT[#/spGP
%9U'P59Jq#?;^g[>(_9B=oApJZVK:pj7MWjZ,)?mugfP,g>V%cc@m0\nF;PT>QYijiT_,_\USGcGCG%nsjO2RuR'tAi'2G3C'PUs7
%:/rK"!N2Q+*>5?RBp1]@9i!F)Ghjq@@MkP10d4g5FNoEe-BH1hi%'jVBKX*=?E4'?:J")dVBH7ESZR\N(n\,ROb!%Yfa(-ud3XjY
%=4:b&O6@LAAVX8dEL.J_io+VjMgRkn,]Rfe_kP1o`7ZHbB20Z.o1G<>54XZMS$O*hS>F#ug+'<eO2QjWG)t#Y;3!ZCHP79!0*?Ki
%O-X%$nfCUi&Lo3meFKn.CG&%a2hh"[#P[lei1;#(4G1LtM&K%:=?!7bDUDq5*/8??XhmsYa&J.6-=-nne-(kRR#5:0j950d#Q9+'
%US3@q?9FN(PU:GYfcSAQFEt/P+2b8o<"mP(Xm<k1VC4>QgRu9n?iOam?^WI@:U5HS2`%6*%THt<^XrCL/kk@.6A*,Q=_c=JQ;T_m
%s-]l7oN=iL+FL<;Y,6a1p/t6.FbIkheBE36/Bi!/(*NEX44+kBdH.Vk./lM<pEqq8VoP;ePKlm4\/1fc'AU.Hf[XrbkS.Um<:h(d
%jt%j7-/Fj$C!Er)3.(Ij[?SqAJ(Vm0:#],o_'s\[N]7EhE+u\JS>1;[3I5K3kDSVm[@8A+7M!^b*UHeNYYqiuPEsW;bF-O-E<fC/
%66D'.$$3=Zmi<FNjJm/TGeAL\dZ;Yn*P`6>24>rS-SY$a(!"#,l6HOh,PKQ!V&Ec&A'+?i,I5psr3"A/f5QIOC?V9.)$+!!53sVE
%GXcGZFo_]glU[I82s12eI*sFIA9@GpIGT5)aa*5XK\-t38D#.!h+^;HXiBa!!8^I+B3'D])$Je9CtW3s)6Auen<JR-DHLlJ^fCo*
%(8Z3,`Igo4)0AXiSD)naX4I95CN%9^3"]=b'&gDuZPp/pggSF4Eim;?IJm>BffV=`k^p=ic>rcW65,&F`@@:tSQs.VOe1P0`+6]F
%oL.3pXi_J0XF=#&,q``D5,,ln/]Y,gT^KlTZrnE(cj<:2/IAc&3+&G]$n&+4DUMIPh;3+&Q\j8I:3']M4DFK.P@K<PT(qDMS\7(7
%>>QgIlf`&kQd0PMGW12OV[Ctlm?L0>IbGm_&8q>ZP=?eJRVNF;I!9ol/!\t.?c.(0Z(d'5abI'=,QcdbGK]HK3P9o<_4ga7l@M5O
%>I#p2BUX5WNl.?9q9Mq9#-ulL=o!mD*kG_2R't_`ZX4lAJ9Z[gZ`Tl&-E]-V/XkRb.hmdn_&bMGT"ZZj9m75.]I6re)SD)ain!TK
%]K];-5B&CF2g<Z3F_iJtVtdSCg@msp2n%=X0),fDO;b+sT(El)5glBb`\FAR(S#($B"i#D&,bGF.n[_f8Mp-=)2@c1Gg"L[Rg`*W
%^WEk\Bggjjna1gX88iPIT:j[CLS3.&K$pm"'m.gWpV_a[<sf@%?4[p(mC\:C=uEh.4(^VS3Z/6@b/2cmBPbWj/tbi^IhH:lKZr@j
%l1,RNd/%\;dGYNfL;7@$>sN*'9pXtg)dtabc]S;NNXT#UJeA!U;^dal0OY0V0uI@(hG%0\s.(Ki=A1(NimR&OlXg]p-2*[-;X'`7
%i]TXiUE=d!<+1k0ct+0E0#lMC^oJL?P!W5tkmG/t#@;'J;ob#'FRi^si,VM@PDFG.0G:<6AFDKUjdMN`F)YBK//.1&p?*Jc8BS_N
%(A"\epB:B^UXK)WA0XPY-I)+*J]$Atj4C(364pgH-^tU+a=tRe+cfd!MZ2=IUrnG*8QO'%=Hjcg<oHFqdQ;f/89OkI%hVbfj&_mH
%f56$:q.g$_+jfEuiTlFB<fU-+7l,Z8fCe<4L^6\"<U"*r,Vc$eI+#7(jTkI/3h)d#ks.rgN\Q02.1p2eO?2_;=ai]>_3!XdTGmkV
%L8Ltn9^D.`;;jo>C&32_=.?-F_6'BI(+"V6L&SBHAF!s4/14GZ3>Q76'LO;'/@J)YHT<L#2:LGh9H);u3OO!1CjnN?&biRBQfSib
%0PF5p+AD^\=>UX?7dVsV-;Pj2;[=!VkL#KIV3%uDT=08>i$so)INkEr%([^qjsrQ"]VC)Wc*nV^MVrQ*Pb(CUfVL[H+"5s!HB=D?
%'kg6*^?`_=Jb%7uPO;IAP*VWW/0($/`!5e@:g>DZN.Bn3Ri`=\/?UKH(,'bsT!Pu39::%rc4D1\YD^]E1e6m6a`JWZ<rH"oDc[U!
%O>E^)1-($W.2.mQ/4AP0h)W2S28krXk]6/=B<#&W4rG]]0T:e^&[`)F>GFg4eU>XiZ\4]iEAkacl<YF-qlfB".Z.sh8O=?*)o_.N
%c"i+O'6<mVDrF*()I,O8>,pM/bCcl/^\K:F;sX`D4bh=\\>6,ecQ::6Rq7)49jDK>$$C4g`IS;01"?!X[<!<BSRdA1BA@#[L';#>
%FBQQ'0SIt=JCU<JO0IcJN^ed3;39E(#Z(nk]pe,n8(jP2!%AA(7`F)c;q$TU2cV2rUJ`nZ[L[*#NBO.O?p'c98d<>^%Q4H/Z2a6X
%&0Fq")g"E#g2er,U(!7n,oBBkC(au2qo4rHUtcb$mrlCX5H>RG*%C?E<aQ*]L*pe7U?2V0CQ.<;$&4gYL&B>>CVVLK36YI/.@l)r
%+(T>PUIm"sJSZE=EKK:7C^r3H6\pAB%k-O[OR@``6)tM/pc3"p^E7k80nsAF%N<JkWe!EoT6T'6`8Bho_[i^Omrd.#:=unNq$NqU
%RrJJZ=d8Pn[8bp(^+"D$;jEk.=?93.#LXj``E6^N=7,I%2XXdA'D1a!76!0#+Vlu=dc;ZY-&:qW,\=tSe@cW\;po,SHj'^IRAgKJ
%@>!fZR_F@d!UT3;JQNrs*832j>:H%Wo(*WnkJTc^8/h+5R8_Cl9NB'dM#4WG@C8iTRTXroe1NPK04`8:,&`22p@pHA;>&hKgp=.c
%3H?ZVY&'6C!Q],=M;/!)1&Oj^dLa]qGWSYp-2>g=:K=Z!b_;I]64$UpW+j,GS%<'Z,Pbf7&?LR',iP0M>kL!9RLfRdS'NE[b^<<q
%erp_a.e<(<o2%LnbY!)L&Y]Yec,[\Z"_cX2$kMCB9NA*hM(T?hF3:5H.qpso!Zao,@<bO1*W(R&e8=j%YH;%I4l-A?*<Sl>.HE;V
%7uZ3&:)l`)>d/$*m,RnXFZe0bo9NZ*]f!hT?FJt(*Su#n5;jQT`/(9r0gJr=fnO+G*T)]m>II0oAS>Dm12XAbYYKokf#]N^QH3QM
%3hDHHEO7*JEhh0ujZN'K6Og65;qKY9<*0WsVTP<35NJ>WLJ^?Z?!#B-OfP@c`7gX`@_<QlZT?8s-D>ZZC/$u<=);NC1m0KXcV7.L
%.M1jDkI2Ksg8i%!GOeTNa4!p%s6fa@?&O0h5l39l.=Upr7B-R7V9*T9>adj958l?"`G[RV'h<]HSm40<250B_<D%roSeiZl^MT=7
%.3b!ECqcl?AOcd<d-r[_IH;GJ4-1F_Ojci_iY3h3Mo:<&9i[H5(8c!"2G`O-=*)LiA;=Ti7D`ki'&^3(T!B_F)-?O0/(IlbIm4CA
%8L$LN?s/6'#7l72jm#Ac?-Xo;)D]pc,K/jdC&n4hWTk`PGGYlfUBsFVd0L3G'nXOaiSMdMdO:_f.[]6k3(Z&O[lIJp-G+,!R=_l,
%b9G*WG%?&#/[11u--F8Kb(8?)Wj4dWYGOh\Km^:o)&k<]:qAVEPoe*tqb!'(9Bqb++`]Lhe(JOh029gZgHeqQZ;dr[V$hQJ"V.\/
%Fu#]L0YGOnL0OBGr3fnR[]+"5YXJYspQWel,hX*$r5;PX/b+_LF>fTtZpmInk6e\oX(9?YRTt-i?q&r4c.WYm1?el,cTl9V`;sr?
%i6`"";cQ<+?D#/i/KN$"-Qr\"Bs<Z[*b<#%o#7+s-(N<dH)?[q,a/8SpBe]?@q6K-D7Uk`$I'A'C[!WlTQQ[*=RWL7>[^KcHqkJ6
%\XKp\Q/T"XAD_1"d_N?7&0*`eM<g@H?u$O[/k7fb]r)Q;ro>O(+rtX%P-9V,`O\B<Ya,-OB8\YhJ=.G91V5k*ZgqAK[Z%?cmU27.
%+./jSHt:L\+B@)qY0rKGFM$-2aFMWL]u2?SoO:_2[T=<:[!ghNk_W]L>KfK`j1UtpL7<3"CY*=DJqI_'6]=2ge#Zc0WG]b5i_WB1
%QlG;%,G35GqY$/0CsKlPhHnE=Ll$a_gumG8I7-Q@'eb/"35'DXjG&q7+dHWbTIc[%ak"r;!RQmOOA)`0SL1ZVjQAia4C+0(nE=$!
%e*eKH7;b(F=\e'+Lsem1Ehh0(/ZU0sDRQFODH`>gD9$G@R(5MbBZNI!j!@m)WboB<g3.TpHZ*VOb\SRi<g5J4hP;H'it:\^[DYX@
%Q:CJ">aU91b"06-Oe-C<Q8L/Dm[H\j1PKj!;_#Yt'!NB[OUFm;:`lAkmX,e?L<[op<2g9=+Pi%^dW1S./9*t0\ekmG;'cjjemLr*
%_1^*#H87?![c+J,oM(??*).$;Lfb02pD!#22O1YV@60P4X27RS,Y+lK?.YD/FHG9u%'D&TP@W;+Mkd+lmE3l=Lj!X78N2eb='E`J
%BLuegQR.![^#TI+p8(98`j5LJd6&O;m&'.tdcI6h)TkFSQK2BL`\QX!Rb,]r]#>O=<`@\gA9kO]Cq65e.k.^GLn(EN=m\h=84P?g
%MkmJV]^)#XQqWe2":m@#)DrNC-)4!u/u!skFc2!u<,R8nS1RfWp9`Cal=i=:Xt,bQ&'mqFcuI-#S35LthYA`rXGU'MR4$.6acR?7
%L.5G6[o^#DZtQ.F"+bB87fs>[=_6Zi10DgDUP6Hd8MYmj(l4D5e'C>-eP&'fJm5j96D5,'1k_("THf*]2,na,EOF==jfo@hL,;4#
%,?;a^D+7Il"Lb`J>H'1)C9ip]fns9RUJ.r@Ec+IDC;/UrVjaW<MR_NqU(N[*D&#]HLsJP41\hekSVE+R;^5af7Uru0OBgWhU2M:f
%Sjr$(`S=R!$8j`,[`$`I[V8^f5U`N6h2U(f7.PR`Rk*YOXi/g:'4-jcEZ1?H6uW>4"jNiY+lCH9,V;WPR8u3MD,G")"11L?WjR?3
%@W.J0D72>9ku5Pp3+5+BVi*tU=S(A?\n5eJ2%fd"htGis)GV_4ZT2;;o(BCR_[#r(HgM%!R,5h]"Vi5n%?3I^dKj+&]Em;2&Wo]l
%bA>(^MA-_^*42dT__dB$W6LbOW)r5X8ZV>b0R1t^$ZAt%`c2u"Iamf6LpD4;GcRPIqk;<Lr]GoP[LEc6g>uLj3EQggX82%olgEVS
%j2%59Db2&)[+e]l\$uD"o$3*^c""`YG42qY;pY;kHob81A)DaYG'ioERr@2pFcZ@`bsS[?^ZXbM<6!Ur?/O\FeP(%lW`B>m*?<h0
%Y.8i$4fKB<^2_V4jlX^fH67FVc!,q*.q>X9ec)gX?8H]pNFm'Q+Fhkkb[;p.I]Vs?6eOQC".d7KCH">!mApfSHaqtGX*<%$M:,43
%gTKN#pr9H0lDYeVk*gr$pD2=%,``f_<HjK\`4!\U7\)VIF8'IZ*>h?'dJTta]?Q+L^@CEI_`)M:Ua@u0DH]-0UM"4_PWX]Gf8eH'
%ffM&NHMF/^?b!XcB_,p;G]dEL\P!=SaQqCdB!e9/DSGYklOPa=K]pRo4_+5NaL?<d%IVC,\urg"]m%`0iSN*R7`;!BG)AE%]=2E_
%Ap_OD:!^VbH">*XgX[;/2YQ%:l#dq`*a!phNe-!8%9r;R]m>'!-BgV#hsq_qNt./U7r)jHg*u4:]P_fiT&&*!_V/(pmk&I*mF8S<
%iH=n2!&iWFAbW]#*b0-!j7(=JMOF,N)fOH:V9bQSm7hlHl)Ta]gWGpig;]nW21[M=\@ZbdR5no.c8fR:g!0>D^,/u'D9kp>]pj'@
%"_Z]q)oJ46CMt9HFlVb>gGaBn>`p2aFgo&1X#!S`BB+tqAFJBVO/tN=nSTq],t$C$hln#bj_jsgrL+p(e^j_p)sgnVTQaq%<:02?
%4bJ1I)qXJeDW>#6G`3(rgdA?n-KHoHaS!/=qN$V?GML9Sh0<o9XfVK:VX:Qsf^q8u?%dh@W>i<ah7cH&I.c,d*7;TlDVUDgpU5G4
%C'oh)^:jI\5)-H0h^qAYm$"+8gpA/,j\-#fY3R/l6Do/a=*_2fhdt]7flgcmhMm/_ICJ(B4e5ooVV`H*rAEHG[>/YW[WeBohr*^;
%rk=lj41oit4Jq#Ko=tqrTm,2C]=&g/2Vui"*nn&Ha5FW9Nst+<[JRCk:95Jj0edp+7cn[UlPsPe[cB["*PQIOenobhDRai0i.gU#
%Cj'd#fbOQ'W(s3rZglRiV!he\g1n7aS$sB9?GGmCmcmdMi+aT?RL*5X6fmVFeM,ZBHNt\@J,<O)[:B(!DZ'NMHaDmYT'\`.rE"^Q
%JKR8FbKOAO\!b')'#[*<"Gr*<5n_+&/@rPKY%q0\'$6uhY2hXLCrIjVNoP.0S)Zo>EZXh>G?<llMKBThHR8\"l0d40ZXLE;X5`RU
%bb.c+l-j;2oBB#6)#]up,<8:'&i9o*`9DI,QI2:O^8/sf:G+RDN;04+2`nr*3#XNPb1/he?cJ5`,[@DFJ@<3m]NHf5Hm0Pr?@qEu
%PTul-4Z];(es.K[*idO7=4KqOnd<r6B8MjIK,R*Cc%+>%[t;G%3V(XCC(lWB[d)Q8'CdKCLKa666.5O>Jb$<@;5Iu`c6ef=+Hp[!
%N*S^%UnVD&g6jD_(VM;EYL!TjJ]0tg(f:Rom#02u7QY?lELI;"&[#)A!+?2Nd(m.the7lUL3"Nah#l(g?G-'k7T;t:@-,U\DTDA(
%fA^5,D8*J2TT+hmDdZ#EQa[*7on9s1qV/Ukr9W"'*A?e%E8<3b$uat/A*Y'YN@n+ri90!OlbZ;ZiE*?HI?-4e[[Y.?Sb,P2)pP$N
%]aoO$m4RV^^`o-_W!2r4aRN?@Ros++[t4rWdfL6L@OR\7ApG2h?>&.rQ="b^UH_bN64Nl^0AdIN=Pjp5ZV@1^"\aAe7VgR[-U3u\
%)<U1lZ;&dG0CLgRfNCD:;3S;<@6VDeQ'/\o5P=OJ]rf^_n5]^\)S]B#AfmeNoV8H'Y.rXr#tN+-+Xhi#,02d1,6haU(B"Vbg[e9o
%/C%0^Ir<Gc^)K'13V3\E7f;Q(ao%<pbb7/jbCMmH-g7)(L47)?S>3kV`3bgYdKJBbf*TTf+OM_+b7oZO#T\S:M&SclJ9m<b+mM8k
%$iICO,+7jQI=f."Xh[[s1<`9dPH\9`9=BDc@p27[@`Z?WbIAg>>"3Wkm3W\<_"J>gmPek-c_4+M?Tn!;rgL*&7GL<'afZr-19qP*
%(RW"Be=66EAQu.gZ3#(J);/gTcL8T5+e&dhbi=,&kqDBQo3MB1Q"!lBi<]%Hn.E'_#)l)'F@'Oq7]$?KJb^,6,l9C>7jK$mDUcTl
%>rK@@5uf`o6!b9#KcWK79)M#nAXL;R6o8ZRZ6EY<J;DjonW7CPCuFeQ/4$uZBm2tGPu.OCTKj7"a%uq8d:e1^P>3^I51h-,+#62t
%afm9/rX>q3Of5!D=V5%J31/NJ6A)e.";D8>O>MF[Kc_Iin<ZWN,;Uq,J.^8WRYK>VW8ip:(RbCb&8&#cC_UXVB&MG@OTgKd]`^Os
%`Z@a[!k6j]mjfTf+5:Pp0!jEgT;gGu<<Tn3<bU(,"[("4^hCKR]77gOA>p:>#%:2rVY^kp41&j"Ep@Y?)$c1E.2bom0"$7npSP,o
%'P&Aj;]]Rs/:nZa20plPBSYdIPAG[+aQLV0e2'ffl:#,PiV6?:c3=9:fI]jI0[\TA;F1T"aun>C"j1u"*#GgDagg\Omd"YU%6\lA
%@UqK5[`F%Zf'dp.(F@A/PW(3+LGZc"iU1t6\^?Y332sJ7QBX;s>-I#hO$oLZgHnXPi[/8D=*t^/%n!OacE,XdX[)780oauD8FU+0
%3n_bHJHoj?mRlp62#2jgY];E%rY2RIcJ9Nn:\NQE)2Y#@S9uG!LLKY1EHh^sq\Ab.(5:<#-kI?DB*2`e"Li(un.7G\Q-J82hVmuF
%ni@9jnICTJTFVLK\_p"%Jp="Z=MdX)en[3&W?pU&Hq@I@HmUASO:=a;@t^X",LQ`7-iGUZTVUhl*$1e$0K'2of/Yo;2-/L:f/%Rj
%ZmU'.@<Od754O%&c40D'Z+&BG;VkCj`l(N>j]h^oo+;%dD!iPJhT\,I05h'lmI#ZIlmpQ.GGK'/P7$Pi(Xq<q^"[J=ICs3"=B`!!
%CcAA&e]MP/PaI5&?!hS&*?W(Q,`fW-o-IE?G+Isch'uJoA9KsAGIKJX>l*F`F49MfU[a4sJ&'5iN22rg$(._q5SP+("j5)/-=5qA
%JgKo(k/&N+"YlBb\]Zl<j%h^%-.bP^AWAMXYM8(&-LEm(Ot/GmDp/;IIZ8`#f0s4N&As-i76N"Cbq;dPolH<$A2q[>jZl2Z?CjKN
%m_(T`BPOdk&D,<T6te[qI]\oWpU*\SE-16OU3X8`D*/rW@img^qY=fanALXg')C&^132j*2Y4$d2&o:q0']-9j;(!h>Bo]JQF+>'
%pjf\X`lceT*d5RWk\=KbP>A_uj,8oIM,;bqNWPCK,ADLF'D80X1=DF=DU%)p(/,n\f_&9cd6j5Oc@PsM(A1'2i^<%"X7kG]Ck/J+
%6LH?\m0Y@=8C>E!KZ>]\=1jJTh)`m1!72L(R'rbpcHr%gZTP:;Y*XF<Cq#?/-7d>ZdRX1_9SNP[dKI5QqBVKBRn<6pkIX-`6H5Yi
%>p_[\.FfP8\jNV;*\lR#N_XFA2IVYVT?%4ES'GNPhK1nZK@"?@s7Ii7C`*,qK_SKcKNl's'%5-Z\$ak[Z`gs=f6^"#B'4p,8#$p`
%O#O-cD=u_ZmrDbIRmTRcYDgIX76:?3<&77S]X`7,hhn1C-MHYM6oc3,lHFuiV@J^j_\eb;_OanWU-%:aHp,>JC*9ai3>K-o".i+"
%[.8Un+:Faa)d0-snXLsb=Ws,ef)j%,BNcts\pn;YJ[ru/pSjI&UpiP]A7E$?1QfA'o+ej4(O7njb^NXdHoL%!&@["RLF2W3X)$+h
%AYOqNdp3\^/t,-][>nsM3h;;:riN^8\.@rCrnt``"ephW'ERU1Jq^+R_CO$hQd>#NDTDoR*!Kb+,mX]K?024)fJb0AK!O'r-+IaL
%HMrAP-UE`>:FcSL!H'6Ghh2@FeZsBRWfi5%<[,#8'oT`ZObpi[C5e;K/GJ<NC'W0blX^\PF#RE]pm\pKbYD^0,<)D&T'7%F3Ya<u
%)`DHaqO=3%6$n5p0+qO1+45g;-lm%=o!eE">]@m>^.keD5W5@'5XPe)5]4I[o'Ph9:gg7ePOOr@ADqG"!0o-82H#Z_(>8r\Vb;F3
%6+<"#^E>"RRTCg^@,3r@B:2/&707TIO&/WUUF3m(,+B1U\cg2j1<kK]fOH*%IM8C!N`fHRQ,n<bS]=t+N@S.\'&9p5FI&blfl4;^
%"idP2RB8U6DYD0POh'boftYYRmnuG]@qGU'Be'8sQ4OWZ(efUU]qK5H))kbg:ZeA!rW)4oq@'1M5DOO7]XWsNpDg9EWB'R@I[s$.
%g32/jBJgO,3OitElPk0RO==F5:;:HLOqn!S<pCG5m&PL`*c8OE@UK(u[?4]Agms*[qYklM+tMca=Y]^l+QPjVgtP'![;P7IlEnR6
%\RU&tcojk3^8CDTfB7CucY=`[pr`B;GL:+MJ)fnt94dPsp>u"i%G.Nt.9>)75ZgKlHilNdXY#`-cC/,UUa%&+V=-JAq)tfH6T]gL
%cNIfsWNER=k1UhDZZiMqSZOQ/rG8\P+/(hLBoL+e!K]keaaPl$Y["pEV\-7i/6=&\S^5#Dl$PN5&hQ`$3sphW51g(dRT2%s@;Hk\
%>hds^ADgZ"B'1O503S^@c'AetXC^rS9*+eHXe4D3f@;Dk/A@@S29Y;+q=;qD;C$<ncSbk'Jk@!5D74GL04u(ik;Ss)?T1H?XAo$6
%eZ#hSpq/brcg^duIY\SgC4`P"2#Xe0H&mkjNb7H./T,"q'6\l2"^DOJD`eDOP7R#C:9Z-)*jSa[>@=8s78=K/bNupkpAfCRY+Y6:
%#?RK4.JuLHmbAKs=RPKj2.4iS]KaM0)W6Ss#-fa1=dji!TSI.nqmpU-+m))aCH1:P@R/AA>LIro4[pS.LmM^8T!+b7O:[V\;QlF\
%(U-BQCM@O:RE"`?Z!Kj<K(6=\eI"XpcVV'uBe3fDc("PKnh!IZJZe]-PcZ>%5f=`nf:C0Oq[3'[>48;*kknZ(!_CdH-.4Iki2AkP
%&mr"58aQ7S]'S92#dO+MZET%WqSc&P<P"HW@FgZc\!iu"%4d'm>En57\p\IW/9>0)l7;W)=j)o'nbnb)g[-h&g83"\ZS[@,Kd=nl
%;&$)bKT*9(GA+Cu)?VDp\:NT2?g7LS*#EDGnntM.E<2K[Gl69Sh=a<"HI*o!JB;Li0D82p`b>%b,]ee&Up[+LMp6SIQJ=SgK9;'n
%/EATYB<C8hU6t[IQ7$qWq$L6j>QcHA%uCKCMP)pd)$#!ND3_4VI+I@7)-[H<@lC%L'+`G+$4O8taD<@'))MKh`Nq33)r4Z'Oht_R
%'JIt*_aU<h[/feU)imEtn2p#td-eX)#!?h7@BPg:@]Ap',W)$Kh68&,c0>@@Or;Sm"OM0*$;ZfH1U%bM7rfNTIUnf6G>9;*i>!-+
%X*>Z(-oQ6(-o;7Or8unKM/PFZbJ;NDDDo,'1bBUQIH/^9q3iDN8EYcs24X/7'C+ha7.Ei6oL]5\/e+8p@,#*Jipg?l#cb]-Ph)GC
%bsB`IPIiBX-iJ<$9T9M*b9D98I<e>#(/K0WALD86Re_Q4E@b(=8D:blbQT#oNuH&0&Du9V-dYe(HPO6@]V73j8X!do$gO`X..utp
%M/o/Ke&e+3;5N&$3A^F^+\W9]YCq8squM9//<ck&U^gF/$78[YSc3ASHp`AQW,SB$+NFE`_ZU=)^4Q6WC%BN7[K93OkJVe[[r5u-
%Ba?LkTiQ$s6ZPP$j7Xo9,<&a`^L@$.YOKoVpKNq<q:F/99Wdh*D1.j*aLC8h$fsJF/;GdC/QtgC>dL[+Y'SdDP9V9-!&=l1lgD%p
%\L[NG;89^_Vu,n;R"QU:$H``5W?kB$SrQM"pkB"KkrW_ap21aFC*S)7$5Kkimu:,Z(SH:FEDN"TF5r4ELCZ<F$RBHYHf0>0d'geK
%>m(Wb3<WYn"S`hY7uN]b]<6`pdU-2dof@,S@CePFIQ,#p>7kiJqrA^iP`R/)?G`+Tca/8o73@n^Ynbo-cS2uT:2&-Ce2sNN^HENk
%d8DU0-oH#8Abn_I%OBfY!!XLtg))BZNs$<+`#qpa[8:-8[7su62>RjkPs;.>VPj#R:hEMKpV%IT/^`hC)K`Cnmk2`@q%%Pu7_,%m
%h]uh(/5YULO9qBI:)jB_EtC3P>,)-m?=)[k^RZ"[%Ai`?,WZ!XWIAA1g8U2k$Yk@QQR26p*"+666A3V46NSa(C*GXfE&q,4(K7Gf
%=8:Wap9>Na%2W4@r:%DmjOYaEbllJGWoo/@6BpGj8&@l61;Ps/d@'!O9YE.b'Ze'*!FP^_bJj&FID).HncI15o!'kS@tLe;bqMWj
%5VVn@>@YfN7?\9Z7!FI!!)Eo4c5S9"oNl^Jj=@&o)F$[2r@3"r&LPEomLFgDBJAf>HMaK!H<(cb4"B@A#98D9&EUJ/\Y+n5iI2,p
%KbaBi%kgu_WRg^kQ<t`&p&Fne,';aV?8q].I=b9F2-1jfSm7'_`U\:0EZTrnYE<4,0O#FKUr=s]o7\+@%Z\WEY*YpB[Q=?VA?CP:
%ioZY7%hRY%Q\48mQ*2DJmVh$ME0=1MW/)]Yi%Tb8PRkG"%O"&0@j'kTD]cW\<U%9g1Df\4XaL%u[WK\<CgXh4VO:`,V8_cPDJu*W
%>DtQs<:FiX"kTnr<!6^07EXNE/U`1f6Gt:>@*u)ekCD6,oQ(R#<;ka7YdUbligO.k&!JeiZIs[\kjDXqm$a_W;B?o+di&\u8#j-!
%R,:.3W:mhaLQW37/UIk,4$:Tr+Z\sZ6]Idl$t-9-P&nt!$,Cujf;JGYRu\?&O"YqsC+A#YD?Rq)\_,KloGF0fWW[.>]&$V[#oZE7
%N,mD-PHnDe7AdU:Y#]#9WTot4m1;88CRmou4d2'pYZ9S_:Sn=A8A*lMU9g>Jr!FkLa3!Q(A+Cibpps_1+!kT!@r$n6`p^sB`N"U]
%'C,fE4d$JI[$LmSX_^.68N2\d12'c)SLlG(&8A)\Cqh/?rUhCY?L?!]T_U6k/6m#K-Pn>hp]@NiGX2;ki^`I$`PlHaCN-k>M[Qde
%JB$qb\:Iup&Kc3$ReHk75M.7V.rFXnbMC,Ep^7nR^RIJO$!N(ZRHCC9'&*p'+nl-_`rC,]#&phQ_BrS:(E_iTU>a)CnAk$72R!ep
%rtsX5Z[7+Uh(->?L6(RcBSN4h!'Gj7*A$(NnfO?Zh-pSljRa?K0!FT%PsJtg"5Z@9E`dt>9Jn]tZ?!]Y`&!9ZCjrm'c7]"Pr>Q<7
%K&89U50k0aK/'@Ri.1Y&g2'(I]AltKrTF4A\,Yg0r>0tT-U7S0Ieq+"r2nlQq="@EkPt7"rqml;cHgt22ui"Ns2VnNj$3Or:]Ao%
%r0RH]B>=0G^\k#0o.U*DJ+OQWi:$Ts:]LBcrq>g[5QB1cs1@1eJ,f;As7a;-Mr4=X^\jGup94MaDuJ5dnLo@]q`k&@hu-o2n\>(H
%^\lE-p](*Is73r"h>d7sJ+:uPrqW2arm1VtDu]1ms8&AeX+1'!^\O).r.@60Rt(%ErP_"rkC<L*rq0XsiBR2)htVDFqY,L>(VfL(
%s7Gc/qQiE_oq28j5PiS'i?/*d&,u(ErobI'g#)Vos5WSHih-5B(VfM7ro,=*k%DI'?iTr*s.=f6#QN%uq@EW*YPuFhVEOD7@)8YR
%XhSG0IVCOKJ<sPH8<4tT&*B%K/m#rEpe\+V?An5PQ/.B"WA.Id5^4RK&DkkF*f.R/L,cbB_*Q_=IMhl7TBjM]9##<Cn6\R+E?FfD
%&+97CTa,Re]"-(JDpcE1<q$O>2lr5&T+\;;4nNX#f.C'9GCSBKAB\qCDOK;k05kJ"(^l^:W>Q#WbBs3<./6aq>6>hZjW;e[V!eL:
%X>hW+@IGBK.V?!3m3pR\ob##*\>SE3le;Q#iO>s'mZ3NFf;OlPgdYJCh:$VgS_;XNB[/^-fu=ODK>V%iRQWi=*VMI$G2,8Md:hB$
%^pCkHfBh51)J8_<Rl#Jr)ZoUW4*EFbQ7B/M6+oZRo&h4r8E_KZInFqioFbR8Kr8%X5KU+\WT5Jn?JUq+##$>S8O\Mn7k_Q'$9V/N
%k9l49U,u(1R8(DI_1`]"_<!i*3ZqN6WD+9e,fjq_n-Tj1p-Wu/?H5!!5fI$GI"@#X4;jf1Rg?]U+F;5!'cU@s7/BYlGQ!,1&tnd9
%Nh&m^k[8ud"[FCGq2TrVD[Kk0k8dGmom-LVo6d`8[1Ma0A#5buO_W3_>8=)'1/bu_O%SA7R;0TT?Z5H"[5-8NrZ&En@SS5LJBZ$q
%^@A-12u%84g,bHReUZ]5PousHA%e[bJZIAeX,<i2WE1f_N6YEY.TAc:QGqR?<2&%1@J&;k6]!94c"4_]Yi=bn;e`aDTh%"?Vj;R"
%2$\peON8"[S_(pTo.F$s<7*VjhUL7@rpCTj!)s'D4b9VB3L4F)As6($#3YrM&lh1$'(2r1hA8mSGb8__(^e_->`ibS4fGDY/R&)G
%pbSWOaQs?p@=Hm7]hdq9<:BF=e@0!q<MJc9J&P;X;umj^:sS]3k"_>dJPHHFUY)[meOt3,[aaKYSJ"q]IX.V!<FcBr_[TmWcPAHb
%26'$Fi#Y!/;_;B[gVb0$aJ_E\LrnC%GFBOia((Gj3IMi;1/,]ek8>kFqNSdq@1NjI3qoQg-d,>7k^d7EiUBH'ghQRtW'W@`'qUEL
%Sf1TA]5bPQAQ0fjL2cB=QMFeCeeP/Bi\nP$e]O]Ha&K!\4]nKJ\:eB,LKc3&DS&[S]->c1gL@0T[IJ]1(s/^#1+_Acp/"m<Pc7^^
%f.B%I81IPDPqQ.:54f5L>K5c$*:=j@R')On<,YZ6^N]_KU.Ft=DH;otA]V*/5<H\9X[;\@K"Z!74N^WA5?IHgBZ.)F[9rJi%BV\H
%ol\/`<h\5]@FW?1X@P3hla\ib?9App)Z*!'Tii$ce?0n]ZW'GDLMZK?SuP.*U.X'9p7cZ1<G^TPAKb'_N%/N5':-pb2B]Prlc%,s
%RUiC8dk9<Uc-O;1K;"b"i$G@#FK[X*PSmBl,,uu3Y_JgE8fhl[q<ab[/7+&JWbK-*O]bi].WER5*ks"eY=PWrO<GI$(6C3s+7;0O
%=`RtV2Tr%:JtFdKnt]di?5\MOQ]j_!Z*KR%59tG5K#O%`[u:VHaI[SCnbIgkds'a%?LO,MEeXQB@a_:IF"e,*=.]).-D-L+ltIl"
%pUQl6AeFjf`VX59>FnG?KPRF:Zg-!FiN*R>T=th_2W:X*Bq_RY@=<H%rHZr$8/(8a7sAlkV5FaN6<AAtYG7i7cQbko1""]/:Z$!G
%;-Dp2f*CKI^>YD5q9r3OZ/D%InA5:lR]TS^5$j:tB(`(JA1T/lh.PI"\ehfRrqphA>8:/1c5qes^!]i>C%E45lDa_%%/<"-<..ps
%!i`Wne(;R;;:T'CeSHg#4&qnNfpgAWokBgb?fDttbF/`q,Gt&'?kK/s:2\Q9HX-9oe\'e8fr'+6@W-N-RtH;K.t/Z"Y"N934>sWj
%o3@)ur<8grfW^k5#8o+X>Ae>HIu/7cZ%Y4J#,6CLV]>)S..jhPs*3LH[+S1)oC1)$1rNn2"\Wf:cZ*--I7`(S2%QbD5o_0Cdo'7r
%\7!L$ZpnFO,[))"S&iGNK&-,1W7jlp+S_8\$"!EkOs:3.<0u*\2t2,=\lVQ?P(B<g8H"FFL9=o4e5`@akWGhB"ZGHUQhtK+_C-*r
%V$_(tWuBNnQti:&&ZEQ#.WV"oLk\"">-A(/-oU"_qILY$YlR)?_O#qUUE`THh*HsPa[nga.Z+[7W.L*C`!/@NWlTJj3\RMN"\dbU
%e>^=;5a<gX%GjO&RWQ%GZWE'"eYYqR3>tLh3Lp?pNM^6$-W,mfqA242Nr7@NDWJLfDSD3G!L6_R=5Q0@IAbh1n=>h.<c@'7W1UCK
%;3D3d@)7C4f]S>^F]$:/7ISg/T!:1/ZF0/u\;IhN5H0orgls,B;Cb7H-&MtGm&5nCZtT8'rCB?b>nSQj+U(I7-#*e8:Joa1+8=$C
%V1?3g=aCU##7N3kb=n>5AB?<o"*;3N$$jeqWJeH(2TL!]^J$sL"n@,R'HuZp661VqXABYuS/d.uY?mM8"CnB5V*#H5+"IT"YL+F?
%QB/=88TQd`[q=$NC:@SpCd<Sjgk78=M=PPi"<uhdnZp><&D-`65`tU+&)7&5;Z7>ict50i6HD"YJ)+gT>jBYo'gG$_CkQ'#`eYE"
%CKh_T1-UIdR?WSLSZ;V9BFT1J5%t*ScO7)a^Z(h0j\'?a)>PaEJ"OT+&aP"ko-@hZBPn=@5*:2LQAt/86q5$H5nUpT3VKjWO-7el
%hgcJ/m\%FU:sYuGR"p'e,s8Oi>"G'04c8DV[ljD3jJL_V+-q?M6CE6BO',J>X"I24^f)4XkOOkR6%OdNo;<\!2gXgC<35FeKOR_J
%Qg2)jd4g%s26W8[JN["/!AY2/,DRNWBHTS`ibOJK_66A6\.9Q[d(qW>10*`W5.&t"1<-QLo,umtlA#1akt6!U_[H+Xmnag6&jO#d
%[FOI$r%uLs*7BTq5fM"Y0AAQp$`Hb_(%,tuDYU-q&oDXTaTbS*G,h9"V1L?#AlZo[n#pFZ6CCF[[ruuApIWjh0UciEfb^<4#`LZV
%EgsllgQld(44BQ4Q]'[WOA*j-T]_j`eO$U`7Z\d2h&PKM$82K'Vn:J9;p5ZfN>:8@/jQiZ:N<C&>$tSH'XnFaDO,l+f'(R@>unG+
%GBL>a7XRAG-f3J0lOuL2r#@IR*id[+[:jn+7ct>E!Sq*rqs-]f.c=C%2HOXNokY+UXg'ja@gpgc>E]tmj+iIZT[6i4NG6PlhQ]c?
%YKt<IWHL@BQn)=bAe8;;7CV%$k%)dUG,L.j7F&"!7iI7CS&i"pbm%EkZu3[:='hKQo]>n7B<M2M3@p\4G'4T;Pf>4R-13JTTKrd)
%0!.TQ',bus#7A[8DlIkh$"]1&W2^oWlUJQD6;NP0J[1m:!B]$R*IV=o-PEVH;"ZklfV5,@AAP$6m+FpHf!G^(hVA9#G@l2#>//"a
%8%`Y-??U4(q&Yfolr+-c:e?-:(X]>GfdLSJQ%`,ao0p/Q5r-%-\iNt/+OpeMhTPWh^s&84#Sg<i:0p26KXQO*[np_4`-<"%6;;^T
%h#'rmqA%d(Hp!0tO^"?%fbBZmK^"8-jiBt=F9el)h1(g*K?W=IXnMR5fO@qF(L$(CXlgb?Ul4&IM9^LsQ!P5,3hPh@%*nNe;*]@Z
%%45#\Oq)&K,$3VA@u4I1HHs]3s'@!nekb@Y_:b%Wa(YR,)3ltYFLX=n&L'rKVXa4PC8m7b&clG9-=fIVG!$6PP2+4F-A`G]g:Rjg
%M*!(2M'-::A-Z[<5n`ud)&+hQcm$0=B-h)[2X#Eu-[2nJ0GqnrU?6#%?$l0>OmgI5_7nS#[E*YDpW0;"lqb+-2H@#49KU$H<og.J
%\9/IsG8O_sVRT_$XJ'm.aESVM<KS4er?2J=8;RI@c/:=V+PjU=b5J[lH.+^6he+J^]>O&7B9:?^e[%okDD(*;_>Q!U\0qK?$[cST
%,4spN4;1;5O3Nu3j(^N[bo]kp@<="5[&0Il<D(XgC1u8R;6*MEO^R\bq]"6->"`DRbSdg>XA2]48/c:cgE#KFT=P`)mO7FC#d"BX
%X_pMSK^3'$;!JF]eg)2oLUAI'W.T5+Fk`$+.TW*c<"Z1AJrHS^nu0c4BSoeJ9'alTq15X[hSXOE<BLXk2!Qp99p&p8eo$()F3>48
%'??\fgW\0V!=`^$akQmQAA1jiDCm1%-4=gQCU_k\g5QgJ[9sBNG.MjDJ7T$7Dr@@Xe(/D+[/an('^`o\2lNG![2WrD%(j$J+cYk7
%GL"M&!r7Ka,ac"<H.,BcM0C(R.6=n#[Z4$\f*R&']rX9mmOVSQE'N0Zl`08tCjE8En$^pgQea)IU3&\:%q^51Tr;u*G&d+$(KA1M
%r?.$.R>mKL(H.X@=i$>7/*`9%)`lL==)8&+<(L<f@iNi*],Bd4^S1V3-H#ho<"#AMcBdOG,BO73Ok4=*CX7:=Ih;>*jTPlZ"GQ6`
%_inHe,ii9Ia*I\W9d)9igW/JqD<#<VXML;d,m,J+J^_;^e;Ait4P6a/L,?SnV,fPfO>V-iI8laoSNQOqp(=,-p5L<l%N7jBX+%^0
%N7i?R][1?Q'fr?GkcZk@7EeL%pm!)gp3DhV9N,nm)_hIbep1JHOXjIVCG="p-bLNV.LC4@mPVB227?rbJ>Ec?5qM^C>m;ePA:63U
%(/-`LauY_jWk?q.&*(HL5%Cjq!D>lBg>h!<V/aqr!9fo"'1%>A"r>m*F2lX7fUDfr%rZB.lM*Y\IS7=O4\IO60J.[>h]^ZQONqIq
%X!Q-`el7r`8$gWF+r91?#d%t^'FTnBOYgpA$Jm<J!tTPr&9MhH21$,5IC&gE8!uMCIh*au-uCN-#p(pE%QL(=QHt4L94reHBk-r=
%RIe5i['>!*)0GC^31i*p&!/d^S51*I`rq*/JFdJbq;>r3!pA=5.`(\Dp7R=6_YLRDHmSlJG8cuI)p;k,,E#?Ko5SZK16t]dR;rk/
%:E.J)bsQ7^5\gAhC,T6W1>](E<sKtL(=<u_P;pK,okVO;`it?-]XW);OuBlZ5fs1:`?^&O"EBcmH2tu\+*)7q<?Of<.diN,XUMnc
%gO6[G:tjuOnmI\^6;rd3%;\bNb00Pc4eg)G[:2:O,EsLc'`,`NKgrZ8;e<Um5)FGF@(3KV?!=>X#4Is^5abs(foXueWq@[D6=i:s
%fCm;^P5V'CP]X6ZE.$<=>m@2_37!l;N'(X>#4-62`8o9E,+*M_"A_c(6eIt/[L]_)T`_n_'#\PF&K*@h,pr1J75IQ0<)I+@4g]dk
%U]k*"rf5<\psoUX)Ui%\>&Q?,,r/N")?Q5Y8?&Hud-L2l#+',h'64)'?Q'mDm[ThBVC:T\P]Mhja@_aq!P`L9^i><OH53gB0g.4Z
%`48<]1gP=L0W&fe>Bt\uVJr>j^UZZ;/s-[HNfd6Fi>BNons/sXjSP3G[k^RC;=us!YIlfaOW>76=\kSK1hgG,,ATG9N\QAUUOfP<
%%C<WHK'::!4:Z)m&Act0RM';sGc'^,=,d_hl*Q14QmRISjOtW8[%b=6MVSmB1h5D:?E.+=fuo>g,hK"+h,A,Wd_JQHckDT[Le/#2
%*Y/2Y1tR$CTQh"OKBh3le"YfG:pg=L-0,YTkag`XbVbkf<FUkMW)n2/qNq;1_`9d#b6*@`N+O;6@o!AkduEr/6L1o";jAS2rX9X,
%hYA_XOHd*:;@bRlfn0jgamC7FW.mQeQ4D(AB`dtW2iACbO?+q.X(pQ'p!ZNgYC1OXmB^n:/k@#Q[o])A1ooIBV^-?s?([qqZSs@^
%K!%/u(3,F\WqT)%<NDQG%9<WBmusKO@1dfUZ:^S!nT*k!8`"\u5"kUH/Bcli<sAoBABR9l)^\ro!=2h;?L(b"2s%@[-\2Kgg4SDe
%G$R5cC"XF=$XGm.:(ZFD<3nMMWKeX.@,T,mNAu2j4pW:,Kar]J6-6uB'kh)'K(+p99^5/MjGpTVXh#*7g7N8nXq$U#7:ig**16h*
%!0,[=E]+/6JAC)PG4!,6IP?A/41T)I<Sk3fe^*8:!61mUm$UEJ?.=N%ST*p5*u#oThn_1$qm1CH#\N0K+V,t_WG%m,V7;Iq?DkFU
%YdV:o$bndUngVU<q/[eP<;-[DMp0r1`DnME3sh<&._?IKo8^h8W$([Aa*8SXbYtG\6k,\)RAX5\G$\^Nkm(KFff>.>-4s!V"O7[_
%TX,d4fURp@S9Jj]Sk8#\K/4bD7-STkP0W*LH$dr-g:e-:e=?sEB5q^"E\Cg9Whl%;YL?&,jhoMCl(tNufZa8k\d!F_c%T37V1(dL
%UYX>M/C*^VEdV\Ic3#KLX,YK+][na?7Q<X*"I^*dJ`$3dQWW"VSU2[6[Vq_Y:u.q4VhWn9k?*e9Q#&142>"`N&[Z0>(`\YDW341d
%lL=JVn#AaH*ue.9`9g5g*M\@L>t-.I:)Ys""=gS3*VhHg1MaQ2W?Yj$NWN-0m+stq=SJI>[;7b]gcF5n]i%FXK%l@!%hH9\`mAoF
%S]2bAXQo^#cU5V$q?C?07R=>tbL'b/"U,_%nOt(YkO13XA77j'K4H-Cm49A_f[*bdZEPK^#@4BB^dK%gZr#85Jj$Vmal*gIUR4aP
%>jHAOPUFjmLZ4#HKCZt+X]e?e%%o^3e'803Q%SW;c?2aIAe^K-++'R_PfHaF4m4kb-\LuCoRf@&o`S*_,bJ\MZ4E\5e3-:_e*j]'
%oNoe]Tb'GVT9f6:`(`_eaC%q4?)AK64N#a/SBkilZe7E,q:M6pG)+cC19q.\Fn.4_lrl=:mU#7#W1+1"ONEM>2c_ph:8tD7gQq<P
%<I/O/K'YTR2m(uN(VUrFII_-cUZeX&e"`D3)O9i0D0`^\%X69*l[TE>7'/8u@]3GTkIe"oI*PfE2_R!gS:/!JP'3;=:Iu.,)X+Y`
%).M7K!H=1u=A:>W;V5:Qp$P;>ZkcLJ^,rM3k+sQ[0@4EK_=#<,<N6nlb\;\-Y4"PlL2*s)JHjYV-Rti?7teid)kJO:4_<9cp3W(>
%Zr%#r]<l@imVo?Z<CeGKT<!PA6<@7GU#!$nm&mC3RGD*Qm'gdh<N00&PP;=#eVVR7L%fH7iF:;R\"H&F;RA"Qn\,plHPtHH9eBJY
%C_tI5=G`++M1G/DEUEK3)2A!/ePMG17u_eT25\ocJr@dR@!_R$%'2;(e]KlkW:-!4\#tFh`?b3[2='fI+:kAU];1!e=F%b^rD'Qb
%KDMBMd07+X<sNLPE<mOo]o&s;Y1HV;P;GS,PDdl&?I*TEY"S%\D&[#N`:=kH*Ai5OSrpD9#rh27NmK',Kr9.BMU<"S\6Zp)j7VhB
%OnD:'rF"P]4i;]:CeZr,D^q((*e#W3@Y4A3@,F71S)]'J1;=m(qIE8]#I%!<E5E+^fmnKCEA"k@c3`i9)Ns>=+Jo`YT2HS7@\h<P
%lr0nl'5,kA"RIpnR)qq8^;Gp%dD.pl<1h!KpE@=9Q&V&M"8e<ZIG.[g7fiLO4@\G4Tp("T8uOq;p=Tts!;i!c*]Q)k#50M=8S2nd
%!UN`Op$Fb9VZZg\gfAEHpe8IeV)]5PS$N.mPYce+C_j&OqimN^.@YAZqfJ6L*akTQWp`?Ql$A:L9KN:-VmHhAg:QQO[)@t,p.601
%1X'=*SI*rHK^.TVoGN4.lBV*V"nnpM\E=%h.Ii)56_>+GVeU.q$g^f$#MP%p0<e4U:j-_aT9?N1G&E3d9KY1%'^a^s4CRY^dfXt:
%`:QW26n.Fr5?o:\^A?Dbp1"#Z1I"bHI?n+8fKMm0n5IWcS90[]P*?=.X/`8T\njmB8m60?6)(sIL-[gr\Zj[2JRe"i9D\cTeNPFo
%l6Y!HH4TJ.\E<Ka<p<o=.p"W4h9nuc.dKk_?K.5E)D?#>+d:dr?0Tis)+ir+bQ#jaC1ZJs58/MJN/kZ%g?!f>AYX;GhdM.9\GT-%
%11D6PB;jrZV]K%+rkDt*99KUIXrHCmXTL6V;bKGLn,Lk;8(#$Jc^6tiI/0D5SB#m-Ymb>iN\e9Ekn^FmFZf`b;)qkVe#K-ADQL4S
%VDG`Xj7(R!I%(CJgNPo:UU$+N5bAbBU_J.o_XnjL6*4rd/"2_H`pY_E.iV3O8*K1RWBg_+!9%m*P`bj_MM!FK*7=tNJi-s3%.()2
%C@dYZAPf%NB^+$>)_SN":$L9-)(r;uXViQ3f9<R(;M8Z_@WL3O_R_b9+Ut*Jd#.(CCYa^T]E;67'h1Q_]G+4e1gp#(&V/P"4^6rc
%['-u?>lj?I=NG>&r9fNa)oC1OF71pM/6$FTMTA6+9U2)AD/PeAm`!_Vg32mSrX]dB<O/_@YcCc@:H#QN!+Y(;4!3QjE(s>VL:g8+
%&5r"jB&FM/>qODanoAZ*\03!Wkro<_d7t?A@<CfS?&a&_@gn`Z:;,VUBk@=90i8d!#Xon>.)mDE7Q-/F/qrunE"I[h.s[2Yr]:A!
%lqUlTEl*.P4G[-7Vl?i>j6ll0]BX`EruDEaPV#@)n:cFJ%Y-C8f%G"Ds.)>+\/:3m[56V8a4hOrFNS=lrgEKK`Kad.a5[5Dh/%_a
%[mLGPl"Ju;D^FR:?3Y$Vm0d)Z`;*gE>1NXur]V4e$Q1!J6Zs#m*H-%=g*S%WFJ4Fa;PIun"#Y1@q%IL30tpPAeoVj/a60H(W<=;h
%Dr*THU@4@*[F#arbjO=lO"n8lA/GGI[F&G_f4iB0.WnFH/_O(;.h2;g#@OOh0Qe#29$t?;gr/Q6P!;Ed<&)#$j_<dJ10\dmmT(;E
%Ha\t<;T\KDn7kNh/Cbmb@p=c:Q.$8!j)2O;*b._0(fg0A7WGn_YBhXiTG1)T\K#obHF,^'1/)7DX`M5"0KVVP=ZZq(#^>#XE2o44
%cXsOEnhSGfRTfnY4W/IU?eV1Wa4A;eJj(%d$ZSd=_-F5/+ugIjYVJMi-\U-a@^8SNn9iM_IO)*DjT_,r24DYK^]jIN^kY79JJtth
%kqQU>?':.VLbciAS2:$q#p/Ro>o-G)+S.Km&"T.Gb9=Kd/sbsL<02A8FZeT.2i-Eb<$B^-Zl8(+"!WK&/E+2#71Be&XG&uGq.5^9
%"X4_bSm&-nD5EA=Wcg7j6O=tBaKS@@"\%?3)+JLR$X8<((B$#8V8JnmI]6WPa'?M0f$I;ci(tGMLs_JU9nd?Gl8ilW%V/O5!^*X7
%f)R!1/0T/9L&7nu'rmB?_Kh#<V]6=Of=GCqnt8aCU0=pG?7jA2Hd.O6Lesd,B@8/S<V\e-*]*:,AD4g:b8PWU'jGQ)_/P!'G62f/
%Pi(hi),mE2YFX:d0Ctm&_.she?\8jQFqVnBmu8,sC>CM.<!QL(,u`;:86U^OWdWU)(BE:6+,6ss2M<sR7Xfg?d=kf14KrSN(8&.f
%aub_T$b'*5O,MQhKuP8nDH[$*KrQ_M?GIs'9rAV'/lGM5CUBsD#'TbI&Xh[_TTo(?UBZYl!Q3aA^%+V&:F>l<9r*=q0Z/=udlJh0
%lU'5FmFC1<<#>4tE_9=JV4*l3*I)'&BY7m6G]1:>D3$^o,-'ZXbE^?BLa[miBq9+8*d.#c]BIVR1Z["5"8gt&"(uiPW09$cb`7I*
%Fn.iMg?7:[A@OM1W+Q(B4$s5d8TH`;;A=i0g*(n*'b>Z6L-Afe4f%h:c1-/E&GrBaI'Jgm?<sI4"pXQi[RY:-NfRb?1]nEdhQ'27
%7FnA9QV/N:0Wqk\*og[Z[f(P8N]r>/>VM&4&h+dmS,EgXMF"LCN4g)FZuXI'Y.CE)M?j7.:HK8W33sTX/S-h@e8U7j2aA=R6\Ti;
%'3\>J#$U@$*71/277-RB`._]JXi[ZgM+lAe',_mhg(*=d9[g[QkV/l6"4&I!m@fnIh+!&fA2h2^Kd7SU,:__l$pt[#h/'K^pk']G
%RVKF4OG?"0P%YPjB_p]a'M+rq4JL&T4p$7I#`gBMj<"Os1l=d[)2%a`El9(AdA25=]+IT.;*6%ETMC"_9)>?D8'I>[d*hneTC]?T
%PMRU.kIIZ*$1u;G1p4cW\u^ud5Q$Bl.l8\^;KqQP$<;6&GqU[)M%4+l'jaq^\V%ZVb6g[<6bgde$IsQUdk3/8p1Y$V,sC]!ogfUu
%XK_$(GMAf(0]o;A&!$mY*I-P:p2,S2"dars4?Ufd<r*UR)QJ?LrPHI:k&#mN"&?8P]^YE@;lrg*n5(Zfg8A,FFQ&oO\;H,+cZ%j:
%[PtBfS94O[L\h/hhfbreJNEG?6g`RfC'V/sT7I@\[0O_XoGK8De@t=3YCo%2_F*]6M9O[f(ESILOda>")s>ISVh=H/G(%emLLMn'
%hfd(%\#3SXW)VE%n[BMgf;BX/iLtEQfjs%1/413pC<+6OZKm],4;8X8Zigo)1t;sE%n5P$H/YH+/%c>@:>R(3iLtEF=onLd(EVl!
%7rXb%%u"a19]<EI`d468_F%ouWnhi3&tPG2dY3J14.9uAHhrGOg*PV2niZ`b6d66^-3JCN$P0WkOtVPQotj)`]eYcaHM*X5&,53d
%End;Mf(U=(*br0YOm"jm_F*_F%aP2&JJTB!"\Q(EiLqF9Kj&3ZjS0)nQ/$cG[R41$naRD:C>X2J3Z9&`:sB54jpW%Il5uU?Q4"52
%D`]fDWp<o7Gi1`=B=Km"iO2+QUn)J`Tlqs/Y.DK(LPK/4.)5.G/(&M'+[?sT*D/3]Ys8it;MU#3Fdi;`LYC%7<74OOn8Q-P,Pg<6
%a+QAA$P/<;iZ<@'TggQ%fqYt]*,sl1Ft4nlpCs2)eMjagR:r:H%g-,ehKC<5[$*+)jN/h,G,UtE5N'CG("Y][f$86nTf+j_P5*KZ
%4;9ME+hF!pmJ%&"&'f;iR<Ar,8nt0JEoE_cD23n4.&pTuW9l<3Fdh*"4Q+(DD3%P66h6TP&%-=;eC[k`m(u-WgC?70C%rAp[0mMQ
%X,g8dlA&_kW.!EoU"q+A(ER=0!1EO'^FBUkn%qG/>9PXD5Pi5a2-]&"S6Mu'Ggb;'\SGoObfXLMhrUb'1=d+dXe$-UY4n96-ma3X
%$r:9RMmo:Wj@[?Sesg/`fd2%8/d:*>^:QsmBBcND>-2\nCLZmQ"u`=eaI$8h>79S/cbdn1&Ck@#gn[PKbe>e.?G!7gJ,N]N;dV3*
%qj,_!R6,5qmi5AuhI`t*GI`h2GrYMMIgn0b_+;4P]t+$C#JXoBDE-hh]LHf&[MP%)Gh;(c[1F29lEaN;gpdYR^,IFK_=%X+jN[7_
%FTfe3b@\FCMgZo*b=UF%q!NpPYLf12kgoZVS$lJtp-S!>X]m88G4/Mg_")a`6^*G$VQ!V&nGl)>FnIM%@f$&]9)*6@N6YFD)#a/3
%`X3l)ID$[imH[L-Z*_(,KgqQiW*A;%M+q("kBZ^rX3jQMJG8;4Dk<<b#/9;dTM&f%@L;*Qr`&8TZ`j*RBOLWD1?!AF])dBJb\!kd
%-%7"\J,sSjla>VZ7UlU4e;!j<+5/'LX,!Tbb-G.HBIa[^m]O:DjtXf_Q8uITH08K;DIGidblT%6buqX2]Z)Ld1&.o[gcN#k-1e^`
%i+dNLIS\&5M?X;bS.[2IU$MW:I%i!*FMB4HPCG%2gS*C"pbLma-H[4`AfR_D=0ih<R.9nNk8(&6f0fEq>7?oiTV7-ZY$L1I5WeD&
%Kd!\+e'#\1ju"&YG.t%qZB`JN^5I;N_o(]s#;G;oQPVuFh+[U9$?juK[).2p403AaD]-7T$[Q[F^Ml9W3<Q^C!Pr0rM6P&dpQS_:
%A($?#!jgH`U\H1'pN"$EI5FCJ6pS@QbXK+HGI5%c.cG:"H_9V=`?B[Ah%'5c0(FRol]lsMnnFh2^$p])jqBs]jer"Y>kF\NqhD>0
%>Gq8.Q@6]bI-X64!#bL`1be'aH-u#?GgV\jTS9W.71\d@%re2+Q8?1@Y/?=pil4Je(M)sIRsF,G&rs53N2a7<6C,Mr4\6X-jb)Kj
%3W>I"6-e;mmCqGd:qI9PS%+&4G<s;+1/et*i<d<PT]m&e&rq&\%`uZJhK^-'aaJH4c>;n@X\)Vdk(Y"Hr165])VrPd5rleZU_?(Y
%9'u.OFi-r1=-J#q\_so.R1ru!,1C@<BDJ3l`\e0b$V+ZbA=.Vpoq8@WrttTObh)+T3?`/B7&)-Y@:!Ic4c"jrH(Tjmn^5BKs!)3)
%oE)4sHc0&_3;A;g_\2slcgH$/A[YEMr2^M7^b8Jn$372W5UQ2F\$T(p\XRWbn[4*A!/-4i$M-1M'nH46@2gGHc>3WS)scDd;HpHm
%YW['$=&?_E]=5V(ZV.Ljj0E:i>GC^@L=s6Zl?2e@7EZa;:884Bp_[rmlnD0tBAggt$OH`E$8-!N59nM4(CtJNMI*ID'%Wh&;7ql)
%H<qF`(O[ddP9S">M,fcG!DCuRX$j^B2msRmbLjof#'^&m"N^(>ZO709>&^$4]OEHH:&;qO@YnO-<#*<&UIn]U+$d#;HH.Ff<+h&0
%,TQZ%<`Yj4H7X>]\,k_Xlsjl!0bkc4edFIs0t`$<;ck=fNaUs8.1&I"Ke<VBQ-)G4!t'qkn`H!RFDW>*K!/ih3h?cnj>^"(l!jl]
%<@I)_q6Q,NQl<h3X!.6a@J0H"?T0usne]3j_eQG@8p2->nrT`+;k7")n,;W/MS6E,;5.DQdfbq\8ZJ%ZM8i4k_a"q'i0X-ik-pd2
%);drX?6K*J1bA;QcOhD<pr=XiNMPf;hp#@J$=)g.bbp^H64/JY4G5Q"6K1K("=<B"EVM<)Mi$d;pWa[^MN8N<hd,BNQV?,9^4l#?
%8<0KRg2Ml&E.:]i2I(N#RM(!'_B/+>"lC&CGBoTKU[%:;on$GPP=qh+PlcE_k)uUFKf60WA^Df?UYW(a$X<cUG)9*HHpN=lUK(bi
%39drnDiJs\^eiGgf-h;NU[R,]p+kO=D#2NB4E!1ogYYWYTIUs;_?;U,Q^hRu7COf:pQ.b_q[u*Y85Jl^$,2n8]Cq:F(G4\1]JJ^"
%N#0je5XBi>2tVWR\I!AL+CVUnOVe5>C+^'9R-VqLj%&BUU*i8H%ke;CG"C\k_%5e`,eo,jV:'GL=X\plRd6N>-hIo=9@US\SQqrH
%!A[=f_F<j[8*:H-Q\u%Y]H3m"pC@o\B0bM&HjW%*$(eaZrmeSK1BGVa:PS>Va^>YQjmSNXR+O2n^oL$nBZ!$>e=Y:F&G$VG?(h:%
%-ffg`]5&S^j5<[WPT!rl`c)mR,Io8'<Hhh#D'TDo/[n#SFGgt<aCmKRGFpmikE\2aAr91;_pu@)LC)RlT%pg^JX/"QS'+,E06tn,
%'_Q2!O4Um*c&"RqOQHN_%XDeWnkmCQl-!t,.V?+5g`G\fdam2O#5MNPO)F2PBiD`/&b&@2pW4>?p=q$d6_@`VOc]9iE-"]?knW.G
%AN%USQZtDtcS\3)9eu`HNna[0eP-d1]=Sm;YqB3_pEDUkh^3]lCWuAkcb-Xu1iQjO'l)Q!oDtA9a6^:>^SF&VaSX5sP]d4HnBgU8
%UAgW*E,O9%'_[]((K!N6"J5,'9r8PMWr!lVL^[s`.KP-l>P'ZF2>X\D]A[fU2n4-d=`ltc=3V1lX`n=0Bss]fA;boo<')^F_KfZ;
%hdZ;hTMq]T>n1`0Rj8hoBaB6`EPEfcYK6Yq2I0;l!^j?,'K_5jmtd.5BTca1U%X4egqn_!\W2R\"^.hAMj$k,E)@?$\ro[Ge/*]X
%L&&\WU.WL;rEIb^Bl4c)HV!`K`*V.K5^o@K6^!sIQmNek#l1OB)nh!mF-0gfZCW2C:\,Gk<3@%q^!>,`=Q7VRpPJ<"\kdZ:TkO-[
%Vd9*IiYT("/<pYs`9#FF9N=TCs-H,3\325tg$l<Vhj4ct!mhfTmpci#"=%ZJ*J$MH-T1sb=bq#Q3?-n?=Ug$'.+UZ>Aji<*JKjS3
%VDVIB>e@b,L?[#Qr/l6,rc!LQ'=%kj@V5poo;i&hles8NnCiIB22%$jeI6]a,L0@%1BGHp_Wq#;isC5/@I/bHNPkM)$rd/l9s;;r
%\5!aG-F1tQiXto%YBpo'LBdU5fiYauC]eo*h_)^N:gtR0k`p.KV%f*>C9/Q/W9[(CJlZ=l+3/s4qjdj306_k\J!5QYo.e$O_Eq);
%1dnum0>g>'3\IrNiO8H?Pga%pk1pK&\8l._!oV,TYu2!WX%l;A(rC7D/0?5fB/'I1n$<RsZ*B]ASfpY.R6c8a57%lV3K(V4>!;9!
%Y0ADs>Y@QU;/]WKpX+T&SPQUQUs(.C%_IcDE/%^Y.u@CBV@iVV^5r!=%Caj'K[+$]XLtZ69[KCM]f8=1pNeJn-iA/5>J<gPRr^if
%\VU7u[=WRsB&`qC!dm?hS<ch%bIh0t*Ic)46CCpY4\?n%8#%V8BVp+jjEYs1kAXT3GRG:`$uobGpiPQn#U\SNp*2h92E@jJ+4I0p
%rq+*F"g/g/>9LMR1O,VI,EX\TZVGQWJ'CA+E;I_kO"49E-I?'A,OIhk"F)Xb)d52qCH!8')-4kj&S=[8$I#SKB-dr9T*tQZ?q:#1
%hedqiqQ9'hMk.&sUPB[GUU8HsJ^.<VBYKki..NOQmea&X$d0gm.XhV*2>'9/Fa.uHA-*WPHrS/M3JI9lCOr@@T_pI(E/fD0kmg*i
%3\]Lh8C]/V$uU-M2XN:.OSik4i*(lHd_,[U)@8,/i4=X:J\d$YLDuD*/('6)Q+VntFKjIc"Y-e+c2\%`9422_6b(mB9X/Y0=T.0k
%9GEt4mlX2M'km]cM??n58jpFP"lW/(T_kQ:9]&<j\CVC%[Dq2WIJH2E`a<\9EKsg_A"5/+j[B$\R+ULcm"VSnK$\eMp7c(<e@[cf
%DV_<Wg]-o@1(Kn2c@%5r!M7a.D;HnqKaM9dO'n\ni3TaQ6E)E%L%s:8+g!./@PcRc-X4dQ:KoP"a;%mMS7iN.Bq#7f_X*W3=.;A@
%M:m$$hEVN5_@+&#)GEs<l9hWQQ8T6(Lt.dm1\(hImigY`-NVS(%tuM%BDEg:XIF$<2N^8"-,pU_10;1dKJ'RBhHWN=J1gQI*hN7;
%K(M`fp.iq^:rq(0i>[^E6RkDkOT@d9>S0q_ScfG?Plr1WQSJU7?]W$:aGcN).oTup%6%pJ.g)KH-BQ<CiJP[u\O.R-&oB$*0CRKO
%mB"1;b`.>l7]=d8j\]c+,uQUJ"NIF*KL^7]K`&R,8k5d*!3T)g"?Fds'ILNsoK<N3aNf2;1mp-(KR<o'r6>Puq4fqZ\l/f/C[YK;
%pHq2o!5'oCHAf-1pt,k)QQ8WFXQ0pBN!H9t,$)4;'7_hN7b1ngo+^Ce$[>282C=]m1gk2Jm'fm;HULNHE(C0O"OOWe"tYIb@27Q4
%!c,OS3.d2AE0e@KU"$DV67iA>1'0kY\,r[W<amO6`8'G&CLA?'_PD081gkP%=g50`fO"#3?ala_jC0>Xfl\)oO9&jeXua^E\fD[:
%m(R2kRGI>(PhGY%]pLrH>KcAZZAm'\G<]fUbV%pffDR!)GLJ'S:W2'JgUg2gs0F!+P6V&*_f()*S%Kc//S'*>G.i3kAl$ub1V<PE
%'(\cJ/p:`J'u'!G)t(qcG"[qT/b@AuC>$l"mo@9l-KmQ;=G?ddK+6J[7R$0jld_2.+t/RlX;[iKqJ5I@:DR.(RpMg[Z5$#H7?S7t
%d9Rt?A-6@=e@$1!d5r2D&0A@Tr6jNJ%\cD)FAU3#A2t@@0&(_tIn6:B_)F.$bkA?,BmaVb&6?r!'Z)9SL2?F8;RN?(*(beHLMI6(
%_8tjKm:hD,\fg[Zfs_8J&2i.&`+VcK+Ze%B8Nc\j8HmcYLQO@F.*i&M$8F,3l\HB'n\cj,21Q;_f$H2<Bdj%+1m!8`;NL3gHfbo&
%2J-ige+O>MN!pFg7d,lt"V%Ql7!mP,8FqipE\i!]f79=s!X*kt5Ze#g-Pm<4JRrt)$*kV3880fELTrF?QSK*U$9N.e/C.#rQk&*o
%c=$ts(.)t<Qmu)jVnnG.*df')?B-.8msmLPaTHI%f#fc<_IT--J>hJ6-q"f5O<U1qiEkUM\>*O@3LW@NA:\&7<Zs%<0TEL\GVu!<
%#**m,TVt1AUk%WK!*<dmB;,_kP3ur/4p.2N^)),@/MI>I[-s9E(1,f&JKj.gpZ(eF*I=Fi']PjA%!\0+.Z?s<JsJunP"7;NY%X[]
%L?Fj^<RqZ?A>''lf+uJ]h3d$q,^T]K\@#"p(mm#rE9TN:(GiKN??eD1\5:!G]Yf"=`+E:$esfr(-q4[^SYC6O2;Fq[5pYtGJ^bbT
%c@K?6A>'1jag6bDjV6jX1N3U++^r+C\e0X[bc=u.Bcq/'opj<TH-l+mh<+o[N92"N3dS;f@orl:e9)`kGAsH8L<f8,8%i[XY*L?F
%DBI+0`-T4<[i$gY(bA0b<2Y%-!@.5?X2+RLSRe+W_cZth[1!^VDWm>-6=hnT"oPdh/9*s!n0Wp93:R%5:"""D4:LNk3XQ8F-P#!L
%hd/KkM^kQ=&?c*P/mZAJF&&NV-2q9"/auTqTIpK5iY[j_1t$%a^_XiA,pBgBG)kC4:s.(?<.RTCB!6+5Wo([FI&VMHd`qoD8@)4>
%`Xc-p$Ip<8)6(M5,_qXDgAm>/E>BWjHRUT@%QIu#NKtDW:s*,^[3ij#"n[uF,)a=%kI:ZG_gP=r+'8O!b<QDRLOEJ@L'2#$'Su_W
%31G''=XE"HQs;n7@5F!9HRlQif!bifH-_0`o&90-ON=8O'n^]D\$W0D/<!%i(t%mgjAD^rTV3)n'b*!<4p_Z<VA(OR74X01<auaI
%rd>YY!m7E4-6AJ.KV/L'.lhC#_&f[P=>2`VkduMa;`bp*(4+g[(h(S-BS$/c*epZJ-kgELNtJ<8(g"EB^>Vs]NMqg!`5(ifiU5?h
%SEG@%e!'HQFLicMHn%SG%-O\m'1P;#:lZgi&d2bUPu(Z:;!8D8g";oR&fFfSFqDOMk?J<p^nE@@g&^,\4nbJJ%dS;ikrW8OV=[2S
%lX'A*'b,NqZGk1-1&k.see@AS2p#qH/sCHnrUPDeNHqS6g08uU%/E;T2kZ/2,22'%GJciSHoHBRItC,#RD*5*!i(Cf^k#$hI%+.4
%TNs`<2i=l!-p/^a&'ndkR8Bs0L1`,mnBA_?MK7q;RS`c0"id(:b9f'V(\m[?8`XpYDn-mmhr\)ZfP`QcB+V+5S<?-o:^rYrUEi=%
%@A$T+c6\%ir5jH%gV=MB2iijWJ549uM#gTb#pnHTMt0K0]\g2V&',cU#$)@t9flR_Cljp`YmBB`A<>Jr#3,ouE:8='%\<]FM$`ub
%Fu0_G-4]fN9Ic#n?TuC!nRPj;?WUiBgk<Fsne#$[,i^ql[hd9i`g8*hpnn8A]X\X\UH['3VSKJR1,7]Z[:uo.Q.-Yf_!<'>@LE#i
%nhZ-94b/eX\:(B/NbsD6FdM#E&Kj"cYaY;WrOMBMK.^2'JeKb.WTs<<Kbl*D/`^o8^(\eWN%"M\YX1Ki^^oU^/.OYk/O5dShhki/
%g`@d7ai[^32?Z^^hkcIM$p9h;?o+@_FYk]LldpF-T1r.$,Kp?=Z;=95`9]a3(BcM<:u_<Bd@\+cXg-h1>8F6U\^&V2bk2t4G*@%M
%Q[V@ZR9Ks)A>D8"oijX3C!_oR-=70?I$8neNE[eR6(\k`fYWfV3XFXrZq+;Y%tq#b:D79j"sX1eT2s&]K4V$;qIE2.)3Yumo>s7Y
%l5@7u`Bm%A1A>MnPar\dD"g)4jH(O^[DEfgs33r5]FtJbE@D;446q$?[@`+&%WKn2h/EkZH\gc@'>ZPX9N/_SNXA'4M?o^pDYaW>
%.A5tB1)G#c*<MP,RKEWQ&*uq(XAUXo]=>K,8csPq!FN*.^(5FZ@]%ZR@*TFGH4C#Vd3]4of))7n556[BH"%4/pR+FiT4kiFXM$XA
%'19hCr['@1\i@19!c0P3(Jk]cT1@P`QJ@cN0O4&11kf`MMu%ui!;LUV#_;Ve/9(N1p0XF*-bE3=96<@UM]Ie8r?c-3#-R/u5I,W$
%()[$h3G+L0*g-'rUjj=pqj@dQKEl0!gk-jt,C28TjHJB*]LR2H\DKo"%n]%E!>)#?Q@!S+o+-/K"'%lQd<?oA)q>U#0BCs+qdS!-
%Or"m>3Ir#3]+@M`GhIK4^k4\.5(^a]"s7UuVZ=P"?j^F-CG\@N3J#gYE_)$Q87Vk+o*F(8!O(;STQ+p<'5@Oi>GtgT1I8`YfC-=c
%b[:lodj7<^NNHOF^icXu1"-=H).]A24JZn_Yf<OJ>Dl6QJPTD`2?\flMc&p_oUSdM7mRq-H',Bm6^+%.6="\t,PTSVJ^2mp9sQTN
%RY@hhViC:%+$pBVqW_Fm6Im"Ypn85;68lFH+=E7>Y`2gM<r,='%&h2Z8j`AD?(AmWN-[lA=sAK'*Y&)3?OT2XT/<G9SV>a]kNpNF
%#L"_fG45@O`Ou>=)\<oeW15>&>RU%Ii!V^l%E-hT#B;g-\:L"38\fM/!5#7?p2=hKAN]217(DBN>UfEbRQK%,VEbfR-3L<QX*BBG
%>;,Tl,!5Qan,`0m@4A]+R0VaU0dmQd;,nE;q\9X"^QCkQ;W3C?IPAs*@FFp$pN=$>@JSG8O/6n?H"!(EW*XcVdaN>i[?PYsj*8Iq
%8t3Sd1Aqao7r`J:+qd0@o@8%lPP*c.A,<I?E1;:VWm@"`iHT,m?IJ/]UcJ6T>B9PNRnjgSMqE_:gW5^ROWZZ0?&g9KDK^LSbfd&N
%'f1<Z7qF3,6)fubdDDu0<DO+H2lr4+muTU.`?a64XL$ZB$1mfmYJC+^#5h"J5QGE2;=UA_Zl#<7jCFh9;6HDRUC=>]b&N&@,O-5%
%`Gj'<K/%Urm!CZM\0W'P8g`p0+(%0iJ4ch/=8\(S=:5MM[@/+mgAi57"7.os(,]=;L_&nRBAhBQ\/0K"pM=d,K/DAn*Q&oRU=o?j
%[2/4-6H^LZ<N:e2R@A9N.TJii2BL.UX&KOn`/'t#X&KNCDoBq1X&KNC>:+M?>GZ)5?m=f^[S#(HYsm5VZ;moZb/E:qcXX"T%2FcF
%=Bf>FW2NU@Y,VK[,#>F(XUP6*)(jeG?JR%\!+*XK$G^:cEG1;:]NMH@\XPPr*4%6M5SfF.d.H`6*o?@:6AD0lr96^daDR@Sqd*kf
%"aRtKc-4H/fP%PMQTiuj"I!`;kg"f'f*J/^O1T)3-5i49mM+@tm8H1L#\XE;9&N!5ghBYoaTh+9&.^<N]04.citr\j*N+4gK]&5q
%12(+LffW]#p57A;b@WS@bbTTNa#MSK9HO6R^e>hH$60uYf#7s&(]u6J3^[05,!KffW0/Ub]9a?P*ETO4ND0INn^T)k.^%B[$?J05
%"*VmI7faK(n`i3C]AXYF>g")=NG@>V:haANKP'N`;3p5tc,n8$#A(@;5ad0u9aB>806NZe9FqV&C`5td_T!)VBUDdjpMGRnSdRnO
%[Gutt'SE.I@)!Y045'(7QS(7Q6/J^_$`lj]L/n<ppi.E@#4J5lnq1ItS=]l(cd'dp2QdErAMm;L6?7DUe.4Vd"E!1RFIb*=7JCeq
%9<o:_Q."NGOa@X6AeGZ.1+XBUXG6gW5)XuWnTc/#Q^PIm5'eM_+2r@aG^1NURrLHuSg,'k3uJ<"Y(F/O2\Hrq>b[W?a[)^\k$i3c
%#d".*/9<tWZkFbjh5T6AGoIsSlN*P1M(mdEnbaFc&6-`P`(bu#L'FB,JUNY4!AW2;9RE)?Wk_u<-ACu"F=q[U?ZY+i]k9ZE,H1=a
%a>!"5i*f'[1#cn!K_JTp`e!XkD2`ApphB!*nB)6;^4!(O&TUOar,q5VS2n'SjKJ0To2k7],Gq"j\"r)gM^*g\TtbJS0%`6uDFqrW
%5?f=&gL$9qRpV`$DA&QmoW.T8R=*IdF%],^,rR/6B5U9iZ%PO']X]>b`0*]6hTM=.9/(>qZU]FY0c"D^^t72rX2\\^>G5,MrS1r[
%Z)A.^4B\/&^b;)T0^p1^)ie7_7-&q*#/Q';r3cqp(d!'@!d@mK+aUZebHA>8a6WG/\JVK!HkAa'[;W(I&pY)$@,C=(\)S9JcmPn*
%?3cN2-u%4e4me_f^b2q^:]!ZOmiD=YZ+Y\f[>47@3r%aSU)4p\0tm3gGVBg<JU^&h@4W7LhZWke5:l`-NLIi>f%N?CT??)!T,5Gb
%O"LJM2](9dlsac4cTq(i"T0qn`@q/g#\XnC?d-Jr&eT'7*s2?Gj'I3P%tSXQD_M_0>S&(&)tIK9iL@LELPR&O:@qT;oL##8K!n,:
%L&Bka\6ip>s+9P<BSlaA)Xmq;Ih]?0I2B[#h@L:5i*$WKKK"L<!uDr&rX7'ahbX5Eck8P_r_%^]>iPkr\/s^r\-3ciZ$AtjF\idV
%$Qi&L_DEU0E:e-0T9L,OakpRBBPa%$+7ih>JUi@I,86M"&=S;*m#I"tURkkH"&Y!W'-E6Br[>Uqjn2,2=?(mX"V6B?n/">4^sni?
%JG8&+7\BK:#R7sFBLJ5a!#TkjO%ACl&.2(m2@p:BM-s<T;BQMT59n$3bJH34knUoHbqK)C2[=a%r%u5"LhE(CV0I0oZ1-YeO`G<5
%;2_;N_Nc?X'/r+E41+3Qr;;89).FD_(FR#PNhTO6LVW0bnM<[#aiD;,kX<K2o`oIrI:+@G6X_suE57CJd/Y<iis+fO82p.O5O.o3
%+En)2YULED")b%d0Y7R''g*=m"rqSUl]9$W_Oeq^?\'E'0=O=DZ<W+>)&pVXi<Yt3:_4/1R0eY!ZC8[6#JDI9E%M:-JKX<%^`*bR
%^c:fhBFI!GU-P0@4Ff(O;)%'4n1ub26kmuS&>1U+)SGiSg5:R#J1#dc80>j#$.M9E]c$H3"&K^8TR[0>W'NX]l!hD?JAdrALDHd\
%EF,!S-M8Ki+V]W!Y,u7LW]AXJ!AfH]M[+RWf<sRZdTd;I^7Z@5DMGna\JQq7E1SC,nE=>mSnnD/ai3Cjq'5YDr"8r2?ki'CdguIC$VV=^~>
%AI9_PrivateDataEnd
